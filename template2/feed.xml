<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
	<channel>
		<title>Tobias Ahlin</title>
		<description>Home of tobiasahlin.com</description>
		<link>https://tobiasahlin.com</link>
		<atom:link href="https://tobiasahlin.com/feed.xml" rel="self" type="application/rss+xml" />
		
			<item>
				<title>Breaking to a new row with flexbox</title>
				<description>&lt;div class=&quot;blog-banner&quot;&gt;
  &lt;div class=&quot;blog-banner-content&quot;&gt;
      &lt;div class=&quot;flexbox-break-banner-logo&quot;&gt;
        &lt;div class=&quot;flexbox-break-box flexbox-break-box-1&quot; style=&quot;transform: translateX(-60px) scaleY(0.12) scaleX(0.12);&quot;&gt;&lt;/div&gt;
        &lt;div class=&quot;flexbox-break-box flexbox-break-box-2&quot; style=&quot;transform: translateX(-60px) scaleY(0.12) scaleX(0.12);&quot;&gt;&lt;/div&gt;
        &lt;div class=&quot;flexbox-break-box flexbox-break-box-3&quot; style=&quot;transform: translateX(-60px) scaleY(0.12) scaleX(0.12);&quot;&gt;&lt;/div&gt;
        &lt;div class=&quot;flexbox-break-box flexbox-break-box-4&quot; style=&quot;transform: translateX(-60px) scaleY(0.12) scaleX(0.12);&quot;&gt;&lt;/div&gt;
        &lt;div class=&quot;flexbox-break-box flexbox-break-box-5&quot; style=&quot;transform: translateX(-60px) scaleY(0.12) scaleX(0.12);&quot;&gt;&lt;/div&gt;
        &lt;div class=&quot;flexbox-break-box flexbox-break-box-6&quot; style=&quot;transform: translateX(-60px) scaleY(0.12) scaleX(0.12);&quot;&gt;&lt;/div&gt;
        &lt;div class=&quot;flexbox-break-box flexbox-break-box-7&quot; style=&quot;transform: translateX(-60px) scaleY(0.12) scaleX(0.12);&quot;&gt;&lt;/div&gt;
      &lt;/div&gt;
  &lt;/div&gt;
&lt;/div&gt;
&lt;style&gt;
.flexbox-break-banner-logo {
  margin-top: 20px;
  width: 100px;
  height: 100px;
  display: inline-block;
  position: relative;
}

.flexbox-break-box {
  background-color: #fff;
  width: 100%;
  height: 100%;
  position: absolute;
  top: 0;
  left: 0;
  transform-origin: 50% 0;
}
&lt;/style&gt;

&lt;script&gt;
var postMasonryBoxTimeline = anime.timeline({ loop: true });
postMasonryBoxTimeline
  .add({ /* just one line */ 
    targets: '.flexbox-break-box',
    translateX: function(el, i) { return -60+i*20 },
    scaleY: 0.12,
    scaleX: 0.12,
    delay: function(el, i) { return i*70 },
    easing: &quot;easeOutExpo&quot;,
    duration: 600
  })
  .add({
    targets: '.flexbox-break-box',
    translateY: function(el, i) { 
      if (i &gt; 3) return 20;
      if (i == 3) return 0;
      return -20;
    },
    translateX: function(el, i) {
      if (i == 0 || i == 4) return -27;
      if (i == 1 || i == 3 || i == 5) return 0;
      return 27;
    },
    scaleY: 0.12,
    scaleX: function(el, i) { return i == 3 ? 0.72 : 0.17 },
    easing: &quot;easeOutExpo&quot;,
    delay: function(el, i) { return 800 + i*20 },
    duration: 700
  })
  .add({
    targets: '.flexbox-break-box',
    translateY: 0,
    translateX: 0,
    scaleY: 0.12,
    scaleX: 0.12,
    easing: &quot;easeInExpo&quot;,
    delay: function(el, i) { return 800 + i*70 },
    duration: 600
  })
  .add({
    targets: '.flexbox-break-box',
    translateX: -60,
    scaleY: 0.12,
    scaleX: 0.12,
    duration: 800
  });
app.animations.track(postMasonryBoxTimeline, document.querySelector(&quot;.flexbox-break-banner-logo&quot;));
&lt;/script&gt;

&lt;!--more--&gt;

&lt;p&gt;Here’s the challenge: if you want to create a flexbox layout with several rows of items, how do you control which item ends up in which row? Presume you want to create a layout that looks something like this, with three stacked items and alternating full-width items:&lt;/p&gt;

&lt;div class=&quot;blog-content-wrapper&quot;&gt;
  &lt;div class=&quot;flex-rows&quot;&gt;
    &lt;div class=&quot;flex-rows-child&quot;&gt;&lt;/div&gt;
    &lt;div class=&quot;flex-rows-child&quot;&gt;&lt;/div&gt;
    &lt;div class=&quot;flex-rows-child&quot;&gt;&lt;/div&gt;
    &lt;div class=&quot;flex-rows-break flex-rows-break-invisible&quot;&gt;&lt;/div&gt;
    &lt;div class=&quot;flex-rows-child&quot;&gt;&lt;/div&gt;
    &lt;div class=&quot;flex-rows-break flex-rows-break-invisible&quot;&gt;&lt;/div&gt;
    &lt;div class=&quot;flex-rows-child&quot;&gt;&lt;/div&gt;
    &lt;div class=&quot;flex-rows-child&quot;&gt;&lt;/div&gt;
    &lt;div class=&quot;flex-rows-child&quot;&gt;&lt;/div&gt;
    &lt;div class=&quot;flex-rows-break flex-rows-break-invisible&quot;&gt;&lt;/div&gt;
    &lt;div class=&quot;flex-rows-child&quot;&gt;&lt;/div&gt;
  &lt;/div&gt;
&lt;/div&gt;

&lt;p&gt;A common way of controlling the positioning and size of flex items is to use &lt;code class=&quot;highlighter-rouge&quot;&gt;width&lt;/code&gt; or &lt;code class=&quot;highlighter-rouge&quot;&gt;flex-basis&lt;/code&gt;; if we set the fourth item to have a width of 100% it’ll be positioned on its own row. But what if we don’t want to or can’t set the width of individual items, do we really need to? Or is there a way of just telling flexbox to line break at certain points?&lt;/p&gt;

&lt;p&gt;There’s no property that we can set on a flex item to make it break to a new row, but we can insert a collapsed row (you can think of it as a &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;br&amp;gt;&lt;/code&gt;) between two flex items two achieve something similar. In a gist:&lt;/p&gt;

&lt;div class=&quot;language-css highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;/* Inserting this collapsed row between two flex items will make 
 * the flex item that comes after it break to a new row */&lt;/span&gt;
&lt;span class=&quot;nc&quot;&gt;.break&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;flex-basis&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;100%&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;height&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;language-html highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;container&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;item&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;break&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/div&amp;gt;&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;&amp;lt;!-- break --&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;item&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Let’s walk through some scenarios when you might want to use this, and look at some interesting layout techniques that it enables us to use.&lt;/p&gt;

&lt;p&gt;Note that all of the code examples below requires and assumes that you have a flex container with &lt;code class=&quot;highlighter-rouge&quot;&gt;display: flex&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;flex-wrap: wrap&lt;/code&gt; and that the flex items are added to that container:&lt;/p&gt;

&lt;div class=&quot;language-css highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nc&quot;&gt;.container&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;display&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;flex&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;flex-wrap&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;wrap&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;language-html highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;container&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;item&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;item&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;item&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
  ...
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;inserting-a-line-breaking-flex-item&quot;&gt;Inserting a line-breaking flex item&lt;/h2&gt;

&lt;p&gt;Using an element to break to a new flex row comes with an interesting effect: we can skip specifying the width of any item in our flex layout and rely completely on the line breaks to define the flow of our grid.&lt;/p&gt;

&lt;p&gt;Let’s start with a simple example. Say that we have two items shown side by side (these are set to grow with &lt;code class=&quot;highlighter-rouge&quot;&gt;flex-grow: 1&lt;/code&gt;, and they have no defined &lt;code class=&quot;highlighter-rouge&quot;&gt;width&lt;/code&gt; or &lt;code class=&quot;highlighter-rouge&quot;&gt;flex-basis&lt;/code&gt;):&lt;/p&gt;

&lt;div class=&quot;blog-content-wrapper&quot;&gt;
  &lt;div class=&quot;flex-rows&quot;&gt;
    &lt;div class=&quot;flex-rows-child&quot;&gt;&lt;/div&gt;
    &lt;div class=&quot;flex-rows-child&quot;&gt;&lt;/div&gt;
  &lt;/div&gt;
&lt;/div&gt;

&lt;p&gt;We can insert a line breaking element between the items to make them both take up 100% of the available space:&lt;/p&gt;

&lt;div class=&quot;language-html highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;item&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;...&lt;span class=&quot;nt&quot;&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;break&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/div&amp;gt;&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;&amp;lt;!-- break to a new row --&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;item&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;...&lt;span class=&quot;nt&quot;&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;This produces a layout with two vertically stacked full-width items (I’ve added a border to the &lt;code class=&quot;highlighter-rouge&quot;&gt;.break&lt;/code&gt; element to illustrate its position and behavior):&lt;/p&gt;

&lt;div class=&quot;blog-content-wrapper&quot;&gt;
  &lt;div class=&quot;flex-rows&quot;&gt;
    &lt;div class=&quot;flex-rows-child&quot;&gt;&lt;/div&gt;
    &lt;div class=&quot;flex-rows-break&quot;&gt;&lt;/div&gt;
    &lt;div class=&quot;flex-rows-child&quot;&gt;&lt;/div&gt;
  &lt;/div&gt;
&lt;/div&gt;

&lt;p&gt;How does this work? Since we’ve said that &lt;code class=&quot;highlighter-rouge&quot;&gt;.break&lt;/code&gt; should take up 100% of the width of the container (because we set &lt;code class=&quot;highlighter-rouge&quot;&gt;flex-basis: 100%&lt;/code&gt;), the breaking flex item needs to sit on its own row to accomplish that. It can’t share a row with the first item so it will break to a new row, which will leave the first item alone on one row. The first item will then grow to fill the remaining space (since we set &lt;code class=&quot;highlighter-rouge&quot;&gt;flex-grow: 1&lt;/code&gt;). The same logic applies to the second item.&lt;/p&gt;

&lt;p&gt;We can use this technique to compose the layout at the top of the post by breaking before and after every fourth item:&lt;/p&gt;

&lt;div class=&quot;language-html highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;item&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;...&lt;span class=&quot;nt&quot;&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;item&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;...&lt;span class=&quot;nt&quot;&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;item&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;...&lt;span class=&quot;nt&quot;&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;break&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/div&amp;gt;&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;&amp;lt;!-- break --&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;item&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;...&lt;span class=&quot;nt&quot;&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;break&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/div&amp;gt;&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;&amp;lt;!-- break --&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;item&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;...&lt;span class=&quot;nt&quot;&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;item&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;...&lt;span class=&quot;nt&quot;&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;item&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;...&lt;span class=&quot;nt&quot;&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;This will produce the layout at the top of the blog post. Essentially an item won’t break to a new row unless we insert the line-breaking element:&lt;/p&gt;

&lt;div class=&quot;blog-content-wrapper&quot;&gt;
  &lt;div class=&quot;flex-rows&quot;&gt;
    &lt;div class=&quot;flex-rows-child&quot;&gt;&lt;/div&gt;
    &lt;div class=&quot;flex-rows-child&quot;&gt;&lt;/div&gt;
    &lt;div class=&quot;flex-rows-child&quot;&gt;&lt;/div&gt;
    &lt;div class=&quot;flex-rows-break&quot;&gt;&lt;/div&gt;
    &lt;div class=&quot;flex-rows-child&quot;&gt;&lt;/div&gt;
    &lt;div class=&quot;flex-rows-break&quot;&gt;&lt;/div&gt;
    &lt;div class=&quot;flex-rows-child&quot;&gt;&lt;/div&gt;
    &lt;div class=&quot;flex-rows-child&quot;&gt;&lt;/div&gt;
    &lt;div class=&quot;flex-rows-child&quot;&gt;&lt;/div&gt;
  &lt;/div&gt;
&lt;/div&gt;

&lt;p&gt;Again, we didn’t need to specify the width on any of those items. The same technique will work for columns if we have a flex container with &lt;code class=&quot;highlighter-rouge&quot;&gt;flex-direction: column&lt;/code&gt;, and set the &lt;code class=&quot;highlighter-rouge&quot;&gt;width&lt;/code&gt; (rather than &lt;code class=&quot;highlighter-rouge&quot;&gt;height&lt;/code&gt;) to &lt;code class=&quot;highlighter-rouge&quot;&gt;0&lt;/code&gt; for our breaking element:&lt;/p&gt;

&lt;div class=&quot;language-css highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;/* Use a collapsed column to break to a new column */&lt;/span&gt;
&lt;span class=&quot;nc&quot;&gt;.break-column&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;flex-basis&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;100%&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;width&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;blog-content-wrapper&quot;&gt;
  &lt;div class=&quot;flex-rows flex-rows-columns&quot;&gt;
    &lt;div class=&quot;flex-rows-child&quot;&gt;&lt;/div&gt;
    &lt;div class=&quot;flex-rows-child&quot;&gt;&lt;/div&gt;
    &lt;div class=&quot;flex-rows-child&quot;&gt;&lt;/div&gt;
    &lt;div class=&quot;flex-rows-break&quot;&gt;&lt;/div&gt;
    &lt;div class=&quot;flex-rows-child&quot;&gt;&lt;/div&gt;
    &lt;div class=&quot;flex-rows-break&quot;&gt;&lt;/div&gt;
    &lt;div class=&quot;flex-rows-child&quot;&gt;&lt;/div&gt;
    &lt;div class=&quot;flex-rows-child&quot;&gt;&lt;/div&gt;
    &lt;div class=&quot;flex-rows-child&quot;&gt;&lt;/div&gt;
  &lt;/div&gt;
&lt;/div&gt;

&lt;p&gt;This approach of using line breaking elements to define a layout definitely adds some bloat and noise to our HTML, but it can be a powerful tool when used in the right way. &lt;a href=&quot;/blog/masonry-with-css/&quot;&gt;We can, for example, use it to build a masonry layout with CSS only&lt;/a&gt;, and position the breaks dynamically with the &lt;code class=&quot;highlighter-rouge&quot;&gt;order&lt;/code&gt; property. We can also break to a new row without having to modify the width of any content item, and we can rely solely on &lt;code class=&quot;highlighter-rouge&quot;&gt;flex-grow&lt;/code&gt; to distribute space in a grid layout.&lt;/p&gt;

&lt;p&gt;Suppose that we’re looking to create this layout:&lt;/p&gt;

&lt;div class=&quot;blog-content-wrapper&quot;&gt;
  &lt;div class=&quot;flex-rows&quot;&gt;
    &lt;div class=&quot;flex-rows-child&quot;&gt;&lt;/div&gt;
    &lt;div class=&quot;flex-rows-child flex-rows-child-wide&quot;&gt;&lt;/div&gt;
    &lt;div class=&quot;flex-rows-child&quot;&gt;&lt;/div&gt;
  &lt;/div&gt;
&lt;/div&gt;

&lt;p&gt;And assume that we want to do so by setting different values of &lt;code class=&quot;highlighter-rouge&quot;&gt;flex-grow&lt;/code&gt; to distribute the space (rather than using &lt;code class=&quot;highlighter-rouge&quot;&gt;flex-basis&lt;/code&gt; or &lt;code class=&quot;highlighter-rouge&quot;&gt;width&lt;/code&gt;, which you’d have to recalculate as soon as you added or removed items):&lt;/p&gt;

&lt;div class=&quot;language-css highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nc&quot;&gt;.item&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nl&quot;&gt;flex-grow&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;nc&quot;&gt;.item-wide&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nl&quot;&gt;flex-grow&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;language-html highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;item&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;item-wide&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;item&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;If we then want to add another row of items below that row:&lt;/p&gt;

&lt;div class=&quot;blog-content-wrapper&quot;&gt;
  &lt;div class=&quot;flex-rows&quot;&gt;
    &lt;div class=&quot;flex-rows-child&quot;&gt;&lt;/div&gt;
    &lt;div class=&quot;flex-rows-child flex-rows-child-wide&quot;&gt;&lt;/div&gt;
    &lt;div class=&quot;flex-rows-child&quot;&gt;&lt;/div&gt;
    &lt;div class=&quot;flex-rows-break flex-rows-break-invisible&quot;&gt;&lt;/div&gt;
    &lt;div class=&quot;flex-rows-child&quot;&gt;&lt;/div&gt;
    &lt;div class=&quot;flex-rows-child&quot;&gt;&lt;/div&gt;
  &lt;/div&gt;
&lt;/div&gt;

&lt;p&gt;We wouldn’t be able to do so without resorting to setting &lt;code class=&quot;highlighter-rouge&quot;&gt;flex-basis&lt;/code&gt; or &lt;code class=&quot;highlighter-rouge&quot;&gt;width&lt;/code&gt; on at least some of the items (or creating a nested flexbox layout with one flex item for every row). If all of the items just have different values of &lt;code class=&quot;highlighter-rouge&quot;&gt;flex-grow&lt;/code&gt; nothing would make them break to a new row, they’d all just squeeze in on one row together:&lt;/p&gt;

&lt;div class=&quot;blog-content-wrapper&quot;&gt;
  &lt;div class=&quot;flex-rows&quot;&gt;
    &lt;div class=&quot;flex-rows-child&quot;&gt;&lt;/div&gt;
    &lt;div class=&quot;flex-rows-child flex-rows-child-wide&quot;&gt;&lt;/div&gt;
    &lt;div class=&quot;flex-rows-child&quot;&gt;&lt;/div&gt;
    &lt;div class=&quot;flex-rows-child&quot;&gt;&lt;/div&gt;
    &lt;div class=&quot;flex-rows-child&quot;&gt;&lt;/div&gt;
  &lt;/div&gt;
&lt;/div&gt;

&lt;p&gt;Cozy, but not what we’re after. If we insert a breaking element, however, we can construct this layout by distributing all space with &lt;code class=&quot;highlighter-rouge&quot;&gt;flex-grow&lt;/code&gt;:&lt;/p&gt;

&lt;div class=&quot;language-css highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nc&quot;&gt;.item&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nl&quot;&gt;flex-grow&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;nc&quot;&gt;.item-wide&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nl&quot;&gt;flex-grow&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;language-html highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;item&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;item-wide&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;item&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;break&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/div&amp;gt;&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;&amp;lt;!-- break --&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;item&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;item&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Yielding the desired layout, with all sizes defined proportionally through &lt;code class=&quot;highlighter-rouge&quot;&gt;flex-grow&lt;/code&gt;:&lt;/p&gt;

&lt;div class=&quot;blog-content-wrapper&quot;&gt;
  &lt;div class=&quot;flex-rows&quot;&gt;
    &lt;div class=&quot;flex-rows-child&quot;&gt;&lt;/div&gt;
    &lt;div class=&quot;flex-rows-child flex-rows-child-wide&quot;&gt;&lt;/div&gt;
    &lt;div class=&quot;flex-rows-child&quot;&gt;&lt;/div&gt;
    &lt;div class=&quot;flex-rows-break&quot;&gt;&lt;/div&gt;
    &lt;div class=&quot;flex-rows-child&quot;&gt;&lt;/div&gt;
    &lt;div class=&quot;flex-rows-child&quot;&gt;&lt;/div&gt;
  &lt;/div&gt;
&lt;/div&gt;

&lt;p&gt;And if there’s a scenario when we need five items in the first row we don’t have to change any of the CSS to make that work, we can just add those items before the line break:&lt;/p&gt;

&lt;div class=&quot;language-html highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;item&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;item&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;item-wide&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;item&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;item&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;break&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/div&amp;gt;&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;&amp;lt;!-- break --&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;item&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;item&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;blog-content-wrapper&quot;&gt;
  &lt;div class=&quot;flex-rows&quot;&gt;
    &lt;div class=&quot;flex-rows-child&quot;&gt;&lt;/div&gt;
    &lt;div class=&quot;flex-rows-child&quot;&gt;&lt;/div&gt;
    &lt;div class=&quot;flex-rows-child flex-rows-child-wide&quot;&gt;&lt;/div&gt;
    &lt;div class=&quot;flex-rows-child&quot;&gt;&lt;/div&gt;
    &lt;div class=&quot;flex-rows-child&quot;&gt;&lt;/div&gt;
    &lt;div class=&quot;flex-rows-break flex-rows-break-invisible&quot;&gt;&lt;/div&gt;
    &lt;div class=&quot;flex-rows-child&quot;&gt;&lt;/div&gt;
    &lt;div class=&quot;flex-rows-child&quot;&gt;&lt;/div&gt;
  &lt;/div&gt;
&lt;/div&gt;

&lt;p&gt;All that you need to add to your CSS to use line-breaking elements are these two classes (the only difference between the two classes is that &lt;code class=&quot;highlighter-rouge&quot;&gt;width&lt;/code&gt; (and not &lt;code class=&quot;highlighter-rouge&quot;&gt;height&lt;/code&gt;) needs to be set to &lt;code class=&quot;highlighter-rouge&quot;&gt;0&lt;/code&gt; for the element to collapse when used in a column layout):&lt;/p&gt;

&lt;div class=&quot;language-css highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;/* Inserting a collapsed row between two flex items will make 
 * the flex item that comes after it break to a new row */&lt;/span&gt;
&lt;span class=&quot;nc&quot;&gt;.break&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;flex-basis&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;100%&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;height&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;/* Use a collapsed column to break to a new column */&lt;/span&gt;
&lt;span class=&quot;nc&quot;&gt;.break-column&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;flex-basis&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;100%&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;width&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;You could certainly achieve the same effect or similar effects by nesting flexboxes and having one flex item for every row, and in many cases just utilizing &lt;code class=&quot;highlighter-rouge&quot;&gt;flex-basis&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;width&lt;/code&gt;, or the content within the flex items is probably the preferred way of controlling the flow of items in a flexbox layout. But inserting line-breaking flex items is approachable and easy to grok, it works, and the technique comes with some unique characteristics that may come in handy.&lt;/p&gt;

&lt;style&gt;
.blog-content-wrapper {
  padding: 0 20px 20px;
  margin-bottom: 20px;
  max-width: 900px;
  margin-left: auto;
  margin-right: auto;
}

.flex-rows {
  display: flex;
  flex-wrap: wrap;
  justify-content: space-between;
  background-color: #f7f7f7;
  border-radius: 3px;
  padding: 20px 20px 5px 20px;
}

.flex-rows-columns {
  flex-direction: column;
  height: 300px;
}

.flex-rows-child {
  border-radius: 3px;
  background-color: #A2CBFA;
  border: 1px solid #4390E1;
  box-sizing: border-box;
  box-shadow: 0 2px 2px rgba(0,90,250,0.05),
    0 4px 4px rgba(0,90,250,0.05),
    0 8px 8px rgba(0,90,250,0.05),
    0 16px 16px rgba(0,90,250,0.05);
    height: 60px;
  flex-grow: 1;
  margin-bottom: 2%;
}

.flex-rows-child-wide { flex-grow: 3; }

.flex-rows-child + .flex-rows-child { margin-left: 2%; }

.flex-rows-columns .flex-rows-child {
  height: auto;
  width: 30%;
  margin-left: 0;
}

.flex-rows-break {
  flex-basis: 100%;
  height: 0;
  margin: 0;
  border: 1px solid #ddd;
  margin-bottom: 2%;
}

.flex-rows-break-invisible { 
  border: 0; 
  margin: 0;
}

.flex-rows-columns .flex-rows-break {
  width: 0;
  height: auto;
}
&lt;/style&gt;

</description>
				<pubDate>Mon, 29 Apr 2019 07:50:00 +0000</pubDate>
				<link>https://tobiasahlin.com/blog/flexbox-break-to-new-row/</link>
				<guid isPermaLink="true">https://tobiasahlin.com/blog/flexbox-break-to-new-row/</guid>
			</item>
		
			<item>
				<title>CSS masonry with flexbox, :nth-child(), and order</title>
				<description>&lt;div class=&quot;blog-banner&quot;&gt;
  &lt;div class=&quot;blog-banner-content&quot;&gt;
      &lt;div class=&quot;masonry-banner-logo&quot;&gt;
        &lt;div class=&quot;masonry-box masonry-box-1&quot; style=&quot;transform: scaleY(0.1) scaleX(0.15);&quot;&gt;&lt;/div&gt;
        &lt;div class=&quot;masonry-box masonry-box-2&quot; style=&quot;transform: scaleY(0.1) scaleX(0.15);&quot;&gt;&lt;/div&gt;
        &lt;div class=&quot;masonry-box masonry-box-3&quot; style=&quot;transform: scaleY(0.1) scaleX(0.15);&quot;&gt;&lt;/div&gt;
        &lt;div class=&quot;masonry-box masonry-box-4&quot; style=&quot;transform: scaleY(0.1) scaleX(0.15);&quot;&gt;&lt;/div&gt;
        &lt;div class=&quot;masonry-box masonry-box-5&quot; style=&quot;transform: scaleY(0.1) scaleX(0.15);&quot;&gt;&lt;/div&gt;
        &lt;div class=&quot;masonry-box masonry-box-6&quot; style=&quot;transform: scaleY(0.1) scaleX(0.15);&quot;&gt;&lt;/div&gt;
        &lt;div class=&quot;masonry-box masonry-box-7&quot; style=&quot;transform: scaleY(0.1) scaleX(0.15);&quot;&gt;&lt;/div&gt;
        &lt;div class=&quot;masonry-box masonry-box-8&quot; style=&quot;transform: scaleY(0.1) scaleX(0.15);&quot;&gt;&lt;/div&gt;
        &lt;div class=&quot;masonry-box masonry-box-9&quot; style=&quot;transform: scaleY(0.1) scaleX(0.15);&quot;&gt;&lt;/div&gt;
      &lt;/div&gt;
  &lt;/div&gt;
&lt;/div&gt;
&lt;style&gt;
.masonry-banner-logo {
  width: 100px;
  height: 100px;
  display: inline-block;
  position: relative;
}

.masonry-box {
  background-color: #fff;
  width: 100%;
  height: 100%;
  position: absolute;
  top: 0;
  left: 0;
  transform-origin: 50% 0;
}
&lt;/style&gt;

&lt;script&gt;
var postMasonryBoxTimeline = anime.timeline({ loop: true });
postMasonryBoxTimeline
  .add({ 
    targets: '.masonry-box',
    translateX: function(el, i) { 
      if (i &lt; 3) return &quot;-23px&quot;;
      if (i &gt; 5) return &quot;23px&quot;;
      return 0;
    },
    opacity: [0,1],
    translateY: function(el, i) { 
      var amount = (i%3)*26;
      return amount + &quot;px&quot;;
    },
    scaleY: function(el, i) {
      if (i == 0) return 0.2;
      if (i == 1) return 0.1;
      if (i == 2) return 0.15;
      if (i == 3) return 0.11;
      if (i == 4) return 0.19;
      if (i == 5) return 0.12;
      if (i == 6) return 0.14;
      if (i == 7) return 0.1;
      if (i == 8) return 0.16;
    },
    scaleX: [0, 0.15],
    duration: 600,
    delay: function(el, i) {
      return 400 + i*70;
    },
    easing: &quot;easeOutExpo&quot;
  }).add({ 
    targets: '.masonry-box',
    translateX: function(el, i) { 
      if (i &lt; 3) return &quot;-23px&quot;;
      if (i &gt; 5) return &quot;23px&quot;;
      return 0;
    },
    translateY: function(el, i) { 
      if (i == 0) return 0  + &quot;px&quot;;
      if (i == 1) return 24 + &quot;px&quot;;
      if (i == 2) return 38 + &quot;px&quot;;
      if (i == 3) return 0  + &quot;px&quot;;
      if (i == 4) return 15 + &quot;px&quot;;
      if (i == 5) return 38 + &quot;px&quot;;
      if (i == 6) return 0  + &quot;px&quot;;
      if (i == 7) return 18 + &quot;px&quot;;
      if (i == 8) return 32 + &quot;px&quot;;
    },
    scaleY: function(el, i) {
      if (i == 0) return 0.2;
      if (i == 1) return 0.1;
      if (i == 2) return 0.15;
      if (i == 3) return 0.11;
      if (i == 4) return 0.19;
      if (i == 5) return 0.12;
      if (i == 6) return 0.14;
      if (i == 7) return 0.1;
      if (i == 8) return 0.16;
    },
    scaleX: 0.15,
    duration: 500,
    delay: 700,
    easing: &quot;easeOutExpo&quot;
  }).add({ 
    targets: '.masonry-box',
    opacity: 0,
    translateY: &quot;+=10px&quot;,
    duration: 700,
    translateX: function(el, i) { 
      if (i &lt; 3) return &quot;-23px&quot;;
      if (i &gt; 5) return &quot;23px&quot;;
      return 0;
    },
    scaleY: function(el, i) {
      if (i == 0) return 0.2;
      if (i == 1) return 0.1;
      if (i == 2) return 0.18;
      if (i == 3) return 0.11;
      if (i == 4) return 0.19;
      if (i == 5) return 0.12;
      if (i == 6) return 0.14;
      if (i == 7) return 0.1;
      if (i == 8) return 0.14;
    },
    scaleX: 0.15,
    delay: function(el, i) { return 1800 + i*40 },
    easing: &quot;easeInExpo&quot;
  });
app.animations.track(postMasonryBoxTimeline, document.querySelector(&quot;.masonry-banner-logo&quot;));
&lt;/script&gt;

&lt;!--more--&gt;

&lt;p&gt;On the surface it seems fairly easy to create a masonry layout with &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Flexible_Box_Layout/Basic_Concepts_of_Flexbox&quot;&gt;flexbox&lt;/a&gt;; all you need to do is set &lt;code class=&quot;highlighter-rouge&quot;&gt;flex-flow&lt;/code&gt; to &lt;code class=&quot;highlighter-rouge&quot;&gt;column wrap&lt;/code&gt; and voilà, you have a masonry layout. Sort of. The problem with this approach is that it produces a grid with a seemingly shuffled and obscure order. Items will be (unbeknownst to the user) rendered from top to bottom and someone parsing the grid from left to right will read the boxes in a somewhat arbitrary order, for example 1, 3, 6, 2, 4, 7, 8, 5, and so on so forth.&lt;/p&gt;

&lt;p&gt;Flexbox has no easy way of rendering items with a &lt;code class=&quot;highlighter-rouge&quot;&gt;column&lt;/code&gt; layout while using a &lt;code class=&quot;highlighter-rouge&quot;&gt;row&lt;/code&gt; order, but we can build a masonry layout with CSS only—no JavaScript needed—by using &lt;code class=&quot;highlighter-rouge&quot;&gt;:nth-child()&lt;/code&gt; and the &lt;code class=&quot;highlighter-rouge&quot;&gt;order&lt;/code&gt; property. In a gist, here’s the trick to create a &lt;code class=&quot;highlighter-rouge&quot;&gt;row&lt;/code&gt; order while using &lt;code class=&quot;highlighter-rouge&quot;&gt;flex-direction: column&lt;/code&gt;, given that you’re rendering three columns:&lt;/p&gt;

&lt;div class=&quot;language-css highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;/* Render items as columns */&lt;/span&gt;
&lt;span class=&quot;nc&quot;&gt;.container&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;display&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;flex&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;flex-flow&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;column&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;wrap&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;/* Re-order items into rows */&lt;/span&gt;
&lt;span class=&quot;nc&quot;&gt;.item&lt;/span&gt;&lt;span class=&quot;nd&quot;&gt;:nth-child&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;3n&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nl&quot;&gt;order&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;nc&quot;&gt;.item&lt;/span&gt;&lt;span class=&quot;nd&quot;&gt;:nth-child&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;3n&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nl&quot;&gt;order&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;nc&quot;&gt;.item&lt;/span&gt;&lt;span class=&quot;nd&quot;&gt;:nth-child&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;3n&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;   &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nl&quot;&gt;order&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;/* Force new columns */&lt;/span&gt;
&lt;span class=&quot;nc&quot;&gt;.container&lt;/span&gt;&lt;span class=&quot;nd&quot;&gt;::before&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;
&lt;span class=&quot;nc&quot;&gt;.container&lt;/span&gt;&lt;span class=&quot;nd&quot;&gt;::after&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;content&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&quot;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;flex-basis&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;100%&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;width&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;order&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;This will create a masonry layout with items rendered as columns but ordered as rows (the gray vertical lines represent the pseudo elements that &lt;a href=&quot;/blog/flexbox-break-to-new-row/&quot;&gt;force line breaks&lt;/a&gt;:&lt;/p&gt;

&lt;div class=&quot;blog-content-wrapper&quot;&gt;
  &lt;div class=&quot;flex-masonry&quot;&gt;
    &lt;div class=&quot;flex-child flex-masonry-child flex-masonry-child-1&quot;&gt;1&lt;/div&gt;
    &lt;div class=&quot;flex-child flex-masonry-child flex-masonry-child-2&quot;&gt;2&lt;/div&gt;
    &lt;div class=&quot;flex-child flex-masonry-child flex-masonry-child-3&quot;&gt;3&lt;/div&gt;
    &lt;div class=&quot;flex-child flex-masonry-child flex-masonry-child-4&quot;&gt;4&lt;/div&gt;
    &lt;div class=&quot;flex-child flex-masonry-child flex-masonry-child-5&quot;&gt;5&lt;/div&gt;
    &lt;div class=&quot;flex-child flex-masonry-child flex-masonry-child-6&quot;&gt;6&lt;/div&gt;
    &lt;div class=&quot;flex-child flex-masonry-child flex-masonry-child-7&quot;&gt;7&lt;/div&gt;
    &lt;div class=&quot;flex-child flex-masonry-child flex-masonry-child-8&quot;&gt;8&lt;/div&gt;
    &lt;div class=&quot;flex-child flex-masonry-child flex-masonry-child-9&quot;&gt;9&lt;/div&gt;
    &lt;div class=&quot;flex-child flex-masonry-child flex-masonry-child-10&quot;&gt;10&lt;/div&gt;
  &lt;/div&gt;
&lt;/div&gt;

&lt;p&gt;Let’s break down the problem (or &lt;a href=&quot;#the-solution&quot;&gt;jump to the solution&lt;/a&gt;, or &lt;a href=&quot;https://codepen.io/collection/XPjvPP/&quot;&gt;see the codepen collection&lt;/a&gt;).&lt;/p&gt;

&lt;h2 id=&quot;pick-your-poison-a-shuffled-order-or-weird-gaps&quot;&gt;Pick your poison: a shuffled order, or weird gaps&lt;/h2&gt;

&lt;p&gt;Flexbox is not really built for masonry—if you set a fixed height on a flex container (so that items can wrap when they overflow) and &lt;code class=&quot;highlighter-rouge&quot;&gt;flex-flow&lt;/code&gt; to &lt;code class=&quot;highlighter-rouge&quot;&gt;column wrap&lt;/code&gt;, you’ll achieve something like this:&lt;/p&gt;

&lt;div class=&quot;blog-content-wrapper&quot;&gt;
  &lt;div class=&quot;flex-columns&quot;&gt;
    &lt;div class=&quot;flex-child flex-column-child flex-column-child-1&quot;&gt;1&lt;/div&gt;
    &lt;div class=&quot;flex-child flex-column-child flex-column-child-2&quot;&gt;2&lt;/div&gt;
    &lt;div class=&quot;flex-child flex-column-child flex-column-child-3&quot;&gt;3&lt;/div&gt;
    &lt;div class=&quot;flex-child flex-column-child flex-column-child-4&quot;&gt;4&lt;/div&gt;
    &lt;div class=&quot;flex-child flex-column-child flex-column-child-5&quot;&gt;5&lt;/div&gt;
    &lt;div class=&quot;flex-child flex-column-child flex-column-child-6&quot;&gt;6&lt;/div&gt;
    &lt;div class=&quot;flex-child flex-column-child flex-column-child-7&quot;&gt;7&lt;/div&gt;
    &lt;div class=&quot;flex-child flex-column-child flex-column-child-8&quot;&gt;8&lt;/div&gt;
    &lt;div class=&quot;flex-child flex-column-child flex-column-child-9&quot;&gt;9&lt;/div&gt;
    &lt;div class=&quot;flex-child flex-column-child flex-column-child-10&quot;&gt;10&lt;/div&gt;
  &lt;/div&gt;
&lt;/div&gt;

&lt;p&gt;Items are rendered in columns from top to bottom, producing an arbitrary order when read from left to right. This is of course the expected outcome and desirable in many scenarios, but not when we’re trying to create a masonry layout, and it becomes increasingly disorienting as a page grows taller.&lt;/p&gt;

&lt;p&gt;If we instead change the &lt;code class=&quot;highlighter-rouge&quot;&gt;flex-direction&lt;/code&gt; to &lt;code class=&quot;highlighter-rouge&quot;&gt;row&lt;/code&gt; and have elements of varying heights we’ll achieve the correct order but with weird and unexpected gaps all over our grid:&lt;/p&gt;

&lt;div class=&quot;blog-content-wrapper&quot;&gt;
  &lt;div class=&quot;flex-rows&quot;&gt;
    &lt;div class=&quot;flex-child flex-row-child flex-column-child-1&quot;&gt;1&lt;/div&gt;
    &lt;div class=&quot;flex-child flex-row-child flex-column-child-2&quot;&gt;2&lt;/div&gt;
    &lt;div class=&quot;flex-child flex-row-child flex-column-child-3&quot;&gt;3&lt;/div&gt;
    &lt;div class=&quot;flex-child flex-row-child flex-column-child-4&quot;&gt;4&lt;/div&gt;
    &lt;div class=&quot;flex-child flex-row-child flex-column-child-5&quot;&gt;5&lt;/div&gt;
    &lt;div class=&quot;flex-child flex-row-child flex-column-child-6&quot;&gt;6&lt;/div&gt;
    &lt;div class=&quot;flex-child flex-row-child flex-column-child-7&quot;&gt;7&lt;/div&gt;
    &lt;div class=&quot;flex-child flex-row-child flex-column-child-8&quot;&gt;8&lt;/div&gt;
    &lt;div class=&quot;flex-child flex-row-child flex-column-child-9&quot;&gt;9&lt;/div&gt;
    &lt;div class=&quot;flex-child flex-row-child flex-column-child-10&quot;&gt;10&lt;/div&gt;
  &lt;/div&gt;
&lt;/div&gt;

&lt;p&gt;So it seems impossible to get the best of both worlds: items rendered as columns but ordered as rows. You might decide to use &lt;code class=&quot;highlighter-rouge&quot;&gt;flex-direction: column&lt;/code&gt; and just move around the elements in your HTML to achieve the right &lt;em&gt;visual&lt;/em&gt; order, but this can be cumbersome, it’s unnecessarily complex, and it will mess up the tab order of the elements.&lt;/p&gt;

&lt;h2 id=&quot;re-ordering-elements-with-order-and-nth-child&quot;&gt;Re-ordering elements with &lt;code class=&quot;highlighter-rouge&quot;&gt;order&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;nth-child()&lt;/code&gt;&lt;/h2&gt;

&lt;p&gt;The &lt;code class=&quot;highlighter-rouge&quot;&gt;order&lt;/code&gt; property affects the order of items contained in a CSS flexbox or grid, and we can use it to re-order items for our soon-to-be masonry layout. The &lt;code class=&quot;highlighter-rouge&quot;&gt;order&lt;/code&gt; property is pretty straight-forward to use: if you have two elements and one has &lt;code class=&quot;highlighter-rouge&quot;&gt;order: 1&lt;/code&gt; and the other one has &lt;code class=&quot;highlighter-rouge&quot;&gt;order: 2&lt;/code&gt; the element with &lt;code class=&quot;highlighter-rouge&quot;&gt;order: 1&lt;/code&gt; will be rendered before the other element, independent of their HTML source code order.&lt;/p&gt;

&lt;p&gt;The CSS masonry solution depends on a detail of the &lt;code class=&quot;highlighter-rouge&quot;&gt;order&lt;/code&gt; specification: what happens if two or more elements have the same &lt;code class=&quot;highlighter-rouge&quot;&gt;order&lt;/code&gt; value? Which comes first? Flexbox falls back on the source code order: the element that appears first in the source code will be rendered before other elements with the same order value. This fact gives us the possibility to easily re-group items in our grid so that we can change the ordering from columns to rows, while still rendering those rows as columns, using &lt;code class=&quot;highlighter-rouge&quot;&gt;nth-child()&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Look at the table below. To achieve a sensible order using &lt;code class=&quot;highlighter-rouge&quot;&gt;flex-direction: row&lt;/code&gt; we’d just have to render elements in the default order: &lt;code class=&quot;highlighter-rouge&quot;&gt;1, 2, 3, 4, 5, 6&lt;/code&gt; , etc.&lt;/p&gt;

&lt;table class=&quot;article-table masonry-table-1&quot;&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th style=&quot;text-align: left&quot;&gt; &lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;Column 1&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;Column 2&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;Column 3&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Row 1&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;1&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;2&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;3&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Row 2&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;4&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;5&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;6&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Row 3&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;7&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;8&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;9&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Row 4&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;10&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;11&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;12&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;If we want to achieve the &lt;em&gt;same&lt;/em&gt; order while using &lt;code class=&quot;highlighter-rouge&quot;&gt;flex-direction: column&lt;/code&gt; we need to change the order of the elements to match the order of each column in the table (rather than each row):&lt;/p&gt;

&lt;table class=&quot;article-table masonry-table-2&quot;&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th style=&quot;text-align: left&quot;&gt; &lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;Column 1&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;Column 2&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;Column 3&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Row 1&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;&lt;strong&gt;1&lt;/strong&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;2&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;3&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Row 2&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;&lt;strong&gt;4&lt;/strong&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;5&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;6&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Row 3&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;&lt;strong&gt;7&lt;/strong&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;8&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;9&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Row 4&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;&lt;strong&gt;10&lt;/strong&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;11&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;12&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;style&gt;
.masonry-table-2 tr td:nth-child(2), .masonry-table tr th:nth-child(2) {
  background-color: #A2CBFA;
  border-radius: 2px;
}
&lt;/style&gt;

&lt;p&gt;I.e. the first elements in our flexbox layout have to be &lt;code class=&quot;highlighter-rouge&quot;&gt;1, 4, 7, 10&lt;/code&gt;. These items will fill up the first column, followed by &lt;code class=&quot;highlighter-rouge&quot;&gt;2, 5, 8, 11&lt;/code&gt; for the 2nd column and &lt;code class=&quot;highlighter-rouge&quot;&gt;3, 6, 9, 12&lt;/code&gt; for the 3rd and last column. This is where the &lt;code class=&quot;highlighter-rouge&quot;&gt;nth-child()&lt;/code&gt; selector comes in. We can use it to select every third element (3n), starting with the first element (3n+1), and set all those elements to have the same &lt;code class=&quot;highlighter-rouge&quot;&gt;order&lt;/code&gt; value:&lt;/p&gt;

&lt;div class=&quot;language-css highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nc&quot;&gt;.item&lt;/span&gt;&lt;span class=&quot;nd&quot;&gt;:nth-child&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;3n&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nl&quot;&gt;order&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;This selector sets &lt;code class=&quot;highlighter-rouge&quot;&gt;order: 1&lt;/code&gt; for element &lt;code class=&quot;highlighter-rouge&quot;&gt;1, 4, 7, 10&lt;/code&gt; in our container, i.e. the entire first column. In other words we’re using a combination of &lt;code class=&quot;highlighter-rouge&quot;&gt;nth-child()&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;order&lt;/code&gt; to re-order items depending on their original order. To create the 2nd and 3rd column we just change the offset:&lt;/p&gt;

&lt;div class=&quot;language-css highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nc&quot;&gt;.item&lt;/span&gt;&lt;span class=&quot;nd&quot;&gt;:nth-child&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;3n&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nl&quot;&gt;order&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;nc&quot;&gt;.item&lt;/span&gt;&lt;span class=&quot;nd&quot;&gt;:nth-child&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;3n&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nl&quot;&gt;order&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;nc&quot;&gt;.item&lt;/span&gt;&lt;span class=&quot;nd&quot;&gt;:nth-child&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;3n&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;   &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nl&quot;&gt;order&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Here we’re producing three sets: &lt;code class=&quot;highlighter-rouge&quot;&gt;1, 4, 7, 10&lt;/code&gt; (3n+1) with &lt;code class=&quot;highlighter-rouge&quot;&gt;order: 1&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;2, 5, 8, 11&lt;/code&gt; (3n+2) with &lt;code class=&quot;highlighter-rouge&quot;&gt;order: 2&lt;/code&gt;, and &lt;code class=&quot;highlighter-rouge&quot;&gt;3, 6, 9, 12&lt;/code&gt; (3n) with &lt;code class=&quot;highlighter-rouge&quot;&gt;order: 3&lt;/code&gt;. All together the order becomes &lt;code class=&quot;highlighter-rouge&quot;&gt;1, 4, 7, 10, 2, 5, 8, 11, 3, 6, 9, 12&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;If we make sure to render each of those groups as one column (and no more), it’ll create the illusion that the items have returned to their original order when you read from left to right. If we visually parse the grid as rows the first row will contain the first element from every group (&lt;code class=&quot;highlighter-rouge&quot;&gt;1, 2, 3&lt;/code&gt;), the second row will contain the second element from every group (&lt;code class=&quot;highlighter-rouge&quot;&gt;4, 5, 6&lt;/code&gt;), and so on so forth. With this technique we can create a masonry layout with items rendered as columns but ordered as rows.&lt;/p&gt;

&lt;div class=&quot;blog-content-wrapper&quot;&gt;
  &lt;div class=&quot;flex-masonry&quot;&gt;
    &lt;div class=&quot;flex-child flex-masonry-child flex-masonry-child-1&quot;&gt;1&lt;/div&gt;
    &lt;div class=&quot;flex-child flex-masonry-child flex-masonry-child-2&quot;&gt;2&lt;/div&gt;
    &lt;div class=&quot;flex-child flex-masonry-child flex-masonry-child-3&quot;&gt;3&lt;/div&gt;
    &lt;div class=&quot;flex-child flex-masonry-child flex-masonry-child-4&quot;&gt;4&lt;/div&gt;
    &lt;div class=&quot;flex-child flex-masonry-child flex-masonry-child-5&quot;&gt;5&lt;/div&gt;
    &lt;div class=&quot;flex-child flex-masonry-child flex-masonry-child-6&quot;&gt;6&lt;/div&gt;
    &lt;div class=&quot;flex-child flex-masonry-child flex-masonry-child-7&quot;&gt;7&lt;/div&gt;
    &lt;div class=&quot;flex-child flex-masonry-child flex-masonry-child-8&quot;&gt;8&lt;/div&gt;
    &lt;div class=&quot;flex-child flex-masonry-child flex-masonry-child-9&quot;&gt;9&lt;/div&gt;
    &lt;div class=&quot;flex-child flex-masonry-child flex-masonry-child-10&quot;&gt;10&lt;/div&gt;
  &lt;/div&gt;
&lt;/div&gt;

&lt;p&gt;How is the tab order affected by shuffling around elements like this? Luckily, not at all. &lt;code class=&quot;highlighter-rouge&quot;&gt;order&lt;/code&gt; only changes the visual representation of objects, not the tab order, so tabbing through the grid will work as intended.&lt;/p&gt;

&lt;h2 id=&quot;preventing-columns-from-merging&quot;&gt;Preventing columns from merging&lt;/h2&gt;

&lt;p&gt;If you have many items in a masonry layout this technique will fairly certainly break down at some point. We’re counting on that every “group” that we’ve created will be rendered as exactly one column but in reality items can have different heights and columns can easily start to merge. The first column could be longer than the other two, for example, which could make the third column start at the end of the second column:&lt;/p&gt;

&lt;div class=&quot;blog-content-wrapper&quot;&gt;
  &lt;div class=&quot;flex-masonryfail&quot;&gt;
    &lt;div class=&quot;flex-child flex-masonry-child flex-masonryfail-child-1&quot;&gt;1&lt;/div&gt;
    &lt;div class=&quot;flex-child flex-masonry-child flex-masonryfail-child-2&quot;&gt;2&lt;/div&gt;
    &lt;div class=&quot;flex-child flex-masonry-child flex-child-highlight flex-masonryfail-child-3&quot;&gt;3&lt;/div&gt;
    &lt;div class=&quot;flex-child flex-masonry-child flex-masonryfail-child-4&quot;&gt;4&lt;/div&gt;
    &lt;div class=&quot;flex-child flex-masonry-child flex-masonryfail-child-5&quot;&gt;5&lt;/div&gt;
    &lt;div class=&quot;flex-child flex-masonry-child flex-masonryfail-child-6&quot;&gt;6&lt;/div&gt;
    &lt;div class=&quot;flex-child flex-masonry-child flex-masonryfail-child-7&quot;&gt;7&lt;/div&gt;
    &lt;div class=&quot;flex-child flex-masonry-child flex-masonryfail-child-8&quot;&gt;8&lt;/div&gt;
    &lt;div class=&quot;flex-child flex-masonry-child flex-masonryfail-child-9&quot;&gt;9&lt;/div&gt;
    &lt;div class=&quot;flex-child flex-masonry-child flex-masonryfail-child-10&quot;&gt;10&lt;/div&gt;
  &lt;/div&gt;
&lt;/div&gt;

&lt;p&gt;The highlighted box here (3) has to be rendered at the start of the third column or the ordering algorithm will break, but if there’s space for another element at the end of the 2nd column it will naturally be rendered there.&lt;/p&gt;

&lt;p&gt;We can fix this wrapping issue by forcing columns to restart at certain points. There’s no easy way of saying “this element should line break” with flexbox, but &lt;a href=&quot;/blog/flexbox-break-to-new-row/&quot;&gt;we can achieve this effect by adding invisible elements that take up 100% of the container’s height&lt;/a&gt;. As they require 100% of the parent’s height to be rendered they won’t fit in a column together with any other element, so they’ll essentially force line breaks by creating  collapsed columns.&lt;/p&gt;

&lt;p&gt;We have to insert these line break elements into our grid and array of elements, so what we’re looking for is to create this sequence of elements: &lt;code class=&quot;highlighter-rouge&quot;&gt;1, 4, 7, 10, &amp;lt;break&amp;gt;, 2, 5, 8, 11, &amp;lt;break&amp;gt;, 3, 6, 9, 12&lt;/code&gt;. We can use pseudo-elements on the container to add these, and we can set the &lt;code class=&quot;highlighter-rouge&quot;&gt;order&lt;/code&gt; to &lt;code class=&quot;highlighter-rouge&quot;&gt;2&lt;/code&gt; on both of them. Adding a pseudo-element with &lt;code class=&quot;highlighter-rouge&quot;&gt;:before&lt;/code&gt; will make it the first child of the container and adding a pseudo-element with &lt;code class=&quot;highlighter-rouge&quot;&gt;:after&lt;/code&gt; will make it the last child of the container, so if we set &lt;code class=&quot;highlighter-rouge&quot;&gt;order: 2&lt;/code&gt; on both of them they will become the first and the last element of the &lt;code class=&quot;highlighter-rouge&quot;&gt;order: 2&lt;/code&gt; “group” (as they appear before and after the other elements): &lt;code class=&quot;highlighter-rouge&quot;&gt;:before, 2, 5, 8, 11, :after&lt;/code&gt;.&lt;/p&gt;

&lt;div class=&quot;language-css highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;/* Force new columns */&lt;/span&gt;
&lt;span class=&quot;nc&quot;&gt;.container&lt;/span&gt;&lt;span class=&quot;nd&quot;&gt;::before&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;
&lt;span class=&quot;nc&quot;&gt;.container&lt;/span&gt;&lt;span class=&quot;nd&quot;&gt;::after&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;content&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&quot;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;flex-basis&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;100%&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;width&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;order&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;I’ve highlighted the pseudo-elements below to show their effect. Notice that despite that box 3 would fit in the 2nd column it’s rendered as the first element in the last column:&lt;/p&gt;

&lt;div class=&quot;blog-content-wrapper&quot;&gt;
  &lt;div class=&quot;flex-masonryfail flex-masonryfail-fixed&quot;&gt;
    &lt;div class=&quot;flex-child flex-masonry-child flex-masonryfail-child-1&quot;&gt;1&lt;/div&gt;
    &lt;div class=&quot;flex-child flex-masonry-child flex-masonryfail-child-2&quot;&gt;2&lt;/div&gt;
    &lt;div class=&quot;flex-child flex-masonry-child flex-masonryfail-child-3&quot;&gt;3&lt;/div&gt;
    &lt;div class=&quot;flex-child flex-masonry-child flex-masonryfail-child-4&quot;&gt;4&lt;/div&gt;
    &lt;div class=&quot;flex-child flex-masonry-child flex-masonryfail-child-5&quot;&gt;5&lt;/div&gt;
    &lt;div class=&quot;flex-child flex-masonry-child flex-masonryfail-child-6&quot;&gt;6&lt;/div&gt;
    &lt;div class=&quot;flex-child flex-masonry-child flex-masonryfail-child-7&quot;&gt;7&lt;/div&gt;
    &lt;div class=&quot;flex-child flex-masonry-child flex-masonryfail-child-8&quot;&gt;8&lt;/div&gt;
    &lt;div class=&quot;flex-child flex-masonry-child flex-masonryfail-child-9&quot;&gt;9&lt;/div&gt;
    &lt;div class=&quot;flex-child flex-masonry-child flex-masonryfail-child-10&quot;&gt;10&lt;/div&gt;
  &lt;/div&gt;
&lt;/div&gt;

&lt;h2 id=&quot;the-solution&quot;&gt;The solution&lt;/h2&gt;

&lt;p&gt;As a final step, you need to make sure that your flex container has a set height that makes it taller than your tallest column (so that all columns will fit). Put together, this will produce a CSS masonry layout with three columns (&lt;a href=&quot;https://codepen.io/tobiasahlin/pen/JVmLRa&quot;&gt;also available as a codepen&lt;/a&gt;):&lt;/p&gt;

&lt;div class=&quot;language-css highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nc&quot;&gt;.container&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;display&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;flex&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;flex-flow&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;column&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;wrap&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;align-content&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;space-between&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;c&quot;&gt;/* Your container needs a fixed height, and it 
   * needs to be taller than your tallest column. */&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;height&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;600px&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; 
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;nc&quot;&gt;.item&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;width&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;32%&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;margin-bottom&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;2%&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;/* Optional */&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;/* Re-order items into 3 rows */&lt;/span&gt;
&lt;span class=&quot;nc&quot;&gt;.item&lt;/span&gt;&lt;span class=&quot;nd&quot;&gt;:nth-child&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;3n&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nl&quot;&gt;order&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;nc&quot;&gt;.item&lt;/span&gt;&lt;span class=&quot;nd&quot;&gt;:nth-child&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;3n&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nl&quot;&gt;order&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;nc&quot;&gt;.item&lt;/span&gt;&lt;span class=&quot;nd&quot;&gt;:nth-child&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;3n&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;   &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nl&quot;&gt;order&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;/* Force new columns */&lt;/span&gt;
&lt;span class=&quot;nc&quot;&gt;.container&lt;/span&gt;&lt;span class=&quot;nd&quot;&gt;::before&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;
&lt;span class=&quot;nc&quot;&gt;.container&lt;/span&gt;&lt;span class=&quot;nd&quot;&gt;::after&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;content&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&quot;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;flex-basis&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;100%&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;width&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;order&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Your HTML should look like this, with one &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;div /&amp;gt;&lt;/code&gt; for every item in your grid:&lt;/p&gt;

&lt;div class=&quot;language-html highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;container&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;item&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;item&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;item&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
  ...
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;working-with-more-than-three-columns&quot;&gt;Working with more than three columns&lt;/h2&gt;

&lt;p&gt;To create a masonry layout with more than three columns we need to do a few things: adapt our sorting algorithm, update the width of the items, and insert line break elements manually (instead of using pseudo-elements). For quick access to the final result I’ve compiled &lt;a href=&quot;https://codepen.io/collection/XPjvPP/&quot;&gt;a list of codepens showcasing flexbox masonry with 3, 4, 5 and 6 columns&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Since we’re limited to creating just two pseudo-elements with &lt;code class=&quot;highlighter-rouge&quot;&gt;:before&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;:after&lt;/code&gt; we need to resort to manually adding break elements into our container (you need one less break element than the number of columns in your layout). You can just append them to the end of your container, they’ll be sorted into their respective columns:&lt;/p&gt;

&lt;div class=&quot;language-html highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;container&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;item&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;item&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;item&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;item&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
  ...
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;span&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;item break&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/span&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;span&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;item break&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/span&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;span&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;item break&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/span&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;We’re inserting column breaks as &lt;code class=&quot;highlighter-rouge&quot;&gt;span&lt;/code&gt;s in order to sort them independently from the content items. We need a way to “restart” the counting once we reach the break elements, or an uneven number of content items could make the first break element start after the 3rd column, for example. The &lt;code class=&quot;highlighter-rouge&quot;&gt;:nth-of-type&lt;/code&gt; selector targets elements of different types independently, so we can decouple the order of the content items and the column breaks like so:&lt;/p&gt;

&lt;div class=&quot;language-css highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nc&quot;&gt;.item&lt;/span&gt;&lt;span class=&quot;nd&quot;&gt;:nth-of-type&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;4n&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nl&quot;&gt;order&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;nc&quot;&gt;.item&lt;/span&gt;&lt;span class=&quot;nd&quot;&gt;:nth-of-type&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;4n&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nl&quot;&gt;order&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;nc&quot;&gt;.item&lt;/span&gt;&lt;span class=&quot;nd&quot;&gt;:nth-of-type&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;4n&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nl&quot;&gt;order&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;nc&quot;&gt;.item&lt;/span&gt;&lt;span class=&quot;nd&quot;&gt;:nth-of-type&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;4n&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;   &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nl&quot;&gt;order&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;The break elements, like previously, take up the full height of the container:&lt;/p&gt;

&lt;div class=&quot;language-css highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;/* Force new columns */&lt;/span&gt;
&lt;span class=&quot;nc&quot;&gt;.break&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;flex-basis&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;100%&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;width&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;margin&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;This will create a masonry layout with four columns (&lt;a href=&quot;https://codepen.io/tobiasahlin/pen/OGBvqW&quot;&gt;view codepen&lt;/a&gt;):&lt;/p&gt;

&lt;div class=&quot;blog-content-wrapper&quot;&gt;
  &lt;div class=&quot;flex-masonry flex-masonry-4columns&quot;&gt;
    &lt;div class=&quot;flex-child flex-masonry-child-4columns flex-masonry-child-1&quot;&gt;1&lt;/div&gt;
    &lt;div class=&quot;flex-child flex-masonry-child-4columns flex-masonry-child-2&quot;&gt;2&lt;/div&gt;
    &lt;div class=&quot;flex-child flex-masonry-child-4columns flex-masonry-child-3&quot;&gt;3&lt;/div&gt;
    &lt;div class=&quot;flex-child flex-masonry-child-4columns flex-masonry-child-4&quot;&gt;4&lt;/div&gt;
    &lt;div class=&quot;flex-child flex-masonry-child-4columns flex-masonry-child-5&quot;&gt;5&lt;/div&gt;
    &lt;div class=&quot;flex-child flex-masonry-child-4columns flex-masonry-child-6&quot;&gt;6&lt;/div&gt;
    &lt;div class=&quot;flex-child flex-masonry-child-4columns flex-masonry-child-7&quot;&gt;7&lt;/div&gt;
    &lt;div class=&quot;flex-child flex-masonry-child-4columns flex-masonry-child-8&quot;&gt;8&lt;/div&gt;
    &lt;div class=&quot;flex-child flex-masonry-child-4columns flex-masonry-child-9&quot;&gt;9&lt;/div&gt;
    &lt;div class=&quot;flex-child flex-masonry-child-4columns flex-masonry-child-10&quot;&gt;10&lt;/div&gt;
    &lt;div class=&quot;flex-child flex-masonry-child-4columns flex-masonry-child-11&quot;&gt;11&lt;/div&gt;
    &lt;div class=&quot;flex-child flex-masonry-child-4columns flex-masonry-child-12&quot;&gt;12&lt;/div&gt;
    &lt;span class=&quot;flex-masonry-child-4columns flex-masonry-break&quot;&gt;&lt;/span&gt;
    &lt;span class=&quot;flex-masonry-child-4columns flex-masonry-break&quot;&gt;&lt;/span&gt;
    &lt;span class=&quot;flex-masonry-child-4columns flex-masonry-break&quot;&gt;&lt;/span&gt;
  &lt;/div&gt;
&lt;/div&gt;

&lt;p&gt;Here’s the full solution for a CSS masonry layout with four columns:&lt;/p&gt;

&lt;div class=&quot;language-css highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nc&quot;&gt;.container&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;display&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;flex&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;flex-flow&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;column&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;wrap&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;align-content&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;space-between&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;c&quot;&gt;/* Your container needs a fixed height, and it 
   * needs to be taller than your tallest column. */&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;height&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;600px&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; 
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;nc&quot;&gt;.item&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;width&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;24%&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;margin-bottom&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;2%&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;/* Optional */&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;/* Re-order items into 4 rows */&lt;/span&gt;
&lt;span class=&quot;nc&quot;&gt;.item&lt;/span&gt;&lt;span class=&quot;nd&quot;&gt;:nth-of-type&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;4n&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nl&quot;&gt;order&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;nc&quot;&gt;.item&lt;/span&gt;&lt;span class=&quot;nd&quot;&gt;:nth-of-type&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;4n&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nl&quot;&gt;order&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;nc&quot;&gt;.item&lt;/span&gt;&lt;span class=&quot;nd&quot;&gt;:nth-of-type&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;4n&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nl&quot;&gt;order&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;nc&quot;&gt;.item&lt;/span&gt;&lt;span class=&quot;nd&quot;&gt;:nth-of-type&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;4n&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;   &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nl&quot;&gt;order&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;/* Force new columns */&lt;/span&gt;
&lt;span class=&quot;nc&quot;&gt;.break&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;flex-basis&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;100%&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;width&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;margin&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;This CSS-only way of creating a masonry (or mosaic) layout is surely not as robust, flexible, and foolproof as a JavaScript implementation (like &lt;a href=&quot;https://masonry.desandro.com/&quot;&gt;Masonry&lt;/a&gt;) but if you don’t want to rely on a third-party library just to create a masonry layout I hope that these layouts tricks can come in handy.&lt;/p&gt;

&lt;p&gt;For help with more common CSS flexbox patterns, &lt;a href=&quot;/blog/common-flexbox-patterns/&quot;&gt;I’ve compiled a list of flexbox examples that you can copy and paste into your projects&lt;/a&gt; and &lt;a href=&quot;/blog/flexbox-break-to-new-row/&quot;&gt;written in-depth about the line-breaking flexbox item technique&lt;/a&gt;.&lt;/p&gt;

&lt;style&gt;
.blog-content-wrapper {
  padding: 0 20px 20px;
  margin-bottom: 20px;
  max-width: 900px;
  margin-left: auto;
  margin-right: auto;
}

.flex-masonry,
.flex-masonryfail {
  background-color: #f7f7f7;
  border-radius: 3px;
  padding: 20px;
  display: flex;
  flex-flow: column wrap;
  align-content: space-between;
  height: 580px;
}

.flex-columns {
  background-color: #f7f7f7;
  border-radius: 3px;
  padding: 20px;
  display: flex;
  flex-flow: column wrap;
  align-content: space-between;
  height: 530px;
}

.flex-rows {
  background-color: #f7f7f7;
  border-radius: 3px;
  padding: 20px;
  display: flex;
  flex-direction: row;
  flex-wrap: wrap;
  justify-content: space-between;
}

.flex-child {
  border-radius: 3px;
  background-color: #A2CBFA;
  border: 1px solid #4390E1;
  box-shadow: 0 2px 2px rgba(0,90,250,0.05),
    0 4px 4px rgba(0,90,250,0.05),
    0 8px 8px rgba(0,90,250,0.05),
    0 16px 16px rgba(0,90,250,0.05);
  width: 32%;
  margin-bottom: 2%; /* (100-32*3)/2 */
  padding: 10px;
  box-sizing: border-box;
  text-align: center;
  color: white;
}

.flex-child-highlight {
  background-color: #cc4a8b;
  border-color: #8a2155;
}

.flex-column-child-1 { height: 200px; }
.flex-column-child-2 { height: 150px; }
.flex-column-child-3 { height: 125px; }
.flex-column-child-4 { height: 150px; }
.flex-column-child-5 { height: 100px; }
.flex-column-child-6 { height: 125px; }
.flex-column-child-7 { height: 100px; }
.flex-column-child-8 { height: 125px; }
.flex-column-child-9 { height: 100px; }
.flex-column-child-10 { height: 100px; }

.flex-masonry-child-1 { height: 200px; }
.flex-masonry-child-2 { height: 205px; }
.flex-masonry-child-3 { height: 175px; }
.flex-masonry-child-4 { height: 100px; }
.flex-masonry-child-5 { height: 100px; }
.flex-masonry-child-6 { height: 155px; }
.flex-masonry-child-7 { height: 100px; }
.flex-masonry-child-8 { height: 175px; }
.flex-masonry-child-9 { height: 150px; }
.flex-masonry-child-10 { height: 100px; }
.flex-masonry-child-11 { height: 150px; }
.flex-masonry-child-12 { height: 100px; }

.flex-masonryfail-child-1 { height: 200px; }
.flex-masonryfail-child-2 { height: 205px; }
.flex-masonryfail-child-3 { height: 75px; }
.flex-masonryfail-child-4 { height: 100px; }
.flex-masonryfail-child-5 { height: 100px; }
.flex-masonryfail-child-6 { height: 155px; }
.flex-masonryfail-child-7 { height: 100px; }
.flex-masonryfail-child-8 { height: 75px; }
.flex-masonryfail-child-9 { height: 150px; }
.flex-masonryfail-child-10 { height: 100px; }

.flex-masonry-child:nth-child(3n+1) { order: 1; }
.flex-masonry-child:nth-child(3n+2) { order: 2; }
.flex-masonry-child:nth-child(3n) { order: 3; }

.flex-masonry::before,
.flex-masonry::after {
  content: &quot;&quot;;
  flex-basis: 100%;
  width: 0;
  order: 2;
  border: 1px solid #ddd;
}

.flex-masonryfail-fixed::before,
.flex-masonryfail-fixed::after {
  content: &quot;&quot;;
  flex-basis: 100%;
  width: 0;
  order: 2;
  border: 1px solid #8a2155;
}

/* Four columns */
.flex-masonry-4columns {
  height: 520px;
}

.flex-masonry-4columns::after,
.flex-masonry-4columns::before {
  content: none;
}

.flex-masonry-child-4columns {
  width: 24%;
}

.flex-masonry-child-4columns:nth-of-type(4n+1) { order: 1; }
.flex-masonry-child-4columns:nth-of-type(4n+2) { order: 2; }
.flex-masonry-child-4columns:nth-of-type(4n+3) { order: 3; }
.flex-masonry-child-4columns:nth-of-type(4n)   { order: 4; }

.flex-masonry-break {
  flex-basis: 100%;
  width: 0;
  border: 1px solid #ddd;
  margin: 0;
}
&lt;/style&gt;

</description>
				<pubDate>Mon, 15 Apr 2019 11:12:00 +0000</pubDate>
				<link>https://tobiasahlin.com/blog/masonry-with-css/</link>
				<guid isPermaLink="true">https://tobiasahlin.com/blog/masonry-with-css/</guid>
			</item>
		
			<item>
				<title>Common CSS Flexbox Layout Patterns with Example Code</title>
				<description>&lt;div class=&quot;blog-banner&quot;&gt;
  &lt;div class=&quot;blog-banner-content&quot;&gt;
      &lt;div class=&quot;flexbox-banner-logo&quot;&gt;
        &lt;div class=&quot;flexbox-box flexbox-box-1&quot; style=&quot;transform: translateY(-23px) scaleY(0.15)&quot;&gt;&lt;/div&gt;
        &lt;div class=&quot;flexbox-box flexbox-box-2&quot; style=&quot;transform: translateY(0) scaleY(0.15); &quot;&gt;&lt;/div&gt;
        &lt;div class=&quot;flexbox-box flexbox-box-3&quot; style=&quot;transform: translateY(23px) scaleY(0.15);&quot;&gt;&lt;/div&gt;
      &lt;/div&gt;
  &lt;/div&gt;
&lt;/div&gt;
&lt;style&gt;
.flexbox-banner-logo {
  width: 100px;
  height: 100px;
  display: inline-block;
  position: relative;
}

.flexbox-box {
  background-color: #fff;
  width: 100%;
  height: 100%;
  position: absolute;
  top: 0;
  left: 0;
}
&lt;/style&gt;

&lt;script&gt;
var postFlexBoxTimeline = anime.timeline({ loop: true });
postFlexBoxTimeline
  .add({ /* hamburger */ 
    targets: '.flexbox-box',
    translateY: function(el, i) { return -23+(i*23) },
    scaleY: 0.15,
    duration: 500
  })
  .add({ /* collapsed hamburger */
    targets: '.flexbox-box',
    translateY: 0,
    scaleY: 0.15,
    duration: 900,
    easing: &quot;easeInOutExpo&quot;,
    delay: 800
  })
  .add({ /* one vertical line */
    targets: '.flexbox-box',
    scaleY: 1,
    scaleX: 0.15,
    easing: &quot;easeOutExpo&quot;,
    duration: 400
  })
  .add({ /* flipped hamburger */
    targets: '.flexbox-box',
    translateX: function(el, i) { return -30+(i*30) },
    scaleY: 0.9,
    scaleX: 0.15,
    easing: &quot;easeOutExpo&quot;,
    duration: 700
  })
  .add({ /* Wide flipped hamburger */
    targets: '.flexbox-box',
    translateX: function(el, i) { return -50+(i*50) },
    scaleY: 0.9,
    scaleX: function(el, i) { return i == 1 ? 0.7 : 0.15 },
    easing: &quot;easeOutExpo&quot;,
    duration: 500,
    delay: 800
  })
  .add({ /* Wide collapsed flipped hamburger */
    targets: '.flexbox-box',
    translateX: function(el, i) { return -50+(i*50) },
    scaleY: 0.15,
    scaleX: function(el, i) { return i == 1 ? 0.7 : 0.15 },
    easing: &quot;easeOutExpo&quot;,
    duration: 500,
    delay: 800
  })
  .add({
    targets: '.flexbox-box',
    translateX: function(el, i) { 
      if (i == 0) return &quot;-23px&quot;;
      if (i == 1) return 0;
      return &quot;23px&quot;;
    },
    translateY: function(el, i) { return i == 1 ? &quot;-12px&quot; : &quot;12px&quot; },
    scaleY: 0.15,
    scaleX: function(el, i) { return i == 1 ? 0.84 : 0.38 },
    easing: &quot;easeOutExpo&quot;,
    duration: 500,
    delay: 800
  })
  .add({ /* hamburger */ 
    targets: '.flexbox-box',
    translateY: function(el, i) { 
      if (i == 0) return 0;
      if (i == 1) return &quot;-23px&quot;;
      return &quot;23px&quot;;
    },
    translateX: 0,
    scaleY: 0.15,
    scaleX: 1,
    easing: &quot;easeOutExpo&quot;,
    duration: 500,
    delay: 800
  });
app.animations.track(postFlexBoxTimeline, document.querySelector(&quot;.flexbox-banner-logo&quot;));
&lt;/script&gt;

&lt;!--more--&gt;

&lt;p&gt;In theory, it’s pretty straightforward to use &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Flexible_Box_Layout/Basic_Concepts_of_Flexbox&quot;&gt;flexbox&lt;/a&gt; (Flexible Box Module) to build complex layouts, but I’ve often found myself adding &lt;code class=&quot;highlighter-rouge&quot;&gt;display: flex&lt;/code&gt; to an element and then promptly spending an eternity trying to figure out how to make anything behave like I expect it to. If you’re anything like me: here’s a list of 10 example flexbox layouts with CSS that you can copy and paste to get started with your own layouts. We’ll walk through these basic layout patterns (click to jump to an example):&lt;/p&gt;

&lt;div class=&quot;post-flexbox-icon-overview&quot;&gt;
  &lt;a href=&quot;#stretch-all-fixed-spacing&quot; class=&quot;post-flexbox-icon-overview-item&quot;&gt;
    &lt;div class=&quot;icon-flex flex1&quot;&gt;
      &lt;div class=&quot;icon-child flex1-child&quot; style=&quot;height: 40px&quot;&gt;&lt;/div&gt;
      &lt;div class=&quot;icon-child flex1-child&quot; style=&quot;height: 40px&quot;&gt;&lt;/div&gt;
      &lt;div class=&quot;icon-child flex1-child&quot; style=&quot;height: 40px&quot;&gt;&lt;/div&gt;
      &lt;div class=&quot;icon-child flex1-child&quot; style=&quot;height: 40px&quot;&gt;&lt;/div&gt;
    &lt;/div&gt;
    &lt;span class=&quot;post-flexbox-icon-overview-title&quot;&gt;Stretch all&lt;/span&gt;
  &lt;/a&gt;  
  &lt;a href=&quot;#stretch-middle-fixed-spacing&quot; class=&quot;post-flexbox-icon-overview-item&quot;&gt;
    &lt;div class=&quot;icon-flex flex2&quot;&gt;
      &lt;div class=&quot;icon-child flex2-child&quot; style=&quot;width: 20px; height: 40px&quot;&gt;&lt;/div&gt;
      &lt;div class=&quot;icon-child flex2-child flex2-child-center&quot; style=&quot;height: 40px&quot;&gt;&lt;/div&gt;
      &lt;div class=&quot;icon-child flex2-child&quot; style=&quot;width: 20px; height: 40px&quot;&gt;&lt;/div&gt;
    &lt;/div&gt;
    &lt;span class=&quot;post-flexbox-icon-overview-title&quot;&gt;Stretch middle&lt;/span&gt;
  &lt;/a&gt;
  &lt;a href=&quot;#alternating-grid&quot; class=&quot;post-flexbox-icon-overview-item&quot;&gt;
   &lt;div class=&quot;icon-flex flex3&quot;&gt;
      &lt;div style=&quot;height: 15px;&quot; class=&quot;icon-child flex3-child&quot;&gt;&lt;/div&gt;
      &lt;div style=&quot;height: 15px;&quot; class=&quot;icon-child flex3-child&quot;&gt;&lt;/div&gt;
      &lt;div style=&quot;height: 15px;&quot; class=&quot;icon-child flex3-child&quot;&gt;&lt;/div&gt;
      &lt;div style=&quot;height: 15px;&quot; class=&quot;icon-child flex3-child&quot;&gt;&lt;/div&gt;
      &lt;div style=&quot;height: 15px;&quot; class=&quot;icon-child flex3-child&quot;&gt;&lt;/div&gt;
    &lt;/div&gt;
    &lt;span class=&quot;post-flexbox-icon-overview-title&quot;&gt;Alternating grid&lt;/span&gt;
  &lt;/a&gt;
  &lt;a href=&quot;#3x3-grid&quot; class=&quot;post-flexbox-icon-overview-item&quot;&gt;
    &lt;div class=&quot;icon-flex flex4&quot;&gt;
      &lt;div style=&quot;height: 15px&quot; class=&quot;icon-child flex4-child&quot;&gt;&lt;/div&gt;
      &lt;div style=&quot;height: 15px&quot; class=&quot;icon-child flex4-child&quot;&gt;&lt;/div&gt;
      &lt;div style=&quot;height: 15px&quot; class=&quot;icon-child flex4-child&quot;&gt;&lt;/div&gt;
      &lt;div style=&quot;height: 15px&quot; class=&quot;icon-child flex4-child&quot;&gt;&lt;/div&gt;
      &lt;div style=&quot;height: 15px&quot; class=&quot;icon-child flex4-child&quot;&gt;&lt;/div&gt;
      &lt;div style=&quot;height: 15px&quot; class=&quot;icon-child flex4-child&quot;&gt;&lt;/div&gt;
      &lt;div style=&quot;height: 15px&quot; class=&quot;icon-child flex4-child&quot;&gt;&lt;/div&gt;
      &lt;div style=&quot;height: 15px&quot; class=&quot;icon-child flex4-child&quot;&gt;&lt;/div&gt;
      &lt;div style=&quot;height: 15px&quot; class=&quot;icon-child flex4-child&quot;&gt;&lt;/div&gt;
    &lt;/div&gt;
    &lt;span class=&quot;post-flexbox-icon-overview-title&quot;&gt;3x3 grid&lt;/span&gt;
  &lt;/a&gt;
  &lt;a href=&quot;#3x3-grid-constrained-proportions-11&quot; class=&quot;post-flexbox-icon-overview-item&quot;&gt;
    &lt;div style=&quot;width: 52px&quot; class=&quot;icon-flex flex5&quot;&gt;
      &lt;div class=&quot;icon-child flex5-child&quot;&gt;&lt;/div&gt;
      &lt;div class=&quot;icon-child flex5-child&quot;&gt;&lt;/div&gt;
      &lt;div class=&quot;icon-child flex5-child&quot;&gt;&lt;/div&gt;
      &lt;div class=&quot;icon-child flex5-child&quot;&gt;&lt;/div&gt;
      &lt;div class=&quot;icon-child flex5-child&quot;&gt;&lt;/div&gt;
      &lt;div class=&quot;icon-child flex5-child&quot;&gt;&lt;/div&gt;
      &lt;div class=&quot;icon-child flex5-child&quot;&gt;&lt;/div&gt;
      &lt;div class=&quot;icon-child flex5-child&quot;&gt;&lt;/div&gt;
      &lt;div class=&quot;icon-child flex5-child&quot;&gt;&lt;/div&gt;
    &lt;/div&gt;
    &lt;span class=&quot;post-flexbox-icon-overview-title&quot;&gt;3x3 (1:1)&lt;/span&gt;
  &lt;/a&gt;
  &lt;a href=&quot;#3x3-grid-constrained-proportions-169&quot; class=&quot;post-flexbox-icon-overview-item&quot;&gt;
    &lt;div class=&quot;icon-flex flex6&quot;&gt;
      &lt;div class=&quot;icon-child flex6-child&quot;&gt;&lt;/div&gt;
      &lt;div class=&quot;icon-child flex6-child&quot;&gt;&lt;/div&gt;
      &lt;div class=&quot;icon-child flex6-child&quot;&gt;&lt;/div&gt;
      &lt;div class=&quot;icon-child flex6-child&quot;&gt;&lt;/div&gt;
      &lt;div class=&quot;icon-child flex6-child&quot;&gt;&lt;/div&gt;
      &lt;div class=&quot;icon-child flex6-child&quot;&gt;&lt;/div&gt;
      &lt;div class=&quot;icon-child flex6-child&quot;&gt;&lt;/div&gt;
      &lt;div class=&quot;icon-child flex6-child&quot;&gt;&lt;/div&gt;
      &lt;div class=&quot;icon-child flex6-child&quot;&gt;&lt;/div&gt;
    &lt;/div&gt;
    &lt;span class=&quot;post-flexbox-icon-overview-title&quot;&gt;3x3 (16:9)&lt;/span&gt;
  &lt;/a&gt;
  &lt;a href=&quot;#graph-vertical-bars&quot; class=&quot;post-flexbox-icon-overview-item&quot;&gt;
    &lt;div class=&quot;icon-flex flex7&quot;&gt;
      &lt;div class=&quot;icon-child flex7-child flex7-child-1&quot;&gt;&lt;/div&gt;
      &lt;div class=&quot;icon-child flex7-child flex7-child-2&quot;&gt;&lt;/div&gt;
      &lt;div class=&quot;icon-child flex7-child flex7-child-3&quot;&gt;&lt;/div&gt;
      &lt;div class=&quot;icon-child flex7-child flex7-child-4&quot;&gt;&lt;/div&gt;
      &lt;div class=&quot;icon-child flex7-child flex7-child-5&quot;&gt;&lt;/div&gt;
    &lt;/div&gt;
    &lt;span class=&quot;post-flexbox-icon-overview-title&quot;&gt;Horizontal bars&lt;/span&gt;
  &lt;/a&gt;
  &lt;a href=&quot;#graph-horizontal-bars&quot; class=&quot;post-flexbox-icon-overview-item&quot;&gt;
    &lt;div class=&quot;icon-flex flex8&quot;&gt;
      &lt;div class=&quot;icon-child flex8-child flex8-child-1&quot;&gt;&lt;/div&gt;
      &lt;div class=&quot;icon-child flex8-child flex8-child-2&quot;&gt;&lt;/div&gt;
      &lt;div class=&quot;icon-child flex8-child flex8-child-3&quot;&gt;&lt;/div&gt;
      &lt;div class=&quot;icon-child flex8-child flex8-child-4&quot;&gt;&lt;/div&gt;
      &lt;div class=&quot;icon-child flex8-child flex8-child-5&quot;&gt;&lt;/div&gt;
    &lt;/div&gt;
    &lt;span class=&quot;post-flexbox-icon-overview-title&quot;&gt;Vertical bars&lt;/span&gt;
  &lt;/a&gt;
  &lt;a href=&quot;#vertical-stack-centered&quot; class=&quot;post-flexbox-icon-overview-item&quot;&gt;
    &lt;div class=&quot;icon-flex flex9&quot;&gt;
      &lt;div class=&quot;icon-child flex9-child&quot;&gt;&lt;/div&gt;
      &lt;div class=&quot;icon-child flex9-child&quot;&gt;&lt;/div&gt;
      &lt;div class=&quot;icon-child flex9-child&quot;&gt;&lt;/div&gt;
      &lt;div class=&quot;icon-child flex9-child&quot;&gt;&lt;/div&gt;
      &lt;div class=&quot;icon-child flex9-child&quot;&gt;&lt;/div&gt;
     &lt;/div&gt;
    &lt;span class=&quot;post-flexbox-icon-overview-title&quot;&gt;Vertical stack&lt;/span&gt;
  &lt;/a&gt;
  &lt;a href=&quot;#masonry-or-mosaic&quot; class=&quot;post-flexbox-icon-overview-item&quot;&gt;
    &lt;div class=&quot;icon-flex flex10 icon-flex10&quot;&gt;
      &lt;div class=&quot;icon-child flex10-child icon-flex10-child flex10-child-1 icon-flex10-child-1&quot;&gt;&lt;/div&gt;
      &lt;div class=&quot;icon-child flex10-child icon-flex10-child flex10-child-2 icon-flex10-child-2&quot;&gt;&lt;/div&gt;
      &lt;div class=&quot;icon-child flex10-child icon-flex10-child flex10-child-3 icon-flex10-child-3&quot;&gt;&lt;/div&gt;
      &lt;div class=&quot;icon-child flex10-child icon-flex10-child flex10-child-4 icon-flex10-child-4&quot;&gt;&lt;/div&gt;
      &lt;div class=&quot;icon-child flex10-child icon-flex10-child flex10-child-5 icon-flex10-child-5&quot;&gt;&lt;/div&gt;
      &lt;div class=&quot;icon-child flex10-child icon-flex10-child flex10-child-6 icon-flex10-child-6&quot;&gt;&lt;/div&gt;
      &lt;div class=&quot;icon-child flex10-child icon-flex10-child flex10-child-7 icon-flex10-child-7&quot;&gt;&lt;/div&gt;
      &lt;div class=&quot;icon-child flex10-child icon-flex10-child flex10-child-8 icon-flex10-child-8&quot;&gt;&lt;/div&gt;
      &lt;div class=&quot;icon-child flex10-child icon-flex10-child flex10-child-9 icon-flex10-child-9&quot;&gt;&lt;/div&gt;
      &lt;div class=&quot;icon-child flex10-child icon-flex10-child flex10-child-10 icon-flex10-child-10&quot;&gt;&lt;/div&gt;
    &lt;/div&gt;
    &lt;span class=&quot;post-flexbox-icon-overview-title&quot;&gt;Masonry&lt;/span&gt;
  &lt;/a&gt;
&lt;/div&gt;

&lt;p&gt;Every example assumes that your HTML contains an element with a class of &lt;code class=&quot;highlighter-rouge&quot;&gt;container&lt;/code&gt; which then contains several children that all have a class of &lt;code class=&quot;highlighter-rouge&quot;&gt;item&lt;/code&gt; (the number of children varies per example):&lt;/p&gt;

&lt;div class=&quot;language-html highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;container&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;item&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;item&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;item&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
  ...
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;style&gt;
.post-flexbox-icon-overview {
  display: flex;
  flex-flow: row wrap;
  justify-content: space-between;
  margin: 0 auto 2em;
  max-width: 700px;
  padding-left: 20px;
  padding-right: 20px;
}
.post-flexbox-icon-overview-item {
  width: 19%;
  background-color: #f8f8f9;
  box-shadow: 0 1px 1px rgba(0,0,0,0.1), 0 2px 2px rgba(0,0,0,0.1);
  border-radius: 3px;
  text-align: center;
  color: rgba(0,0,0,0.8);
  font-size: 10px;
  text-decoration: none;
  margin-bottom: 10px;
  padding: 20px 10px 5px;
  box-sizing: border-box;
  transition: transform 0.25s cubic-bezier(0.215, 0.61, 0.355, 1);
  display: flex;
  flex-direction: column;
  justify-content: space-evenly;
}
.post-flexbox-icon-overview-item:hover {
  transform: scale(1.07);
  color: rgba(0,0,0,0.8);
}

.post-flexbox-icon-overview-title {
  margin-top: 15px;
  margin-bottom: 10px;
  display: block;
  line-height: 1.1em;
}

.icon-flex {
  max-height: 56px;
  max-width: 70px;
  width: 100%;
  margin: 0 auto;
}

.icon-child {
  border-radius: 2px;
  background-color: #A2CBFA;
  border: 1px solid #4390E1;
  box-sizing: border-box;
}

.blog-content-wrapper {
  padding: 0 20px 20px;
  margin-bottom: 20px;
  max-width: 900px;
  margin-left: auto;
  margin-right: auto;
}

.flex {
  background-color: #f7f7f7;
  border-radius: 3px;
  padding: 20px;
}

.child {
  border-radius: 3px;
  background-color: #A2CBFA;
  border: 1px solid #4390E1;
  box-sizing: border-box;
  box-shadow: 0 2px 2px rgba(0,90,250,0.05),
    0 4px 4px rgba(0,90,250,0.05),
    0 8px 8px rgba(0,90,250,0.05),
    0 16px 16px rgba(0,90,250,0.05);
}
&lt;/style&gt;

&lt;h2 id=&quot;stretch-all-fixed-spacing&quot;&gt;Stretch all, fixed spacing&lt;/h2&gt;

&lt;div class=&quot;blog-content-wrapper&quot;&gt;
  &lt;div class=&quot;flex flex1&quot;&gt;
      &lt;div class=&quot;child flex1-child&quot;&gt;&lt;/div&gt;
      &lt;div class=&quot;child flex1-child&quot;&gt;&lt;/div&gt;
      &lt;div class=&quot;child flex1-child&quot;&gt;&lt;/div&gt;
      &lt;div class=&quot;child flex1-child&quot;&gt;&lt;/div&gt;
      &lt;div class=&quot;child flex1-child&quot;&gt;&lt;/div&gt;
  &lt;/div&gt;
&lt;/div&gt;

&lt;style&gt;
.flex1 {
  display: flex;
}

.flex1-child {
  flex-grow: 1;
  height: 100px;
}

.flex1-child + .flex1-child {
  margin-left: 2%;
}
&lt;/style&gt;

&lt;p&gt;The most basic flexbox pattern: getting a few boxes to stretch and fill the full width of their parent element. All you need to do is to set &lt;code class=&quot;highlighter-rouge&quot;&gt;display: flex&lt;/code&gt; on the container, and a &lt;code class=&quot;highlighter-rouge&quot;&gt;flex-grow&lt;/code&gt; value above &lt;code class=&quot;highlighter-rouge&quot;&gt;0&lt;/code&gt; on the children:&lt;/p&gt;

&lt;div class=&quot;language-css highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nc&quot;&gt;.container&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;display&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;flex&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;nc&quot;&gt;.item&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;flex-grow&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;height&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;100px&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;nc&quot;&gt;.item&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;.item&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;margin-left&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;2%&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;We use a &lt;code class=&quot;highlighter-rouge&quot;&gt;+&lt;/code&gt; selector to only add gaps between pairs of items (essentially just skipping the left margin for the first item in the list).&lt;/p&gt;

&lt;p&gt;Increasing &lt;code class=&quot;highlighter-rouge&quot;&gt;flex-grow&lt;/code&gt; will increase &lt;em&gt;the amount of space&lt;/em&gt; that an element is allowed to stretch to compared to any other element. If we set &lt;code class=&quot;highlighter-rouge&quot;&gt;flex-grow&lt;/code&gt;to &lt;code class=&quot;highlighter-rouge&quot;&gt;2&lt;/code&gt; on the middle element here, we would basically divide up the available space into 6 chunks (1 chunk for each item plus 1 extra for the middle item, 1+1+2+1+1). The middle item gets two chunks (&lt;code class=&quot;highlighter-rouge&quot;&gt;flex-grow: 2&lt;/code&gt;) worth of space, and all other elements get one chunk (&lt;code class=&quot;highlighter-rouge&quot;&gt;flex-grow: 1&lt;/code&gt;).&lt;/p&gt;

&lt;div class=&quot;blog-content-wrapper&quot;&gt;
  &lt;div class=&quot;flex flex1&quot;&gt;
      &lt;div class=&quot;child flex1-child&quot;&gt;&lt;/div&gt;
      &lt;div class=&quot;child flex1-child&quot;&gt;&lt;/div&gt;
      &lt;div class=&quot;child flex1-child&quot; style=&quot;flex-grow: 2&quot;&gt;&lt;/div&gt;
      &lt;div class=&quot;child flex1-child&quot;&gt;&lt;/div&gt;
      &lt;div class=&quot;child flex1-child&quot;&gt;&lt;/div&gt;
  &lt;/div&gt;
&lt;/div&gt;

&lt;h2 id=&quot;stretch-middle-fixed-spacing&quot;&gt;Stretch middle, fixed spacing&lt;/h2&gt;

&lt;div class=&quot;blog-content-wrapper&quot;&gt;
  &lt;div class=&quot;flex flex2&quot;&gt;
    &lt;div class=&quot;child flex2-child&quot;&gt;&lt;/div&gt;
    &lt;div class=&quot;child flex2-child flex2-child-center&quot;&gt;&lt;/div&gt;
    &lt;div class=&quot;child flex2-child&quot;&gt;&lt;/div&gt;
  &lt;/div&gt;
&lt;/div&gt;
&lt;style&gt;
  /* Example 2 */
.flex2 {
  display: flex;
}

.flex2-child {
  height: 100px;
  width: 100px;
}

.flex2-child-center {
  flex-grow: 1;
}

.flex2-child + .flex2-child {
  margin-left: 2%;
}
&lt;/style&gt;

&lt;p&gt;A common app and web pattern is to create a top bar where we want to stretch only the middle element, but keep the right most and left most elements fixed. If we just want one element to stretch, we can set a fixed width (e.g. &lt;code class=&quot;highlighter-rouge&quot;&gt;100px&lt;/code&gt;) on an element that should stay static, and &lt;code class=&quot;highlighter-rouge&quot;&gt;flex-grow: 1&lt;/code&gt; on the element that should stretch:&lt;/p&gt;

&lt;div class=&quot;language-css highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nc&quot;&gt;.container&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;display&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;flex&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;nc&quot;&gt;.item&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;height&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;100px&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;width&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;100px&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;/* A fixed width as the default */&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;nc&quot;&gt;.item-center&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; 
  &lt;span class=&quot;nl&quot;&gt;flex-grow&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;/* Set the middle element to grow and stretch */&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;nc&quot;&gt;.item&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;.item&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; 
  &lt;span class=&quot;nl&quot;&gt;margin-left&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;2%&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; 
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Even if the middle element here has a defined &lt;code class=&quot;highlighter-rouge&quot;&gt;width&lt;/code&gt; of &lt;code class=&quot;highlighter-rouge&quot;&gt;100px&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;flex-grow&lt;/code&gt; will make it stretch to take up all the available space.&lt;/p&gt;

&lt;h2 id=&quot;alternating-grid&quot;&gt;Alternating grid&lt;/h2&gt;

&lt;p&gt;A layout pattern that I use on my &lt;a href=&quot;/blog/&quot;&gt;blog overview&lt;/a&gt; is to create a grid with some variation: after every row of two equally sized items there’s one item that takes up an entire row:&lt;/p&gt;

&lt;div class=&quot;blog-content-wrapper&quot;&gt;
  &lt;div class=&quot;flex flex3&quot;&gt;
    &lt;div class=&quot;child flex3-child&quot;&gt;&lt;/div&gt;
    &lt;div class=&quot;child flex3-child&quot;&gt;&lt;/div&gt;
    &lt;div class=&quot;child flex3-child&quot;&gt;&lt;/div&gt;
    &lt;div class=&quot;child flex3-child&quot;&gt;&lt;/div&gt;
    &lt;div class=&quot;child flex3-child&quot;&gt;&lt;/div&gt;
  &lt;/div&gt;
&lt;/div&gt;
&lt;style type=&quot;text/css&quot;&gt;
  /* Example 3 */
.flex3 {
  display: flex;
  flex-wrap: wrap;
  justify-content: space-between;
}

.flex3-child {
  width: 49%;
  height: 100px;
  margin-bottom: 2%;
}

.flex3-child:nth-child(3n) {
  width: 100%;
}
&lt;/style&gt;

&lt;p&gt;To accomplish this we need to:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Set &lt;code class=&quot;highlighter-rouge&quot;&gt;flex-wrap: wrap&lt;/code&gt; on the container (or all &lt;code class=&quot;highlighter-rouge&quot;&gt;items&lt;/code&gt; would be rendered on a single row)&lt;/li&gt;
  &lt;li&gt;Set &lt;code class=&quot;highlighter-rouge&quot;&gt;justify-content: space-between&lt;/code&gt; on the container, to only create space between the elements (and not between the edge of the parent element and items)&lt;/li&gt;
  &lt;li&gt;Set every item’s &lt;code class=&quot;highlighter-rouge&quot;&gt;width&lt;/code&gt; to &lt;code class=&quot;highlighter-rouge&quot;&gt;49%&lt;/code&gt; (or something similar that is equal to or less than &lt;code class=&quot;highlighter-rouge&quot;&gt;50%&lt;/code&gt;)&lt;/li&gt;
  &lt;li&gt;Set every third item’s &lt;code class=&quot;highlighter-rouge&quot;&gt;width&lt;/code&gt; to &lt;code class=&quot;highlighter-rouge&quot;&gt;100%&lt;/code&gt; so that it fills that entire row. We can target every third item in the list with the &lt;code class=&quot;highlighter-rouge&quot;&gt;nth-child()&lt;/code&gt; selector.&lt;/li&gt;
&lt;/ol&gt;

&lt;div class=&quot;language-css highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nc&quot;&gt;.container&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;display&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;flex&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;flex-wrap&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;wrap&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;justify-content&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;space-between&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;nc&quot;&gt;.item&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;width&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;48%&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;height&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;100px&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;margin-bottom&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;2%&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;nc&quot;&gt;.item&lt;/span&gt;&lt;span class=&quot;nd&quot;&gt;:nth-child&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;3n&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;width&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;100%&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;If you want the first row to be full-width and the two following items to share a row, note that you can’t write &lt;code class=&quot;highlighter-rouge&quot;&gt;.item:nth-child(1n) { width: 100% }&lt;/code&gt;—that would target all items. You have to target the first item by selecting every third element, and then stepping back two items: &lt;code class=&quot;highlighter-rouge&quot;&gt;.item:nth-child(3n-2) { width: 100% }&lt;/code&gt;.&lt;/p&gt;

&lt;h2 id=&quot;3x3-grid&quot;&gt;3x3 grid&lt;/h2&gt;

&lt;div class=&quot;blog-content-wrapper&quot;&gt;
  &lt;div class=&quot;flex flex4&quot;&gt;
    &lt;div class=&quot;child flex4-child&quot;&gt;&lt;/div&gt;
    &lt;div class=&quot;child flex4-child&quot;&gt;&lt;/div&gt;
    &lt;div class=&quot;child flex4-child&quot;&gt;&lt;/div&gt;
    &lt;div class=&quot;child flex4-child&quot;&gt;&lt;/div&gt;
    &lt;div class=&quot;child flex4-child&quot;&gt;&lt;/div&gt;
    &lt;div class=&quot;child flex4-child&quot;&gt;&lt;/div&gt;
    &lt;div class=&quot;child flex4-child&quot;&gt;&lt;/div&gt;
    &lt;div class=&quot;child flex4-child&quot;&gt;&lt;/div&gt;
    &lt;div class=&quot;child flex4-child&quot;&gt;&lt;/div&gt;
  &lt;/div&gt;  
&lt;/div&gt;
&lt;style&gt;
.flex4 {
  display: flex;
  flex-wrap: wrap;
  justify-content: space-between;
}

.flex4-child {
  flex: 0 32%;
  height: 100px;
  margin-bottom: 2%;
}
&lt;/style&gt;

&lt;p&gt;We can create a 3x3 grid by setting &lt;code class=&quot;highlighter-rouge&quot;&gt;flex-grow&lt;/code&gt; to &lt;code class=&quot;highlighter-rouge&quot;&gt;0&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;flex-basis&lt;/code&gt; to the preferred width for all children (here done using the &lt;code class=&quot;highlighter-rouge&quot;&gt;flex&lt;/code&gt; short-hand: &lt;code class=&quot;highlighter-rouge&quot;&gt;flex: 0 32%&lt;/code&gt;). The margins between the items are the leftovers from every row, i.e. (100%-32x3)/2=2%. I’ve matched the margin (&lt;code class=&quot;highlighter-rouge&quot;&gt;margin-bottom: 2%&lt;/code&gt;) to achieve even spacing between all elements:&lt;/p&gt;

&lt;div class=&quot;language-css highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nc&quot;&gt;.container&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;display&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;flex&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;flex-wrap&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;wrap&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;justify-content&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;space-between&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;nc&quot;&gt;.item&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;flex&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;32%&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;height&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;100px&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;margin-bottom&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;2%&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;/* (100-32*3)/2 */&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;You can change the &lt;code class=&quot;highlighter-rouge&quot;&gt;flex-basis&lt;/code&gt; to increase or decrease the number of items on each row. &lt;code class=&quot;highlighter-rouge&quot;&gt;flex: 0 24%&lt;/code&gt; would put 4 items on every row, &lt;code class=&quot;highlighter-rouge&quot;&gt;flex: 0 19%&lt;/code&gt; would put 5 items on every row, and so on so forth.&lt;/p&gt;

&lt;h2 id=&quot;3x3-grid-constrained-proportions-11&quot;&gt;3x3 grid, constrained proportions (1:1)&lt;/h2&gt;
&lt;div class=&quot;blog-content-wrapper&quot;&gt;
  &lt;div class=&quot;flex flex5&quot;&gt;
    &lt;div class=&quot;child flex5-child&quot;&gt;&lt;/div&gt;
    &lt;div class=&quot;child flex5-child&quot;&gt;&lt;/div&gt;
    &lt;div class=&quot;child flex5-child&quot;&gt;&lt;/div&gt;
    &lt;div class=&quot;child flex5-child&quot;&gt;&lt;/div&gt;
    &lt;div class=&quot;child flex5-child&quot;&gt;&lt;/div&gt;
    &lt;div class=&quot;child flex5-child&quot;&gt;&lt;/div&gt;
    &lt;div class=&quot;child flex5-child&quot;&gt;&lt;/div&gt;
    &lt;div class=&quot;child flex5-child&quot;&gt;&lt;/div&gt;
    &lt;div class=&quot;child flex5-child&quot;&gt;&lt;/div&gt;
  &lt;/div&gt;
&lt;/div&gt;
&lt;style&gt;
.flex5 {
  display: flex;
  flex-wrap: wrap;
  justify-content: space-between;
}

.flex5-child {
  width: 32%;
  padding-bottom: 32%;
  margin-bottom: 2%; /* (100-32*3)/2 */
}
&lt;/style&gt;

&lt;p&gt;We can create a grid full of items with constrained proportions by using a somewhat hacky &lt;code class=&quot;highlighter-rouge&quot;&gt;padding&lt;/code&gt; CSS trick. If we use &lt;code class=&quot;highlighter-rouge&quot;&gt;%&lt;/code&gt; when setting &lt;code class=&quot;highlighter-rouge&quot;&gt;padding&lt;/code&gt; on an element the &lt;code class=&quot;highlighter-rouge&quot;&gt;padding&lt;/code&gt; is set relative to that item’s parent’s &lt;code class=&quot;highlighter-rouge&quot;&gt;width&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;.container&lt;/code&gt; in this case. We can use that effect to create a square by setting an item’s &lt;code class=&quot;highlighter-rouge&quot;&gt;width&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;padding-bottom&lt;/code&gt; to the same value (and effectively setting the &lt;code class=&quot;highlighter-rouge&quot;&gt;height&lt;/code&gt; of that element through &lt;code class=&quot;highlighter-rouge&quot;&gt;padding-bottom&lt;/code&gt;):&lt;/p&gt;

&lt;div class=&quot;language-css highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nc&quot;&gt;.container&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;display&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;flex&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;flex-wrap&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;wrap&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;justify-content&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;space-between&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;nc&quot;&gt;.item&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;width&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;32%&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;padding-bottom&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;32%&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;/* Same as width, sets height */&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;margin-bottom&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;2%&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;/* (100-32*3)/2 */&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;position&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;relative&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Since we’ve created an element that is effectively made up of only padding, and there’s no place left for content, we need to set &lt;code class=&quot;highlighter-rouge&quot;&gt;position: relative&lt;/code&gt; on the &lt;code class=&quot;highlighter-rouge&quot;&gt;.item&lt;/code&gt; in this example and add a child element with &lt;code class=&quot;highlighter-rouge&quot;&gt;position: absolute&lt;/code&gt;, and use that element to “reset” the canvas and add content.&lt;/p&gt;

&lt;h2 id=&quot;3x3-grid-constrained-proportions-169&quot;&gt;3x3 grid, constrained proportions (16:9)&lt;/h2&gt;

&lt;div class=&quot;blog-content-wrapper&quot;&gt;
  &lt;div class=&quot;flex flex6&quot;&gt;
    &lt;div class=&quot;child flex6-child&quot;&gt;&lt;/div&gt;
    &lt;div class=&quot;child flex6-child&quot;&gt;&lt;/div&gt;
    &lt;div class=&quot;child flex6-child&quot;&gt;&lt;/div&gt;
    &lt;div class=&quot;child flex6-child&quot;&gt;&lt;/div&gt;
    &lt;div class=&quot;child flex6-child&quot;&gt;&lt;/div&gt;
    &lt;div class=&quot;child flex6-child&quot;&gt;&lt;/div&gt;
    &lt;div class=&quot;child flex6-child&quot;&gt;&lt;/div&gt;
    &lt;div class=&quot;child flex6-child&quot;&gt;&lt;/div&gt;
    &lt;div class=&quot;child flex6-child&quot;&gt;&lt;/div&gt;
  &lt;/div&gt;
&lt;/div&gt;
&lt;style&gt;
.flex6 {
  display: flex;
  flex-wrap: wrap;
  justify-content: space-between;
}

.flex6-child {
  width: 32%;
  padding-bottom: 18%; /* Proportions between 32 and 18 is 16:9 */
  margin-bottom: 2%; /* (100-32*3)/2 */
}
&lt;/style&gt;

&lt;p&gt;To change the proportions of the items all you need to do is change the proportions of the &lt;code class=&quot;highlighter-rouge&quot;&gt;width&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;padding-bottom&lt;/code&gt; on the &lt;code class=&quot;highlighter-rouge&quot;&gt;.item&lt;/code&gt;. Changing the &lt;code class=&quot;highlighter-rouge&quot;&gt;width&lt;/code&gt; would affect the number of items on each row, so as to not affect the grid structure we can for example change &lt;code class=&quot;highlighter-rouge&quot;&gt;padding-bottom&lt;/code&gt; to &lt;code class=&quot;highlighter-rouge&quot;&gt;18%&lt;/code&gt; to create 16:9 (equivalent to 32:18) rectangles.&lt;/p&gt;

&lt;div class=&quot;language-css highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nc&quot;&gt;.container&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;display&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;flex&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;flex-wrap&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;wrap&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;justify-content&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;space-between&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;nc&quot;&gt;.item&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;width&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;32%&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;padding-bottom&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;18%&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;/* 32:18, i.e. 16:9 */&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;margin-bottom&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;2%&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;/* (100-32*3)/2 */&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;graph-vertical-bars&quot;&gt;Graph: vertical bars&lt;/h2&gt;
&lt;div class=&quot;blog-content-wrapper&quot;&gt;
  &lt;div class=&quot;flex flex7&quot;&gt;
    &lt;div class=&quot;child flex7-child flex7-child-1&quot;&gt;&lt;/div&gt;
    &lt;div class=&quot;child flex7-child flex7-child-2&quot;&gt;&lt;/div&gt;
    &lt;div class=&quot;child flex7-child flex7-child-3&quot;&gt;&lt;/div&gt;
    &lt;div class=&quot;child flex7-child flex7-child-4&quot;&gt;&lt;/div&gt;
    &lt;div class=&quot;child flex7-child flex7-child-5&quot;&gt;&lt;/div&gt;
  &lt;/div&gt;
&lt;/div&gt;
&lt;style&gt;
.flex7 {
  display: flex;
  height: 300px;
  justify-content: space-between;
  align-items: flex-end;
}

.flex7-child {
  width: 14%;
}

.flex7-child-1 { height: 40%; }
.flex7-child-2 { height: 50%; }
.flex7-child-3 { height: 60%; }
.flex7-child-4 { height: 20%; }
.flex7-child-5 { height: 30%; }
&lt;/style&gt;

&lt;p&gt;If you want to use flexbox to create a simple graph visualization, all you need to do is to set &lt;code class=&quot;highlighter-rouge&quot;&gt;align-items&lt;/code&gt; of the container to &lt;code class=&quot;highlighter-rouge&quot;&gt;flex-end&lt;/code&gt; and define a &lt;code class=&quot;highlighter-rouge&quot;&gt;height&lt;/code&gt; for each bar. &lt;code class=&quot;highlighter-rouge&quot;&gt;flex-end&lt;/code&gt; will make sure that the bars are anchored to the bottom of the graph.&lt;/p&gt;

&lt;div class=&quot;language-css highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nc&quot;&gt;.container&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;display&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;flex&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;height&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;300px&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;justify-content&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;space-between&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;align-items&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;flex-end&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;nc&quot;&gt;.item&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nl&quot;&gt;width&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;14%&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;nc&quot;&gt;.item-1&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nl&quot;&gt;height&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;40%&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;nc&quot;&gt;.item-2&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nl&quot;&gt;height&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;50%&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;nc&quot;&gt;.item-3&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nl&quot;&gt;height&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;60%&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;nc&quot;&gt;.item-4&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nl&quot;&gt;height&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;20%&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;nc&quot;&gt;.item-5&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nl&quot;&gt;height&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;30%&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;graph-horizontal-bars&quot;&gt;Graph: horizontal bars&lt;/h2&gt;

&lt;div class=&quot;blog-content-wrapper&quot;&gt;
  &lt;div class=&quot;flex flex8&quot;&gt;
    &lt;div class=&quot;child flex8-child flex8-child-1&quot;&gt;&lt;/div&gt;
    &lt;div class=&quot;child flex8-child flex8-child-2&quot;&gt;&lt;/div&gt;
    &lt;div class=&quot;child flex8-child flex8-child-3&quot;&gt;&lt;/div&gt;
    &lt;div class=&quot;child flex8-child flex8-child-4&quot;&gt;&lt;/div&gt;
    &lt;div class=&quot;child flex8-child flex8-child-5&quot;&gt;&lt;/div&gt;
  &lt;/div&gt;
&lt;/div&gt;
&lt;style&gt;
.flex8 {
  display: flex;
  height: 300px;
  justify-content: space-between;
  flex-direction: column;
}

.flex8-child {
  height: 14%;
}

.flex8-child-1 { width: 40%; }
.flex8-child-2 { width: 50%; }
.flex8-child-3 { width: 60%; }
.flex8-child-4 { width: 20%; }
.flex8-child-5 { width: 30%; }
&lt;/style&gt;

&lt;p&gt;Using the same technique as for vertical bars, we can simply add &lt;code class=&quot;highlighter-rouge&quot;&gt;flex-direction&lt;/code&gt; on the &lt;code class=&quot;highlighter-rouge&quot;&gt;container&lt;/code&gt; with a value of &lt;code class=&quot;highlighter-rouge&quot;&gt;column&lt;/code&gt; to create a set of horizontal bars. &lt;code class=&quot;highlighter-rouge&quot;&gt;flex-direction&lt;/code&gt; can have a value of &lt;code class=&quot;highlighter-rouge&quot;&gt;row&lt;/code&gt; (default) or &lt;code class=&quot;highlighter-rouge&quot;&gt;column&lt;/code&gt;, where a &lt;code class=&quot;highlighter-rouge&quot;&gt;row&lt;/code&gt; runs horizontally (→) and a &lt;code class=&quot;highlighter-rouge&quot;&gt;column&lt;/code&gt; runs vertically (↓). You can also reverse the direction of both by using &lt;code class=&quot;highlighter-rouge&quot;&gt;row-reverse&lt;/code&gt; (←) and &lt;code class=&quot;highlighter-rouge&quot;&gt;column-reverse&lt;/code&gt; (↑) respectively.&lt;/p&gt;

&lt;div class=&quot;language-css highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nc&quot;&gt;.container&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;display&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;flex&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;height&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;300px&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;justify-content&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;space-between&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;flex-direction&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;column&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;nc&quot;&gt;.item&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nl&quot;&gt;height&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;14%&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;nc&quot;&gt;.item-1&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nl&quot;&gt;width&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;40%&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;nc&quot;&gt;.item-2&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nl&quot;&gt;width&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;50%&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;nc&quot;&gt;.item-3&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nl&quot;&gt;width&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;60%&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;nc&quot;&gt;.item-4&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nl&quot;&gt;width&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;20%&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;nc&quot;&gt;.item-5&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nl&quot;&gt;width&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;30%&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;vertical-stack-centered&quot;&gt;Vertical stack (centered)&lt;/h2&gt;

&lt;div class=&quot;blog-content-wrapper&quot;&gt;
  &lt;div class=&quot;flex flex9&quot;&gt;
    &lt;div class=&quot;child flex9-child&quot;&gt;&lt;/div&gt;
    &lt;div class=&quot;child flex9-child&quot;&gt;&lt;/div&gt;
    &lt;div class=&quot;child flex9-child&quot;&gt;&lt;/div&gt;
    &lt;div class=&quot;child flex9-child&quot;&gt;&lt;/div&gt;
    &lt;div class=&quot;child flex9-child&quot;&gt;&lt;/div&gt;
  &lt;/div&gt;
&lt;/div&gt;
&lt;style&gt;
.flex9 {
  display: flex;
  flex-direction: column;
  align-items: center;
}

.flex9-child {
  width: 40%;
  height: 40px;
  margin-bottom: 2%;
}
&lt;/style&gt;

&lt;p&gt;To create a vertical stack and make the items run from top to bottom all we need to do is to change the &lt;code class=&quot;highlighter-rouge&quot;&gt;flex-direction&lt;/code&gt; from the default value of &lt;code class=&quot;highlighter-rouge&quot;&gt;row&lt;/code&gt; to &lt;code class=&quot;highlighter-rouge&quot;&gt;column&lt;/code&gt;:&lt;/p&gt;

&lt;div class=&quot;language-css highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nc&quot;&gt;.container&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;display&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;flex&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;flex-direction&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;column&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;align-items&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;center&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;nc&quot;&gt;.item&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;height&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;40px&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;margin-bottom&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;10px&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;masonry-or-mosaic&quot;&gt;Masonry (or mosaic)&lt;/h2&gt;

&lt;div class=&quot;blog-content-wrapper&quot;&gt;
  &lt;div class=&quot;flex flex10&quot;&gt;
    &lt;div class=&quot;child flex10-child flex10-child-1&quot;&gt;1&lt;/div&gt;
    &lt;div class=&quot;child flex10-child flex10-child-2&quot;&gt;2&lt;/div&gt;
    &lt;div class=&quot;child flex10-child flex10-child-3&quot;&gt;3&lt;/div&gt;
    &lt;div class=&quot;child flex10-child flex10-child-4&quot;&gt;4&lt;/div&gt;
    &lt;div class=&quot;child flex10-child flex10-child-5&quot;&gt;5&lt;/div&gt;
    &lt;div class=&quot;child flex10-child flex10-child-6&quot;&gt;6&lt;/div&gt;
    &lt;div class=&quot;child flex10-child flex10-child-7&quot;&gt;7&lt;/div&gt;
    &lt;div class=&quot;child flex10-child flex10-child-8&quot;&gt;8&lt;/div&gt;
    &lt;div class=&quot;child flex10-child flex10-child-9&quot;&gt;9&lt;/div&gt;
    &lt;div class=&quot;child flex10-child flex10-child-10&quot;&gt;10&lt;/div&gt;
  &lt;/div&gt;
&lt;/div&gt;
&lt;style&gt;
.flex10 {
  display: flex;
  flex-flow: column wrap;
  align-content: space-between;
  height: 580px;
}

.flex10::before,
.flex10::after {
  content: &quot;&quot;;
  flex-basis: 100%;
  width: 0;
  order: 2;
  border: 1px solid #ddd;
}

.icon-flex10::before,
.icon-flex10::after {
  border: 0;
}

.flex10-child {
  width: 32%;
  margin-bottom: 2%; /* (100-32*3)/2 */
  padding: 10px;
  box-sizing: border-box;
  text-align: center;
  color: white;
}

.flex10-child-1 { height: 200px; }
.flex10-child-2 { height: 250px; }
.flex10-child-3 { height: 225px; }
.flex10-child-4 { height: 100px; }
.flex10-child-5 { height: 100px; }
.flex10-child-6 { height: 125px; }
.flex10-child-7 { height: 100px; }
.flex10-child-8 { height: 75px; }
.flex10-child-9 { height: 100px; }
.flex10-child-10 { height: 100px; }

.flex10-child:nth-child(3n+1) { order: 1; }
.flex10-child:nth-child(3n+2) { order: 2; }
.flex10-child:nth-child(3n) { order: 3; }

/* For icon at the top */
.icon-flex10-child {
  padding: 0;
  border-radius: 1px;
}
.icon-flex10-child-1 { height: 10px; }
.icon-flex10-child-2 { height: 22px; }
.icon-flex10-child-3 { height: 14px; }
.icon-flex10-child-4 { height: 15px; }
.icon-flex10-child-5 { height: 16px; }
.icon-flex10-child-6 { height: 17px; }
.icon-flex10-child-7 { height: 12px; }
.icon-flex10-child-8 { height: 12px; }
.icon-flex10-child-9 { height: 12px; }
.icon-flex10-child-10 { height: 10px; }
&lt;/style&gt;

&lt;p&gt;You’ve probably seen masonry (or mosaic) layouts all over the internet, but it’s likely that they were all powered by &lt;a href=&quot;https://masonry.desandro.com&quot;&gt;Masonry&lt;/a&gt; or a similar JavaScript library. Flexbox might seem like a great candidate to finally create this layout with CSS only, and it’s certainly possible, but it’s surprisingly hacky.&lt;/p&gt;

&lt;p&gt;One of the main challenges of creating a masonry layout with flexbox is that to make an item affect the positioning of an item above and below it we need to change the &lt;code class=&quot;highlighter-rouge&quot;&gt;flex-direction&lt;/code&gt; of the container to &lt;code class=&quot;highlighter-rouge&quot;&gt;column&lt;/code&gt;, which makes items run from top to bottom. This creates a layout that looks great, and similar to the masonry effect, but it could be confusing for users; it creates an unexpected ordering of elements. If you read from left to right the elements would seem to be shuffled and appear in a seemingly random order, for example 1, 3, 6, 2, 4, 7, 8, etc.&lt;/p&gt;

&lt;p&gt;Luckily, we can use the &lt;code class=&quot;highlighter-rouge&quot;&gt;order&lt;/code&gt; property to change in which order elements are rendered. We can combine that property with some clever use of the &lt;code class=&quot;highlighter-rouge&quot;&gt;nth-child()&lt;/code&gt; selector to order items dynamically depending on their original order. If we want to create a masonry layout with three columns we can divide all the items into three “groups”, like so:&lt;/p&gt;

&lt;div class=&quot;language-css highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;/* Re-order items into rows */&lt;/span&gt;
&lt;span class=&quot;nc&quot;&gt;.item&lt;/span&gt;&lt;span class=&quot;nd&quot;&gt;:nth-child&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;3n&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nl&quot;&gt;order&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;nc&quot;&gt;.item&lt;/span&gt;&lt;span class=&quot;nd&quot;&gt;:nth-child&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;3n&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nl&quot;&gt;order&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;nc&quot;&gt;.item&lt;/span&gt;&lt;span class=&quot;nd&quot;&gt;:nth-child&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;3n&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;   &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nl&quot;&gt;order&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;/* Force new columns */&lt;/span&gt;
&lt;span class=&quot;nc&quot;&gt;.container&lt;/span&gt;&lt;span class=&quot;nd&quot;&gt;::before&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;
&lt;span class=&quot;nc&quot;&gt;.container&lt;/span&gt;&lt;span class=&quot;nd&quot;&gt;::after&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;content&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&quot;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;flex-basis&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;100%&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;width&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;order&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;I’ve written &lt;a href=&quot;/blog/masonry-with-css/&quot;&gt;another post that explains in detail how this works and why&lt;/a&gt;. This will set the &lt;code class=&quot;highlighter-rouge&quot;&gt;order&lt;/code&gt; to &lt;code class=&quot;highlighter-rouge&quot;&gt;1&lt;/code&gt; for the 1st element, 4th element, 7th element, etc. Elements with the same &lt;code class=&quot;highlighter-rouge&quot;&gt;order&lt;/code&gt; value will be ordered on ascending order according to the source code order, or which value was &lt;em&gt;set&lt;/em&gt; first, so in this example we’re producing three sets ordered like so: &lt;code class=&quot;highlighter-rouge&quot;&gt;1, 4, 7, 10&lt;/code&gt; (3n+1) with &lt;code class=&quot;highlighter-rouge&quot;&gt;order: 1&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;2, 5, 8&lt;/code&gt; (3n+2) with &lt;code class=&quot;highlighter-rouge&quot;&gt;order: 2&lt;/code&gt;, and &lt;code class=&quot;highlighter-rouge&quot;&gt;3, 6, 9&lt;/code&gt; (3n) with &lt;code class=&quot;highlighter-rouge&quot;&gt;order: 3&lt;/code&gt;. These three groups represent our three columns. Put together the order becomes &lt;code class=&quot;highlighter-rouge&quot;&gt;1, 4, 7, 10, 2, 5, 8, 3, 6, 9&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;If we make sure to render each of those groups as one column (no more, no less), it’ll create the illusion that the items have returned to their original order when you read from left to right. If we visually parse the grid as rows, the first row will contain the first element from every group (&lt;code class=&quot;highlighter-rouge&quot;&gt;1, 2, 3&lt;/code&gt;), the second row will contain the second element from every group (&lt;code class=&quot;highlighter-rouge&quot;&gt;4, 5, 6&lt;/code&gt;), and so on so forth. We then insert elements between the columns that take up 100% of the parent’s height, &lt;a href=&quot;/blog/flexbox-break-to-new-row/&quot;&gt;which force the columns to line break&lt;/a&gt; and not accidentally merge with adjacent columns. Here’s the full CSS snippet:&lt;/p&gt;

&lt;div class=&quot;language-css highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nc&quot;&gt;.container&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;display&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;flex&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;flex-flow&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;column&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;wrap&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;align-content&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;space-between&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;height&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;580px&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;nc&quot;&gt;.item&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;width&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;32%&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;margin-bottom&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;2%&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;/* (100-32*3)/2 */&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;/* Re-order items into rows */&lt;/span&gt;
&lt;span class=&quot;nc&quot;&gt;.item&lt;/span&gt;&lt;span class=&quot;nd&quot;&gt;:nth-child&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;3n&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nl&quot;&gt;order&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;nc&quot;&gt;.item&lt;/span&gt;&lt;span class=&quot;nd&quot;&gt;:nth-child&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;3n&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nl&quot;&gt;order&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;nc&quot;&gt;.item&lt;/span&gt;&lt;span class=&quot;nd&quot;&gt;:nth-child&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;3n&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;   &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nl&quot;&gt;order&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;/* Force new columns */&lt;/span&gt;
&lt;span class=&quot;nc&quot;&gt;.container&lt;/span&gt;&lt;span class=&quot;nd&quot;&gt;::before&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;
&lt;span class=&quot;nc&quot;&gt;.container&lt;/span&gt;&lt;span class=&quot;nd&quot;&gt;::after&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;content&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&quot;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;flex-basis&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;100%&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;width&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;order&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Visually this achieves something that is very close to the masonry effect. How is the tab order affected? Luckily, not at all. &lt;code class=&quot;highlighter-rouge&quot;&gt;order&lt;/code&gt; only changes the visual representation of objects, not the tab order, so tabbing through the grid will work as intended.&lt;/p&gt;

&lt;p&gt;If you want to make a masonry layout with more than three columns (or want a better understanding of how this works) I recommend reading &lt;a href=&quot;/blog/masonry-with-css/&quot;&gt;the dedicated post on how to create masonry layouts with CSS&lt;/a&gt;.&lt;/p&gt;
</description>
				<pubDate>Mon, 15 Apr 2019 10:12:00 +0000</pubDate>
				<link>https://tobiasahlin.com/blog/common-flexbox-patterns/</link>
				<guid isPermaLink="true">https://tobiasahlin.com/blog/common-flexbox-patterns/</guid>
			</item>
		
			<item>
				<title>Meaningful Motion with Action-Driven Animation</title>
				<description>&lt;div class=&quot;blog-banner&quot;&gt;
  &lt;div class=&quot;blog-banner-content&quot;&gt;
    &lt;div class=&quot;post-ada-container&quot;&gt;
      &lt;div class=&quot;post-ada-window&quot;&gt;
        &lt;div class=&quot;post-ada-message&quot;&gt;Do thing?&lt;/div&gt;
        &lt;div class=&quot;post-ada-button post-ada-button-cancel&quot;&gt;Cancel&lt;div class=&quot;post-ada-button-overlay&quot;&gt;&lt;/div&gt;&lt;/div&gt;
        &lt;div class=&quot;post-ada-button post-ada-button-ok&quot;&gt;Do it&lt;div class=&quot;post-ada-button-overlay&quot;&gt;&lt;/div&gt;&lt;/div&gt;
      &lt;/div&gt;
      &lt;img src=&quot;/static/cursor.png&quot; width=&quot;30&quot; class=&quot;post-ada-cursor&quot; /&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/div&gt;
&lt;style&gt;
.post-ada-container {
  width: 100px;
  height: 80px;
  position: relative;
  display: inline-block;
  color: #000;
}
.post-ada-window {
    border-radius: 3px;
    background-color: #fff;
    text-align: center;
    display: block;
    width: 100%;
    height: 100%;
    font-family: SF UI, SF Display, Helvetica Neue, Arial, sans-serif;
    font-weight: 400;
    font-size: 10px;
    transform: translateZ(0);
    overflow: hidden;
}
.post-ada-message { padding-top: 15px; transform: translateZ(0); }
.post-ada-button {
  position: absolute;
  bottom: 0;
  height: 20px;
  background-color: #e5e5e5;
  border-top: 1px solid #cecece;
  width: 50%;
  line-height: 20px;
  padding-bottom: 1px;
}
.post-ada-button-overlay {
  position: absolute;
  height: 100%;
  width: 100%;
  top: 0;
  left: 0;
  background-color: #000;
  opacity: 0;
}
.post-ada-button-cancel { left: 0; }
.post-ada-button-ok { right: 0; border-left: 1px solid #cecece; }
.post-ada-container .post-ada-cursor { position: absolute; bottom: -25px; right: -18px; }

&lt;/style&gt;

&lt;script&gt;
// Post icon animation
var postIconTimeline = anime.timeline({ loop: true });
postIconTimeline
  .add({
    targets: '.post-ada-cursor',
    translateX: &quot;-75px&quot;,
    easing: &quot;easeOutBack&quot;,
    duration: 400,
    delay: 100
  }).add({
    // Press button
    targets: '.post-ada-button-cancel .post-ada-button-overlay',
    opacity: [0, 0.3],
    easing: 'easeOutExpo',
    duration: 100
  }).add({
    // Press button
    targets: '.post-ada-button-cancel .post-ada-button-overlay',
    opacity: [0.3, 0],
    easing: 'easeOutExpo',
    duration: 100
  }).add({
    // Shrink modal
    targets: '.post-ada-window',
    scale: 0.7,
    opacity: 0,
    easing: &quot;easeOutExpo&quot;,
    duration: 600
  }).add({
    // Reveal modal
    targets: '.post-ada-window',
    scale: 1,
    opacity: 1,
    easing: &quot;easeOutExpo&quot;,
    duration: 600,
    delay: 1000
  }).add({
    // Move cursor
    targets: '.post-ada-cursor',
    translateX: &quot;0px&quot;,
    easing: &quot;easeOutBack&quot;,
    duration: 400,
    delay: 100
  }).add({
    // Press button
    targets: '.post-ada-button-ok .post-ada-button-overlay',
    opacity: [0, 0.3],
    easing: 'easeOutExpo',
    duration: 100,
    delay: 200
  }).add({
    // Press button
    targets: '.post-ada-button-ok .post-ada-button-overlay',
    opacity: [0.3, 0],
    easing: 'easeOutExpo',
    duration: 100
  }).add({
    // Expand modal
    targets: '.post-ada-window',
    scale: 1.3,
    opacity: 0,
    easing: &quot;easeOutExpo&quot;,
    duration: 600
  }).add({
    // Reveal modal
    targets: '.post-ada-window',
    scale: [0.6, 1],
    opacity: 1,
    easing: &quot;easeOutExpo&quot;,
    duration: 600,
    delay: 1000
  });
app.animations.track(postIconTimeline, document.querySelector(&quot;.post-ada-window&quot;));
&lt;/script&gt;

&lt;!--more--&gt;

&lt;p&gt;How do we animate interfaces in ways that are not just beautiful, but meaningful? When we add motion to interfaces we want to in one way or another improve the user experience, be it through aiding the comprehension of a concept, setting the mood, improving the perception of speed, or directing the attention of a user. Regardless of the intent of the animation, when animations fail to be meaningful they often fail because of the same reason; failed animations simply visualize objects morphing between being hidden and visible, rather than visualizing the actions unfolding on screen. A window rarely just closes or opens; a message is sent, a draft is discarded, an item is used.&lt;/p&gt;

&lt;p&gt;This is essentially &lt;em&gt;state-driven animation&lt;/em&gt; vs. &lt;em&gt;action-driven animation&lt;/em&gt;. By applying action-driven animation you can catch yourself in the act of creating something that’s not as meaningful as it could be. Are you simply morphing between states, or are you visualizing actions?  Meaningful motion is about clear and engaging storytelling, and we can apply action-driven animation to remind ourselves when we’re straying from that path.&lt;/p&gt;

&lt;script src=&quot;https://cdnjs.cloudflare.com/ajax/libs/animejs/2.0.2/anime.min.js&quot;&gt;&lt;/script&gt;

&lt;h2 id=&quot;state-driven-animation&quot;&gt;State-driven animation&lt;/h2&gt;

&lt;p&gt;Let’s take a look at a basic example of state-driven animation vs. action-driven animation: interacting with a modal. This is a simulation of state-driven animation being applied to a modal:&lt;/p&gt;

&lt;div class=&quot;post-demo-content post-ada-canvas&quot;&gt;
  &lt;div class=&quot;post-ada-content ada-modal-sda&quot;&gt;
    &lt;div class=&quot;post-ada-pause-play post-ada-pause-play-1&quot;&gt;&lt;/div&gt;
    &lt;div class=&quot;post-ada-modal&quot;&gt;
      &lt;div class=&quot;post-ada-modal-message&quot;&gt;Do you wish to do thing?&lt;/div&gt;
      &lt;div class=&quot;post-ada-modal-button post-ada-modal-button-left&quot;&gt;Cancel&lt;div class=&quot;post-ada-modal-button-overlay&quot;&gt;&lt;/div&gt;&lt;/div&gt;
      &lt;div class=&quot;post-ada-modal-button post-ada-modal-button-right&quot;&gt;Do thing&lt;div class=&quot;post-ada-modal-button-overlay&quot;&gt;&lt;/div&gt;&lt;/div&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/div&gt;

&lt;p&gt;As the modal appears, it fades in. Whatever button is pushed, it fades out again. What’s wrong with this animation? Fading between hidden and visible isn’t helpful to understand what’s happening on screen, other than in underlining that an object is being shown and hidden.&lt;/p&gt;

&lt;p&gt;You might be thinking “C’mon, what is there to understand? It’s a modal. It’s being hidden, and shown!”. Yes, but—the user is also triggering an action. Rather than only morphing between states, we can use motion to reinforce what action is being triggered by the user.&lt;/p&gt;

&lt;h2 id=&quot;action-driven-animation&quot;&gt;Action-driven animation&lt;/h2&gt;

&lt;p&gt;Here’s is a simulation of action-driven animation being applied to the same modal:&lt;/p&gt;

&lt;div class=&quot;post-demo-content post-ada-canvas&quot;&gt;
  &lt;div class=&quot;post-ada-content ada-modal-ada&quot;&gt;
    &lt;div class=&quot;post-ada-pause-play post-ada-pause-play-2&quot;&gt;&lt;/div&gt;
    &lt;div class=&quot;post-ada-modal&quot;&gt;
      &lt;div class=&quot;post-ada-modal-message&quot;&gt;Do you wish to do thing?&lt;/div&gt;
      &lt;div class=&quot;post-ada-modal-button post-ada-modal-button-left&quot;&gt;Cancel&lt;div class=&quot;post-ada-modal-button-overlay&quot;&gt;&lt;/div&gt;&lt;/div&gt;
      &lt;div class=&quot;post-ada-modal-button post-ada-modal-button-right&quot;&gt;Do thing&lt;div class=&quot;post-ada-modal-button-overlay&quot;&gt;&lt;/div&gt;&lt;/div&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/div&gt;

&lt;p&gt;Now, how is this better than the previous animation? Try to ignore for the moment the aesthetics of the two. What we want to focus on is this: what does the second animation convey that the first one does not?&lt;/p&gt;

&lt;p&gt;In the first example, with state-driven animation, we use two different animations: fading in, and fading out. Clicking &lt;em&gt;Cancel&lt;/em&gt; and clicking &lt;em&gt;Do it&lt;/em&gt; both triggers the fade out animation. In other words, the only thing we’re differentiating between is the &lt;em&gt;states&lt;/em&gt; of the modal: hidden vs. visible.&lt;/p&gt;

&lt;p&gt;Contrarily, in the second example we’ve got three different animations, and we differ between the two &lt;em&gt;actions&lt;/em&gt; by playing different animations depending on the chosen option. On &lt;em&gt;Cancel&lt;/em&gt;, we clearly show that the modal is being cancelled by scaling it down and fading it out, sending it back to where it came from. When the affirmative action is selected (&lt;em&gt;Do thing&lt;/em&gt;), we do the opposite: scale it up and fade it out, bringing it closer to the user. In other words, we’re not only differentiating between states, but &lt;em&gt;how you travel between those states&lt;/em&gt;, i.e., what actions are being performed.&lt;/p&gt;

&lt;p&gt;It’s common to think of apps as a series of views or states, and animations as a way to travel between those states. Take this Email app and two of its states:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/static/action-driven-animation/state-driven-animation.png&quot; alt=&quot;Illustrated example of state-driven animation, showing the transition between two states of an email app; the main window with a composing window overlaying it (state A), and after closing it, just the main window (state b)&quot; /&gt;&lt;/p&gt;

&lt;p&gt;If we do so, it’s easy to in our animations neglect &lt;em&gt;how&lt;/em&gt; these states are connected, and always use the same transition to animate between those states. Rule of thumb: if your methods are called something like &lt;code class=&quot;highlighter-rouge&quot;&gt;showWindow()&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;hideWindow()&lt;/code&gt;, or if you’re only animating &lt;code class=&quot;highlighter-rouge&quot;&gt;opacity&lt;/code&gt;, you’re leaving your users in the dark to figure out exactly what happened. They’ll see that something changed, but not what caused that change. It’s sort of like leaving a party without saying goodbye; the host won’t know if you hated the party or just had to run home to do your laundry.&lt;/p&gt;

&lt;p&gt;Action-driven animation elevates &lt;em&gt;the connections between the views&lt;/em&gt; to become the plots of the motion. In other words, what took you between state and A and state B? In our Email app, you can get between state A (composing visible) and state B (composing hidden) in at least two different ways: either by sending an email, or by discarding an email and closing the window.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/static/action-driven-animation/action-driven-animation.png&quot; alt=&quot;Illustrated example of action-driven animation, showing two different animations between two states of an email app; you can hide the compose window either by sending an email, or by discarding an email&quot; /&gt;&lt;/p&gt;

&lt;p&gt;You’ll make your app easier to understand by visualizing whatever caused the change of state. By creating a unique animation for every action we can help users differentiate between different action paths, and help them intuitively gain a deeper understanding of the events unfolding on screen.&lt;/p&gt;

&lt;h2 id=&quot;when-state-driven-animation-fails&quot;&gt;When state-driven animation fails&lt;/h2&gt;

&lt;p&gt;That sounds simple, right? It’s easier said than done. A while back, just before giving a talk on UI animation at a conference in Prague, I was stumped by an animation used by Tumblr. Before continuing, I want to underline that I highly respect the Tumblr design team—they’ve produced some admirable design, and I have on several occasions used some of their implementations as examples to be inspired by. That said, something went wrong in this specific instance.&lt;/p&gt;

&lt;p&gt;I had just signed up for a new Tumblr account and was getting ready to make my first post. But for some reason, whatever I posted kept disappearing as I hit &lt;em&gt;Post&lt;/em&gt;:&lt;/p&gt;

&lt;video playsinline=&quot;&quot; controls=&quot;&quot; width=&quot;900&quot; poster=&quot;/static/action-driven-animation/posters/tumblr.jpg&quot;&gt;
  &lt;source src=&quot;/static/action-driven-animation/tumblr-fail.mp4&quot; type=&quot;video/mp4&quot; /&gt;
  &lt;source src=&quot;/static/action-driven-animation/tumblr-fail.webm&quot; type=&quot;video/webm&quot; /&gt;
&lt;/video&gt;

&lt;p&gt;Or, as you can see towards the end of the clip, that’s not at all what happened. Whatever option I selected, &lt;em&gt;Close&lt;/em&gt; and &lt;em&gt;Post&lt;/em&gt; both triggered the same animation (with the exception of a spinner showing up briefly inside the Post button when I selected &lt;em&gt;Post&lt;/em&gt;). Nothing gave me a hint of that something had been successfully posted. The post section just disappeared.&lt;/p&gt;

&lt;p&gt;What’s gone wrong here? On first sight this animation looks meaningful and helpful. But again, we’re just morphing between two states, rather than visualizing the actions unfolding on the screen. Cancelling a post and successfully posting is two fundamentally different actions, yet they share the same animation. In this instance state-driven animation doesn’t just fail to be as meaningful as it could be—it’s causing confusion and obfuscating what’s happening.&lt;/p&gt;

&lt;p&gt;To be fair to Tumblr, the issue is in this instance is being amplified by the Dashboard on-boarding that’s floating just below the navigation, pushing down new posts below the fold. But regardless of the unlucky circumstances, the animation can be improved by moving from state-driven animation to action-driven animation. Rather than only morphing between the two states of the posting section (visible and hidden), the action of posting could be associated with an animation that clearly transitions between you writing a post, to the post being published.&lt;/p&gt;

&lt;h2 id=&quot;applying-action-driven-animation&quot;&gt;Applying action-driven animation&lt;/h2&gt;

&lt;p&gt;So how do you go about using action-driven animation to improve the animations of your product? To show this in practice, I’ve mocked up a dummy email app (shown previously in the email illustration above). Let’s look closer at the actions related to working with a message, and make the move from state-driven animation to action-driven animation together.&lt;/p&gt;

&lt;p&gt;The first step is to list all important actions in the part of the app that you’re working with, rather than all views. There are only two views involved in working with a message in our Email app, but there are four different actions. You can:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Create a new message&lt;/li&gt;
  &lt;li&gt;Send the message&lt;/li&gt;
  &lt;li&gt;Discard the message&lt;/li&gt;
  &lt;li&gt;Close the message and save it as a draft&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;If we just faded between the different views, this is what it would look like working with the app (going through the different actions in the order above):&lt;/p&gt;

&lt;video playsinline=&quot;&quot; width=&quot;900&quot; controls=&quot;&quot; poster=&quot;/static/action-driven-animation/posters/state-driven-animation.jpg&quot;&gt;
  &lt;source src=&quot;/static/action-driven-animation/email-fade.mp4&quot; type=&quot;video/mp4&quot; /&gt;
  &lt;source src=&quot;/static/action-driven-animation/email-fade.webm&quot; type=&quot;video/webm&quot; /&gt;
&lt;/video&gt;

&lt;p&gt;To create more meaningful animations we need to look critically at every fade and ask ourselves: what actions are being taken?&lt;/p&gt;

&lt;h3 id=&quot;choosing-a-storytelling-axis&quot;&gt;Choosing a storytelling axis&lt;/h3&gt;

&lt;p&gt;Before we create a unique animation for every action, let’s settle on a primary axis to weave our storytelling around. If you’re interacting with something that will affect yourself or the user directly (e.g. a modal asking you if you want to continue), the Z axis is usually the best choice. If we weave our storytelling around the Z axis, like we did in our modal example earlier, we can make the modal move closer towards you as you choose an affirmative action (scaling up the modal, almost as if it lifts off the screen and travels towards you), and we can make it move away from you as you dismiss it. The Z axis reinforces that the modal relates to &lt;em&gt;you&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;When you’re interacting with something that relates to someone else, like an email message that you’re about to send off to someone, your best choice of primary axis is usually the Y axis. By moving something rapidly upwards along the Y axis and making it exit the screen while still accelerating away from you, we reinforce the concept of you sending off something to someone else. It’s almost as if you’re taking an envelope and sending it off to its next destination. Or as if you’re using a salmon cannon:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/static/action-driven-animation/cannon-1.gif&quot; width=&quot;900&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/static/action-driven-animation/cannon-2.gif&quot; width=&quot;900&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Since we’re working with an email message here that we’ll eventually send off to someone else, let’s pick the Y axis as our primary axis. What that in mind, let’s break down every action and animation, before reviewing it all together.&lt;/p&gt;

&lt;h3 id=&quot;creating-a-new-email&quot;&gt;Creating a new email&lt;/h3&gt;

&lt;p&gt;Rather than only fading in a new message once you create it, we can animate the window to make it appear like we’re summoning a new message from below. Just like how in this lovely GIF (by &lt;a href=&quot;http://jonasmosesson.se&quot;&gt;Jonas Mosesson&lt;/a&gt;) the toast appears with a bounce from below:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/static/action-driven-animation/toast.gif&quot; /&gt;&lt;/p&gt;

&lt;p&gt;In the same vein, we can fade in the message as we animate it upwards along the Y axis, but we’ll make it stay in view:&lt;/p&gt;

&lt;video playsinline=&quot;&quot; controls=&quot;&quot; width=&quot;900&quot; poster=&quot;/static/action-driven-animation/posters/new-message.jpg&quot;&gt;
  &lt;source src=&quot;/static/action-driven-animation/new-message-animated.mp4&quot; type=&quot;video/mp4&quot; /&gt;  
  &lt;source src=&quot;/static/action-driven-animation/new-message-animated.webm&quot; type=&quot;video/webm&quot; /&gt;
&lt;/video&gt;

&lt;p&gt;This animation is by itself not much more meaningful than only fading in and out, but it starts to get interesting as soon as we start adding the other animations that are clearly different from this, but connected to the same storyline.&lt;/p&gt;

&lt;h3 id=&quot;discarding-a-message&quot;&gt;Discarding a message&lt;/h3&gt;

&lt;p&gt;Once you discard an email we can make it fall back down, returning it to where it came from. Here I’m also applying a slight tilt to the window on its way down to illustrate that you’re throwing it away (rather than storing it somewhere). As if you’re dropping a piece of paper, rather than putting it away neatly:&lt;/p&gt;

&lt;video playsinline=&quot;&quot; controls=&quot;&quot; width=&quot;900&quot; poster=&quot;/static/action-driven-animation/posters/close.jpg&quot;&gt;
  &lt;source src=&quot;/static/action-driven-animation/new-close-animated.mp4&quot; type=&quot;video/mp4&quot; /&gt;
  &lt;source src=&quot;/static/action-driven-animation/new-close-animated.webm&quot; type=&quot;video/webm&quot; /&gt;
&lt;/video&gt;

&lt;h3 id=&quot;sending-a-message&quot;&gt;Sending a message&lt;/h3&gt;

&lt;p&gt;Once you hit send, let’s shoot it off, away from us (and hopefully towards a recipient):&lt;/p&gt;

&lt;video playsinline=&quot;&quot; controls=&quot;&quot; width=&quot;900&quot; poster=&quot;/static/action-driven-animation/posters/send.jpg&quot;&gt;
  &lt;source src=&quot;/static/action-driven-animation/new-send-animated.mp4&quot; type=&quot;video/mp4&quot; /&gt;
  &lt;source src=&quot;/static/action-driven-animation/new-send-animated.webm&quot; type=&quot;video/webm&quot; /&gt;
&lt;/video&gt;

&lt;p&gt;With those three actions visualized in distinctly different ways, we’ve now got a clear story created around how messages are created, discarded, and sent off. Even though you might not infer the meaning of all the animations on first sight (they’re not necessarily intuitive), they’re clearly different and connected to an action each, and you can at the very least learn how to tell the different animations apart.&lt;/p&gt;

&lt;h3 id=&quot;saving-as-a-draft&quot;&gt;Saving as a draft&lt;/h3&gt;

&lt;p&gt;We’ve got one more action to cover. Saving a draft is crucially &lt;em&gt;not&lt;/em&gt; the same thing as closing the window and discarding an email. Again, we’re dealing with actions, not states. It’s not a matter of showing or hiding objects, it’s a matter of visualizing the events unfolding on screen.&lt;/p&gt;

&lt;p&gt;If we try to close the new message window while writing a message, we’re asked if we want to discard the email, or save it as a draft. Given that someone chooses “Save as draft”, what’s important to convey? At least two things, 1) that the message is being saved as a draft somewhere, and 2) exactly where that somewhere is. We want users of our app to understand where they can find that draft later, so that they can send it when the time is right:&lt;/p&gt;

&lt;video playsinline=&quot;&quot; controls=&quot;&quot; width=&quot;900&quot; poster=&quot;/static/action-driven-animation/posters/save-draft.jpg&quot;&gt;
  &lt;source src=&quot;/static/action-driven-animation/save-draft-animated.mp4&quot; type=&quot;video/mp4&quot; /&gt;
  &lt;source src=&quot;/static/action-driven-animation/save-draft-animated.webm&quot; type=&quot;video/webm&quot; /&gt;
&lt;/video&gt;

&lt;p&gt;This animation clearly shows how your message message gets stored in your outbox, and it even tells you where your outbox is located! We’ve restricted ourselves to animating along the Y-axis up to this point to enforce the concept of &lt;em&gt;creating something and sending it off&lt;/em&gt;. Now that we’re deviating from that storyline and instead storing a message, we can drop the axis restriction and shrink the message while we move it towards the outbox icon.&lt;/p&gt;

&lt;p&gt;To make it clear that we’re storing the message inside the outbox (and not just shrinking and hiding the message window), we’re adding another effect: as the message window arrives at the outbox icon, we make the outbox icon grow with a small bounce effect (as if it swallows the message), and we add a small counter indicating that your number of saved drafts just increased from 0 to 1. This animation doesn’t just tell you what events are being triggered: it teaches you how the app works, and how to navigate it.&lt;/p&gt;

&lt;h3 id=&quot;review-before--after&quot;&gt;Review: before &amp;amp; after&lt;/h3&gt;

&lt;p&gt;Before we started applying action-driven animation, we faded views in and out, which gave the false impression of us using animations to make the experience better. The animations looked a bit better than simply popping views in and out of view, but the animations didn’t add much value in terms of helping users understand of what events were unfolding on screen. This is an example of state-driven animation, and it looked like this:&lt;/p&gt;

&lt;video playsinline=&quot;&quot; controls=&quot;&quot; width=&quot;900&quot; poster=&quot;/static/action-driven-animation/posters/state-driven-animation.jpg&quot;&gt;
  &lt;source src=&quot;/static/action-driven-animation/email-fade.mp4&quot; type=&quot;video/mp4&quot; /&gt;
  &lt;source src=&quot;/static/action-driven-animation/email-fade.webm&quot; type=&quot;video/webm&quot; /&gt;
&lt;/video&gt;

&lt;p&gt;After critically reviewing every animation and asking ourselves what each animation should convey and how best to do so, we iterated on the experience and created a set of animations that each conveys what events are unfolding on screen. We did so with the help of action-driven animation, which helps us identify the number of animations that we need to create through its focus on possible action paths, rather than on possible states. After applying action-driven animation, this is what our prototype looks like:&lt;/p&gt;

&lt;video playsinline=&quot;&quot; controls=&quot;&quot; width=&quot;900&quot; poster=&quot;/static/action-driven-animation/posters/action-driven-animation.jpg&quot;&gt;
  &lt;source src=&quot;/static/action-driven-animation/all-animated.mp4&quot; type=&quot;video/mp4&quot; /&gt;
  &lt;source src=&quot;/static/action-driven-animation/all-animated.webm&quot; type=&quot;video/webm&quot; /&gt;
&lt;/video&gt;

&lt;h2 id=&quot;in-sum&quot;&gt;In sum&lt;/h2&gt;

&lt;p&gt;I divided UI animations into two different models: &lt;strong&gt;state-driven animation&lt;/strong&gt; and &lt;strong&gt;action-driven animation&lt;/strong&gt;. I argued that the first model tends to produce animations that lack any significant meaning; they are not helpful. I presented an example from Tumblr to illustrate how state.driven animation can, even when it looks beautiful, miscommunicate and cause confusion.&lt;/p&gt;

&lt;p&gt;I argued that a better way to work with animations is to focus on the actions or events that are being triggered, which I call &lt;strong&gt;action-driven animation&lt;/strong&gt;. We reviewed how this technique can be applied to a modal and an email app, and how it aids users in understanding what actions and events are unfolding before them, but also how the app works, and how to navigate it.&lt;/p&gt;

&lt;p&gt;Is action-driven animation always better? The statistician George Box famously said “All models are wrong but some are useful”. He elaborated:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;All models are wrong but some are useful […] The only question of interest is “Is the model illuminating and useful?”&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;In the same vein, action-driven animation is not a model that claims to absolutely explain or prove how an app should be animated. It’s a simplified way of thinking about motion that you can apply to review the interface animations of an app or product to create more meaningful animations. I’ve found it useful to use in my work, and I hope you will, too.&lt;/p&gt;

&lt;h3 id=&quot;technical-details&quot;&gt;Technical details&lt;/h3&gt;

&lt;p&gt;Although no code has been shared in this post, all of the examples that I created are animated with the lovely &lt;a href=&quot;http://anime-js.com&quot;&gt;anime.js library&lt;/a&gt; (by &lt;a href=&quot;http://juliangarnier.com&quot;&gt;Julian Garnier&lt;/a&gt;). If you want to play around with the email prototype and its animations, feel free &lt;a href=&quot;/static/action-driven-animation/email-prototype.zip&quot;&gt;download all the example code&lt;/a&gt; and have a look around. All icons are from &lt;a href=&quot;https://material.io/icons/&quot;&gt;Google’s Material&lt;/a&gt;.&lt;/p&gt;

&lt;h3 id=&quot;related-posts&quot;&gt;Related posts&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;/blog/curved-path-animations-in-css/&quot;&gt;Moving along a curved path in CSS with layered animation&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;/blog/how-to-animate-box-shadow/&quot;&gt;How to animate “box-shadow” with silky smooth performance&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;/spinkit/&quot;&gt;SpinKit: Simple spinners animated with CSS&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;style&gt;
.post-ada-canvas {
  background-color: #2b2f3c;
  display: block;
  border: 0;
}

.post-ada-content {
  height: 500px;
  position: relative;
  max-width: 700px;
  margin: 0 auto;
}
.post-ada-pause-play {
  width: 42px;
  height: 42px;
  background-color: #000;
  opacity: 0.3;
  position: absolute;
  top: 0px;
  left: 0px;
  border-radius: 30px;
}
.post-ada-pause-play:active { opacity: 0.5; }
.post-ada-pause-play::after {
  content: &quot;&quot;;
  display: none;
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  width: 20px;
  height: 20px;
  margin: auto;
  background-image: url(/static/play.svg); 
  background-size: contain;
}
.post-ada-pause-play::before {
  content: &quot;&quot;;
  display: block;
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  width: 20px;
  height: 20px;
  margin: auto;
  background-image: url(/static/pause.svg);
  background-size: contain;
}
.post-ada-pause-play.state-is-paused::after {
  display: block;
}
.post-ada-pause-play.state-is-paused::before {
  display: none;
}
.post-ada-modal {
  font-family: SF UI, SF Display, Helvetica Neue, Arial, sans-serif;
  position: absolute;
  margin: auto;
  top: 0;
  left: 0;
  bottom: 0;
  right: 0;
  background-color: #fff;
  border-radius: 5px;
  height: 200px;
  width: 300px;
  max-width: 100%;
  text-align: center;
  cursor: default;
  overflow: hidden;
}
.post-ada-modal-message {
  padding-top: 65px;
}
.post-ada-modal-button {
  border-top: 1px solid #cecece;
  height: 40px;
  line-height: 40px;
  position: absolute;
  width: 50%;
  bottom: 0;
  overflow: hidden;
}
.post-ada-modal-button-overlay {
  position: absolute;
  height: 100%;
  width: 100%;
  top: 0;
  left: 0;
  background-color: #000;
  opacity: 0;
}
.post-ada-modal-button-left { left: 0; }
.post-ada-modal-button-right {
  right: 0;
  border-left: 1px solid #cecece;
}
&lt;/style&gt;

&lt;script&gt;
// Animation 1 - state-driven animation
var stateDrivenModalTimeline = anime.timeline({ loop: true });
stateDrivenModalTimeline
  .add({
    targets: '.ada-modal-sda .post-ada-modal-button-left .post-ada-modal-button-overlay',
    opacity: [0, 0.3],
    easing: 'easeOutExpo',
    duration: 100
  })
  .add({
    targets: '.ada-modal-sda .post-ada-modal-button-left .post-ada-modal-button-overlay',
    opacity: [0.3, 0],
    easing: 'easeOutExpo',
    duration: 100
  })
  .add({
    targets: '.ada-modal-sda .post-ada-modal',
    opacity: 0,
    easing: 'easeOutExpo',
    delay: 200
  })
  .add({
    targets: '.ada-modal-sda .post-ada-modal',
    opacity: 1,
    easing: 'easeOutExpo',
    delay: 400
  })
  .add({
    targets: '.ada-modal-sda .post-ada-modal-button-right .post-ada-modal-button-overlay',
    opacity: [0, 0.3],
    easing: 'easeOutExpo',
    duration: 100
  })
  .add({
    targets: '.ada-modal-sda .post-ada-modal-button-right .post-ada-modal-button-overlay',
    opacity: [0.3, 0],
    easing: 'easeOutExpo',
    duration: 100
  })
  .add({
    targets: '.ada-modal-sda .post-ada-modal',
    opacity: 0,
    easing: 'easeOutExpo',
    delay: 200
  })
  .add({
    targets: '.ada-modal-sda .post-ada-modal',
    opacity: 1,
    easing: 'easeOutExpo',
    delay: 400
  });

// Animation 2 - action driven animation
var actionDrivenModalTimeline = anime.timeline({ loop: true });
actionDrivenModalTimeline
  .add({
    targets: '.ada-modal-ada .post-ada-modal-button-left .post-ada-modal-button-overlay',
    opacity: [0, 0.3],
    easing: 'easeOutQuad',
    delay: 300,
    duration: 100
  }).add({
    targets: '.ada-modal-ada .post-ada-modal-button-left .post-ada-modal-button-overlay',
    opacity: [0.3, 0],
    easing: 'easeOutQuad',
    duration: 100
  }).add({
    targets: '.ada-modal-ada .post-ada-modal',
    opacity: 0,
    scale: 0.8,
    easing: 'easeInQuad',
    duration: 400
  }).add({
    targets: '.ada-modal-ada .post-ada-modal',
    opacity: 1,
    scale: [0.5, 1],
    easing: 'easeOutQuad',
    duration: 500,
    delay: 600
  }).add({
    targets: '.ada-modal-ada .post-ada-modal-button-right .post-ada-modal-button-overlay',
    opacity: [0, 0.3],
    easing: 'easeOutQuad',
    delay: 200,
    duration: 100
  }).add({
    targets: '.ada-modal-ada .post-ada-modal-button-right .post-ada-modal-button-overlay',
    opacity: [0.3, 0],
    easing: 'easeOutQuad',
    duration: 100
  }).add({
    targets: '.ada-modal-ada .post-ada-modal',
    opacity: 0,
    scale: 1.2,
    duration: 400,
    easing: 'easeInQuad'
  }).add({
    targets: '.ada-modal-ada .post-ada-modal',
    opacity: 1,
    scale: [0.5, 1],
    easing: 'easeOutQuad',
    duration: 400,
    delay: 600
  });

// Wire up play buttons with animations
document.querySelector('.post-ada-pause-play-1').onclick = function() {pausePlayAnimation(stateDrivenModalTimeline, this)};
document.querySelector('.post-ada-pause-play-2').onclick = function() {pausePlayAnimation(actionDrivenModalTimeline, this)};

// Helper function
function pausePlayAnimation(timeline, e) {
  if (timeline.paused) {
    timeline.play();
    $(e).removeClass(&quot;state-is-paused&quot;);
  } else {
    timeline.pause();
    $(e).addClass(&quot;state-is-paused&quot;);
  }
}

&lt;/script&gt;

</description>
				<pubDate>Tue, 16 May 2017 08:52:00 +0000</pubDate>
				<link>https://tobiasahlin.com/blog/meaningful-motion-w-action-driven-animation/</link>
				<guid isPermaLink="true">https://tobiasahlin.com/blog/meaningful-motion-w-action-driven-animation/</guid>
			</item>
		
			<item>
				<title>Data visualization with Chart.js: An introduction</title>
				<description>&lt;div class=&quot;blog-banner&quot;&gt;
  &lt;div class=&quot;blog-banner-content&quot;&gt;
      &lt;img class=&quot;chartjs-banner-logo&quot; src=&quot;/static/chartjs-logo.svg&quot; alt=&quot;Graph.js&quot; height=&quot;110&quot; width=&quot;110&quot; /&gt;
  &lt;/div&gt;
&lt;/div&gt;

&lt;!--more--&gt;

&lt;p&gt;You can tell powerful stories with data. If you want to visualize data in a blog post, on your site, or in a presentation, there are a few libraries out there that can help you achieve stunning results with relatively little work. &lt;a href=&quot;http://www.chartjs.org&quot;&gt;Chart.js&lt;/a&gt; is one of those libraries. When I’m teaching data at &lt;a href=&quot;https://www.hyperisland.com&quot;&gt;Hyper Island&lt;/a&gt;, this is one of the essential tools that’s included in the &lt;a href=&quot;https://www.hyperisland.com/programs-and-courses/digital-data-strategist&quot;&gt;Data Strategist&lt;/a&gt; program. Although less flexible and capable than &lt;a href=&quot;https://d3js.org&quot;&gt;D3&lt;/a&gt;, it’s easier to wrap your head around and to get started with, yet powerful enough to cover more than just your basic needs. In this introductory tutorial we’ll build an interactive graph and get a brief overview of the framework’s cababilities.&lt;/p&gt;

&lt;h2 id=&quot;what-well-build&quot;&gt;What we’ll build&lt;/h2&gt;

&lt;p&gt;We’re going to create a simple but powerful responsive line graph, visualizing the world population during the last 500 years, and a prediction for 2050:&lt;/p&gt;

&lt;h4 id=&quot;number-of-earthlings-in-millions&quot;&gt;Number of earthlings (in millions)&lt;/h4&gt;

&lt;p class=&quot;blog-content-wrapper&quot;&gt;
  &lt;canvas id=&quot;chartjs-intro-myChart&quot; width=&quot;800&quot; height=&quot;450&quot;&gt;&lt;/canvas&gt;
&lt;/p&gt;

&lt;style&gt;
#myChart {
  width: 100%;
}
&lt;/style&gt;

&lt;p&gt;We’ll customize the graph to use our own colors, and you’ll be able to click the legends to toggle the visibility of the corresponding lines, as well as hover the points for details. You can &lt;a href=&quot;/demo/chartjs-intro/static/final.zip&quot;&gt;download the finished result&lt;/a&gt; or &lt;a href=&quot;/demo/chartjs-intro/&quot;&gt;view the demo&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&quot;what-youll-need&quot;&gt;What you’ll need&lt;/h2&gt;

&lt;p&gt;No prior experience with either HTML, CSS or JavaScript is needed to go through this tutorial. Hi beginners 👋 some experience will help you grasp the nuances of what’s going on, but regardless of your level of expertize, coming out on the other side of the tutorial you’ll have a graph. All you need is a text editor (I highly recommend &lt;a href=&quot;https://www.sublimetext.com&quot;&gt;Sublime&lt;/a&gt; or &lt;a href=&quot;https://atom.io&quot;&gt;Atom&lt;/a&gt;).&lt;/p&gt;

&lt;h2 id=&quot;wait-whats-chartjs&quot;&gt;Wait, what’s Chart.js?&lt;/h2&gt;

&lt;p&gt;&lt;img alt=&quot;Chart.js logo&quot; src=&quot;/static/chartjs-logo.svg&quot; class=&quot;alignright&quot; /&gt; Chart.js is a community maintained open-source library (it’s &lt;a href=&quot;https://github.com/chartjs/Chart.js&quot;&gt;available on GitHub&lt;/a&gt;) that helps you easily visualize data using JavaScript. It’s similar to &lt;a href=&quot;https://gionkunz.github.io/chartist-js/&quot;&gt;Chartist&lt;/a&gt; and &lt;a href=&quot;https://developers.google.com/chart/&quot;&gt;Google Charts&lt;/a&gt;. It supports 8 different chart types (including bars, lines, &amp;amp; pies), and they’re all responsive. In other words, you set up your chart once, and Chart.js will do the heavy-lifting for you and make sure that it’s always legible (for example by removing some uncritical details if the chart gets smaller).&lt;/p&gt;

&lt;p&gt;In a gist, this is what you need to do to draw a chart with Chart.js:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Define &lt;em&gt;where&lt;/em&gt; on your page to draw the graph.&lt;/li&gt;
  &lt;li&gt;Define &lt;em&gt;what type of graph&lt;/em&gt; you want to draw.&lt;/li&gt;
  &lt;li&gt;&lt;em&gt;Supply Chart.js with data&lt;/em&gt;, labels, and other options.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;…and you’ll get a beautiful, responsive, graph! Although we won’t dig too deep into changing the design of our graph in this tutorial, Chart.js graphs are highly customizable. As a rule, whatever you see you can affect, and although the charts look good without much customization, you’ll likely be able to realize all your (or someone else’s) design visions with some extra effort.&lt;/p&gt;

&lt;h2 id=&quot;step-1-add-chartjs&quot;&gt;Step 1: Add Chart.js&lt;/h2&gt;

&lt;p&gt;First of we need to add Chart.js to our page so that we can use the library. For this project, I’ve prepared a simple playground with a HTML file with only the essentials. &lt;a href=&quot;/demo/chartjs-intro/static/starting-point.zip&quot;&gt;Download the starting point&lt;/a&gt; and open the folder, and you should see three files:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;index.html&lt;/li&gt;
  &lt;li&gt;styles.css&lt;/li&gt;
  &lt;li&gt;script.js&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I’ve added some basic styling to &lt;code class=&quot;highlighter-rouge&quot;&gt;style.css&lt;/code&gt;, but &lt;code class=&quot;highlighter-rouge&quot;&gt;script.js&lt;/code&gt; is completely empty—this is where we’ll add the code to draw our graph in a moment. For now, open up &lt;code class=&quot;highlighter-rouge&quot;&gt;index.html&lt;/code&gt; in a text editor. To use Chart.js we need to link to the library inside of our &lt;code class=&quot;highlighter-rouge&quot;&gt;head&lt;/code&gt;. You could download the library and host it yourself, but the easiest (and probably fastest) way is to just use a CDN (&lt;em&gt;content delivery network&lt;/em&gt;, in this instance a fancy way of saying “nice people who’re hosting the libraries we need”).&lt;/p&gt;

&lt;p&gt;If you go to &lt;a href=&quot;http://www.chartjs.org&quot;&gt;chartjs.org&lt;/a&gt; and click on &lt;em&gt;Documentation&lt;/em&gt;, you’ll see a link to &lt;a href=&quot;https://cdnjs.com/libraries/Chart.js&quot;&gt;their recommended CDN&lt;/a&gt;. Follow the link, and look for the URL ending with &lt;code class=&quot;highlighter-rouge&quot;&gt;Chart.min.js&lt;/code&gt;. At the time of this writing, the latest version is &lt;code class=&quot;highlighter-rouge&quot;&gt;2.5.0&lt;/code&gt;:&lt;/p&gt;

&lt;div class=&quot;language-html highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;script &lt;/span&gt;&lt;span class=&quot;na&quot;&gt;src=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;https://cdnjs.cloudflare.com/ajax/libs/Chart.js/2.5.0/Chart.min.js&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/script&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Copy and paste this row onto row 5 in &lt;code class=&quot;highlighter-rouge&quot;&gt;index.html&lt;/code&gt;. After pasting, your &lt;code class=&quot;highlighter-rouge&quot;&gt;head&lt;/code&gt; should look like so:&lt;/p&gt;

&lt;div class=&quot;language-html highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;head&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;title&amp;gt;&lt;/span&gt;World population&lt;span class=&quot;nt&quot;&gt;&amp;lt;/title&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;script &lt;/span&gt;&lt;span class=&quot;na&quot;&gt;src=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;https://cdnjs.cloudflare.com/ajax/libs/Chart.js/2.5.0/Chart.min.js&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/script&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;link&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;rel=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;stylesheet&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;type=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;text/css&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;href=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;style.css&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/head&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;step-2-prepare-a-place-in-your-html-to-render-the-chart&quot;&gt;Step 2: Prepare a place in your HTML to render the chart&lt;/h2&gt;

&lt;p&gt;The last thing we need to prepare before we can start visualizing our data is to define an area in our HTML where we want to draw the graph. For Chart.js you do this by adding a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Canvas_API&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;canvas&lt;/code&gt;&lt;/a&gt; element, and setting &lt;code class=&quot;highlighter-rouge&quot;&gt;width&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;height&lt;/code&gt; to define the proportions of your graph.&lt;/p&gt;

&lt;p&gt;On row 13 in &lt;code class=&quot;highlighter-rouge&quot;&gt;index.html&lt;/code&gt;, copy and paste this row to create your canvas element:&lt;/p&gt;

&lt;div class=&quot;language-html highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;canvas&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;id=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;myChart&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;width=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;1600&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;height=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;900&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/canvas&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Notice that we’ve added an &lt;code class=&quot;highlighter-rouge&quot;&gt;id&lt;/code&gt; (&lt;code class=&quot;highlighter-rouge&quot;&gt;myChart&lt;/code&gt;) to the &lt;code class=&quot;highlighter-rouge&quot;&gt;canvas&lt;/code&gt; element that we can later use to reference our designated graph element in JavaScript or CSS. What this ID is set to has no significance for Chart.js; you can name it whatever you want. What matters is that you use the exact same ID when you reference it in JavaScript or CSS. If you’re adding several graphs to a page, just make sure that every ID is unique (you could for example give your graphs more specific names, like &lt;code class=&quot;highlighter-rouge&quot;&gt;populationChart&lt;/code&gt; or &lt;code class=&quot;highlighter-rouge&quot;&gt;regionChart&lt;/code&gt;).&lt;/p&gt;

&lt;h2 id=&quot;step-3-prepare-the-data&quot;&gt;Step 3: Prepare the data&lt;/h2&gt;

&lt;p&gt;The data we’re using is from &lt;a href=&quot;https://en.wikipedia.org/wiki/World_population#Population_growth_by_region&quot;&gt;Wikipedia’s article on World population&lt;/a&gt;, and includes a world population prediction from &lt;a href=&quot;https://esa.un.org/unpd/wpp/Publications/Files/Key_Findings_WPP_2015.pdf&quot;&gt;UN’s World Population Prospects report&lt;/a&gt;. Here’s the raw data that we’ll be using:&lt;/p&gt;

&lt;h4 id=&quot;world-historical-and-predicted-populations-in-millions&quot;&gt;World historical and predicted populations (in millions)&lt;/h4&gt;

&lt;table class=&quot;article-table&quot;&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th style=&quot;text-align: left&quot;&gt;Region&lt;/th&gt;
      &lt;th style=&quot;text-align: right&quot;&gt;1500&lt;/th&gt;
      &lt;th style=&quot;text-align: right&quot;&gt;1600&lt;/th&gt;
      &lt;th style=&quot;text-align: right&quot;&gt;1700&lt;/th&gt;
      &lt;th style=&quot;text-align: right&quot;&gt;1750&lt;/th&gt;
      &lt;th style=&quot;text-align: right&quot;&gt;1800&lt;/th&gt;
      &lt;th style=&quot;text-align: right&quot;&gt;1850&lt;/th&gt;
      &lt;th style=&quot;text-align: right&quot;&gt;1900&lt;/th&gt;
      &lt;th style=&quot;text-align: right&quot;&gt;1950&lt;/th&gt;
      &lt;th style=&quot;text-align: right&quot;&gt;1999&lt;/th&gt;
      &lt;th style=&quot;text-align: right&quot;&gt;2050&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;&lt;strong&gt;Africa&lt;/strong&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;86&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;114&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;106&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;106&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;107&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;111&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;133&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;221&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;783&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;2478&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;&lt;strong&gt;Asia&lt;/strong&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;282&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;350&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;411&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;502&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;635&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;809&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;947&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;1402&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;3700&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;5267&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;&lt;strong&gt;Europe&lt;/strong&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;168&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;170&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;178&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;190&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;203&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;276&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;408&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;547&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;675&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;734&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;&lt;strong&gt;Latin America&lt;/strong&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;40&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;20&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;10&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;16&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;24&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;38&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;74&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;167&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;508&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;784 &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;&lt;strong&gt;North America&lt;/strong&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;6&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;3&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;2&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;2&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;7&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;26&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;82&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;172&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;312&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;433&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;To draw lines and add labels along axes, Chart.js expects the data to be passed in the form of a set of &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array&quot;&gt;arrays&lt;/a&gt;, like so: &lt;code class=&quot;highlighter-rouge&quot;&gt;[10, 4, 7]&lt;/code&gt;. We’re going to use 6 arrays in total: one for all the year labels to be shown along the X axis (1500-2050) and one array for each region containing the population data. So all we need to do is copy each row in our table above, seperate each value with a comma, and then end and start the list with []-brackets.&lt;/p&gt;

&lt;p&gt;The table above, reformatted to arrays, looks like so:&lt;/p&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;// Our labels along the x-axis&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;years&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1500&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1600&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1700&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1750&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1800&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1850&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1900&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1950&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1999&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2050&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// For drawing the lines&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;africa&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;86&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;114&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;106&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;106&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;107&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;111&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;133&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;221&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;783&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2478&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;asia&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;282&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;350&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;411&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;502&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;635&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;809&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;947&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1402&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3700&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;5267&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;europe&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;168&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;170&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;178&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;190&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;203&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;276&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;408&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;547&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;675&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;734&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;latinAmerica&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;40&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;20&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;16&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;24&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;38&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;74&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;167&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;508&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;784&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;northAmerica&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;6&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;7&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;26&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;82&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;172&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;312&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;433&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Copy all of these rows, and paste them into &lt;code class=&quot;highlighter-rouge&quot;&gt;script.js&lt;/code&gt;.&lt;/p&gt;

&lt;h2 id=&quot;step-4-draw-a-line&quot;&gt;Step 4: Draw a line!&lt;/h2&gt;

&lt;p&gt;At last! We’ve arrived at the moment of truth. Visualizing data with Graph.js is pretty straightforward. All we need to do is define what graph we want to draw, and pass in the data that we want to visualize. Let’s start by drawing one single line to see if we can get it to work: below the data that you just pasted into &lt;code class=&quot;highlighter-rouge&quot;&gt;script.js&lt;/code&gt;, add these lines of JavaScript:&lt;/p&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;ctx&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;document&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;getElementById&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;myChart&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;myChart&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Chart&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;ctx&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;type&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'line'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;labels&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;years&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;datasets&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; 
        &lt;span class=&quot;na&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;africa&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;…open up &lt;code class=&quot;highlighter-rouge&quot;&gt;index.html&lt;/code&gt; in a browser, refresh and… tada! You created a graph! It’s not the prettiest, but hey, it’s rising and it’s looking all professional!&lt;/p&gt;

&lt;p&gt;What’s happening in this bit of code? Let’s break it down. First, we locate the &lt;code class=&quot;highlighter-rouge&quot;&gt;canvas&lt;/code&gt; element that we added earlier to our &lt;code class=&quot;highlighter-rouge&quot;&gt;index.html&lt;/code&gt; file (notice &lt;code class=&quot;highlighter-rouge&quot;&gt;&quot;myChart&quot;&lt;/code&gt;):&lt;/p&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;ctx&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;document&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;getElementById&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;myChart&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Then, using that &lt;code class=&quot;highlighter-rouge&quot;&gt;canvas&lt;/code&gt; element, we create a line chart (&lt;code class=&quot;highlighter-rouge&quot;&gt;type: 'line'&lt;/code&gt;), and pass along some of our data. &lt;code class=&quot;highlighter-rouge&quot;&gt;labels: years&lt;/code&gt; sets our array of &lt;code class=&quot;highlighter-rouge&quot;&gt;years&lt;/code&gt; (that we created earlier) for the labels along the x-axis, and &lt;code class=&quot;highlighter-rouge&quot;&gt;data: africa&lt;/code&gt; uses our &lt;code class=&quot;highlighter-rouge&quot;&gt;africa&lt;/code&gt; variable to draw the line.&lt;/p&gt;

&lt;p&gt;For every line that we want to create, we add another &lt;code class=&quot;highlighter-rouge&quot;&gt;object&lt;/code&gt; to the &lt;code class=&quot;highlighter-rouge&quot;&gt;datasets&lt;/code&gt; array. On every &lt;code class=&quot;highlighter-rouge&quot;&gt;object&lt;/code&gt; we can make a range of adjustments: we can not only pass the data to draw the line, but we can change the name, change the beavior, and change the looks of the line.&lt;/p&gt;

&lt;p&gt;Let’s try that right now. You may have noticed that our line is missing a label (it says &lt;em&gt;undefined&lt;/em&gt; at the top of the graph), and it’s not very colorful. Boo! Let’s make it ✨👌&lt;/p&gt;

&lt;h2 id=&quot;step-5-style-the-line&quot;&gt;Step 5: Style the line&lt;/h2&gt;

&lt;p&gt;Start out by giving our first line a name. After &lt;code class=&quot;highlighter-rouge&quot;&gt;data: africa&lt;/code&gt;, add a comma and create a new row, and add &lt;code class=&quot;highlighter-rouge&quot;&gt;label: &quot;Africa&quot;&lt;/code&gt;:&lt;/p&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nx&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;africa&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;label&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Africa&quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;To set the border color and remove the big gray area below the graph, add another comma after &lt;code class=&quot;highlighter-rouge&quot;&gt;label: &quot;Africa&quot;&lt;/code&gt; and add these two lines:&lt;/p&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nx&quot;&gt;borderColor&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;#3e95cd&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;fill&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;false&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Well ain’t that ✨👌 (refresh and you should see a blue line named Africa)!&lt;/p&gt;

&lt;h2 id=&quot;step-6-add-the-rest-of-the-data&quot;&gt;Step 6: Add the rest of the data&lt;/h2&gt;

&lt;p&gt;All we need to do now is copy the code for Africa and paste it another four times, adding a comma after every &lt;code class=&quot;highlighter-rouge&quot;&gt;}&lt;/code&gt;. Go through the list of lines and make sure that you use &lt;em&gt;all&lt;/em&gt; our region variables (&lt;code class=&quot;highlighter-rouge&quot;&gt;asia&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;europe&lt;/code&gt;, etc.), and name the lines accordingly. Once you’re done, it should look something like this:&lt;/p&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; 
  &lt;span class=&quot;nl&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;africa&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;label&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Africa&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;borderColor&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;#3e95cd&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;fill&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;false&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; 
  &lt;span class=&quot;na&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;asia&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;label&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Asia&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;borderColor&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;#3e95cd&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;fill&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;false&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; 
  &lt;span class=&quot;na&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;europe&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;label&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Europe&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;borderColor&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;#3e95cd&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;fill&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;false&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; 
  &lt;span class=&quot;na&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;latinAmerica&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;label&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Latin America&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;borderColor&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;#3e95cd&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;fill&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;false&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; 
  &lt;span class=&quot;na&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;northAmerica&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;label&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;North America&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;borderColor&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;#3e95cd&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;fill&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;false&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;If you refresh, you should have a graph visualizing the earth’s population over time 🎉 Hooray!&lt;/p&gt;

&lt;p&gt;The lines are all the same color though. You can pick any color that you want for a line, but to use the same color scheme as in my example graph, change the &lt;code class=&quot;highlighter-rouge&quot;&gt;borderColor&lt;/code&gt; value for each of the new regions: &lt;code class=&quot;highlighter-rouge&quot;&gt;#8e5ea2&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;#3cba9f&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;#e8c3b9&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;#c45850&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;And with that, you’re done! Your finished graph should look &lt;a href=&quot;/demo/chartjs-intro/&quot;&gt;something like this&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&quot;troubleshooting&quot;&gt;Troubleshooting&lt;/h2&gt;

&lt;p&gt;Are you stuck somewhere? Is something not working? Don’t worry, that happens all the time. First of all, I recommend right-clicking somewhere on your page, selecting &lt;em&gt;Inspect Element&lt;/em&gt; (or an equivelent), and then selecting the &lt;em&gt;Console&lt;/em&gt;. If you’re using Safari and this option is not showing up: open &lt;em&gt;Preferences&lt;/em&gt;, select &lt;em&gt;Advanced&lt;/em&gt;, and at the very bottom, check &lt;em&gt;Show Develop menu in menu bar&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;As soon as something is not working, get into the habit of checking the console for errors. In this particular case, unfortunately, Chart.js has a tendency to not throw very useful errors. To overcome any obstacles that you can’t resolve by working with the Console, you can compare your code with the intended result after each step:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;/demo/chartjs-intro/static/01-Add Chartjs.zip&quot;&gt;Step 1: Add Chart.js&lt;/a&gt; (zip)&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;/demo/chartjs-intro/static/02-Canvas.zip&quot;&gt;Step 2: Prepare a place in your HTML to render the chart&lt;/a&gt; (zip)&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;/demo/chartjs-intro/static/03-Prepare data.zip&quot;&gt;Step 3: Prepare the data&lt;/a&gt; (zip)&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;/demo/chartjs-intro/static/04-Draw a line.zip&quot;&gt;Step 4: Draw a line!&lt;/a&gt; (zip)&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;/demo/chartjs-intro/static/05-Style the line.zip&quot;&gt;Step 5: Style the line&lt;/a&gt; (zip)&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;/demo/chartjs-intro/static/06-Add the data.zip&quot;&gt;Step 6: Add the rest of the data&lt;/a&gt; (zip)&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;next-steps&quot;&gt;Next steps&lt;/h2&gt;

&lt;p&gt;Isn’t it amazing how by visualizing data you can take a cluster of disconnected numbers and create small simple stories that are completely intuitive to grasp? If you want to go beyond line graphs and start playing around with different ways of visualizing data, I recommend reading through the &lt;a href=&quot;http://www.chartjs.org/docs/&quot;&gt;Chart.js documentation&lt;/a&gt;, or using my collection of Chart.js examples to kickstart your project: &lt;a href=&quot;/blog/chartjs-charts-to-get-you-started/&quot;&gt;10 Chart.js example charts to get you started&lt;/a&gt;.&lt;/p&gt;

&lt;script src=&quot;https://cdnjs.cloudflare.com/ajax/libs/Chart.js/2.5.0/Chart.min.js&quot;&gt;&lt;/script&gt;

&lt;script src=&quot;/demo/chartjs-intro/script.js&quot;&gt;&lt;/script&gt;

</description>
				<pubDate>Wed, 03 May 2017 10:12:00 +0000</pubDate>
				<link>https://tobiasahlin.com/blog/introduction-to-chartjs/</link>
				<guid isPermaLink="true">https://tobiasahlin.com/blog/introduction-to-chartjs/</guid>
			</item>
		
			<item>
				<title>10 Chart.js example charts to get you started</title>
				<description>&lt;div class=&quot;blog-banner&quot;&gt;
  &lt;div class=&quot;blog-banner-content&quot;&gt;
      &lt;img class=&quot;chartjs-banner-10x&quot; src=&quot;/static/chartjs-10x.png&quot; alt=&quot;10 Graph.js example graphs&quot; height=&quot;142&quot; width=&quot;160&quot; /&gt;
  &lt;/div&gt;
  &lt;style&gt;

  @media all and (max-width: 900px) {
    .chartjs-banner-10x {
      width: 120px;
      height: 106px;
    }
  }
  &lt;/style&gt;
&lt;/div&gt;

&lt;!--more--&gt;

&lt;p&gt;&lt;a href=&quot;http://www.chartjs.org/&quot;&gt;Chart.js&lt;/a&gt; is a powerful data visualization library, but I know from experience that it can be tricky to just get started and get a graph to show up. There are all sorts of things that can wrong, and I often just want to have &lt;em&gt;something&lt;/em&gt; working so I can start tweaking it.&lt;/p&gt;

&lt;p&gt;This is a list of 10 working graphs (bar chart, pie chart, line chart, etc.) with colors and data set up to render decent looking charts that you can copy and paste into your own projects, and quickly get going with customizing and fine-tuning to make them fit your style and purpose.&lt;/p&gt;

&lt;p&gt;To use these examples, make sure to also include Chart.js:&lt;/p&gt;

&lt;div class=&quot;language-html highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;script &lt;/span&gt;&lt;span class=&quot;na&quot;&gt;src=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;https://cdnjs.cloudflare.com/ajax/libs/Chart.js/2.5.0/Chart.min.js&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/script&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;These are the graphs that we’ll go through (click to get to the code):&lt;/p&gt;

&lt;p class=&quot;post-chartjs-icon-overview&quot;&gt;
  &lt;a href=&quot;#1-bar-chart&quot; class=&quot;post-chartjs-icon-overview-item&quot;&gt;
    &lt;img src=&quot;/static/graph-icons/bars.png&quot; alt=&quot;Bar chart&quot; width=&quot;95&quot; height=&quot;60&quot; /&gt;
    &lt;span class=&quot;post-chartjs-icon-overview-title&quot;&gt;Bar chart&lt;/span&gt;
  &lt;/a&gt;  
  &lt;a href=&quot;#2-line-chart&quot; class=&quot;post-chartjs-icon-overview-item&quot;&gt;
    &lt;img src=&quot;/static/graph-icons/line.png&quot; alt=&quot;Line chart&quot; width=&quot;95&quot; height=&quot;60&quot; /&gt;
    &lt;span class=&quot;post-chartjs-icon-overview-title&quot;&gt;Line chart&lt;/span&gt;
  &lt;/a&gt;
  &lt;a href=&quot;#3-pie-chart&quot; class=&quot;post-chartjs-icon-overview-item&quot;&gt;
    &lt;img src=&quot;/static/graph-icons/pie.png&quot; alt=&quot;Pie chart&quot; width=&quot;95&quot; height=&quot;60&quot; /&gt;
    &lt;span class=&quot;post-chartjs-icon-overview-title&quot;&gt;Pie chart&lt;/span&gt;
  &lt;/a&gt;
  &lt;a href=&quot;#4-radar-chart&quot; class=&quot;post-chartjs-icon-overview-item&quot;&gt;
    &lt;img src=&quot;/static/graph-icons/radar.png&quot; alt=&quot;Radar chart&quot; width=&quot;95&quot; height=&quot;60&quot; /&gt;
    &lt;span class=&quot;post-chartjs-icon-overview-title&quot;&gt;Radar chart&lt;/span&gt;
  &lt;/a&gt;
  &lt;a href=&quot;#5-polar-area-chart&quot; class=&quot;post-chartjs-icon-overview-item&quot;&gt;
    &lt;img src=&quot;/static/graph-icons/polar.png&quot; alt=&quot;Polar area chart&quot; width=&quot;95&quot; height=&quot;60&quot; /&gt;
    &lt;span class=&quot;post-chartjs-icon-overview-title&quot;&gt;Polar area&lt;/span&gt;
  &lt;/a&gt;
  &lt;a href=&quot;#6-doughnut-chart&quot; class=&quot;post-chartjs-icon-overview-item&quot;&gt;
    &lt;img src=&quot;/static/graph-icons/doughnut.png&quot; alt=&quot;Doughnut chart&quot; width=&quot;95&quot; height=&quot;60&quot; /&gt;
    &lt;span class=&quot;post-chartjs-icon-overview-title&quot;&gt;Doughnut chart&lt;/span&gt;
  &lt;/a&gt;
  &lt;a href=&quot;#7-horizontal-bar-chart&quot; class=&quot;post-chartjs-icon-overview-item&quot;&gt;
    &lt;img src=&quot;/static/graph-icons/horizontal.png&quot; alt=&quot;Horizontal bar chart&quot; width=&quot;95&quot; height=&quot;60&quot; /&gt;
    &lt;span class=&quot;post-chartjs-icon-overview-title&quot;&gt;Horizontal bars&lt;/span&gt;
  &lt;/a&gt;
  &lt;a href=&quot;#8-grouped-bar-chart&quot; class=&quot;post-chartjs-icon-overview-item&quot;&gt;
    &lt;img src=&quot;/static/graph-icons/grouped.png&quot; alt=&quot;Grouped bar chart&quot; width=&quot;95&quot; height=&quot;60&quot; /&gt;
    &lt;span class=&quot;post-chartjs-icon-overview-title&quot;&gt;Grouped bars&lt;/span&gt;
  &lt;/a&gt;
  &lt;a href=&quot;#9-mixed-chart&quot; class=&quot;post-chartjs-icon-overview-item&quot;&gt;
    &lt;img src=&quot;/static/graph-icons/mixed.png&quot; alt=&quot;Mixed chart&quot; width=&quot;95&quot; height=&quot;60&quot; /&gt;
    &lt;span class=&quot;post-chartjs-icon-overview-title&quot;&gt;Mixed charts&lt;/span&gt;
  &lt;/a&gt;
  &lt;a href=&quot;#10-bubble-chart&quot; class=&quot;post-chartjs-icon-overview-item&quot;&gt;
    &lt;img src=&quot;/static/graph-icons/bubbles.png&quot; alt=&quot;Bubble chart&quot; width=&quot;95&quot; height=&quot;60&quot; /&gt;
    &lt;span class=&quot;post-chartjs-icon-overview-title&quot;&gt;Bubble chart&lt;/span&gt;
  &lt;/a&gt;
&lt;/p&gt;

&lt;style&gt;
.post-chartjs-icon-overview {
  display: flex;
  flex-flow: row wrap;
  justify-content: space-between;
}
.post-chartjs-icon-overview-item {
  flex: 0 0 19%;
  background-color: #f8f8f9;
  box-shadow: 0 1px 1px rgba(0,0,0,0.1), 0 2px 2px rgba(0,0,0,0.1);
  border-radius: 3px;
  text-align: center;
  color: rgba(0,0,0,0.8);
  font-size: 10px;
  text-decoration: none;
  margin-bottom: 10px;
  padding-top: 10px;
  transition: transform 0.25s cubic-bezier(0.215, 0.61, 0.355, 1);
}
.post-chartjs-icon-overview-item:hover {
  transform: scale(1.07);
  color: rgba(0,0,0,0.8);
}
.article .post-chartjs-icon-overview-item img {
  width: auto;
  max-width: 100%;
  max-height: 60px;
  margin: 0;
}
.post-chartjs-icon-overview-title {
  margin-top: 10px;
  margin-bottom: 10px;
  display: block;
  line-height: 1.1em;
}
&lt;/style&gt;

&lt;h2 id=&quot;1-bar-chart&quot;&gt;1. Bar chart&lt;/h2&gt;

&lt;p class=&quot;blog-content-wrapper&quot;&gt;
  &lt;canvas id=&quot;post-example-bar-chart&quot; width=&quot;800&quot; height=&quot;450&quot;&gt;&lt;/canvas&gt;
&lt;/p&gt;

&lt;p&gt;Bar charts are created by setting &lt;code class=&quot;highlighter-rouge&quot;&gt;type&lt;/code&gt; to &lt;code class=&quot;highlighter-rouge&quot;&gt;bar&lt;/code&gt; (to flip the direction of the bars, &lt;a href=&quot;#horizontal-bar-chart&quot;&gt;set &lt;code class=&quot;highlighter-rouge&quot;&gt;type&lt;/code&gt; to &lt;code class=&quot;highlighter-rouge&quot;&gt;horizontalBar&lt;/code&gt;&lt;/a&gt;). The colors of the bars are set by passing one color to &lt;code class=&quot;highlighter-rouge&quot;&gt;backgroundColor&lt;/code&gt; (all bars will have the same color), or an array of colors.&lt;/p&gt;

&lt;p&gt;If you’re passing an array (like in the example below), the colors are assigned to the label and number that share the same index in their respective arrays. I.e., below, “Africa” being the first label, will be set to &lt;code class=&quot;highlighter-rouge&quot;&gt;#3e95cd&lt;/code&gt; (the first color), and &lt;code class=&quot;highlighter-rouge&quot;&gt;2478&lt;/code&gt; (the first number).&lt;/p&gt;

&lt;h4 id=&quot;bar-chart-html--javascript&quot;&gt;Bar chart HTML &amp;amp; JavaScript&lt;/h4&gt;

&lt;div class=&quot;language-html highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;canvas&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;id=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;bar-chart&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;width=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;800&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;height=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;450&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/canvas&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;// Bar chart&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Chart&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;document&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;getElementById&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;bar-chart&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;type&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'bar'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;labels&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;Africa&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Asia&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Europe&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Latin America&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;North America&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;datasets&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
          &lt;span class=&quot;na&quot;&gt;label&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Population (millions)&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
          &lt;span class=&quot;na&quot;&gt;backgroundColor&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;#3e95cd&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;#8e5ea2&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;#3cba9f&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;#e8c3b9&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;#c45850&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;
          &lt;span class=&quot;na&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2478&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;5267&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;734&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;784&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;433&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;options&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;legend&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;display&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;false&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;title&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;display&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;text&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'Predicted world population (millions) in 2050'&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;2-line-chart&quot;&gt;2. Line chart&lt;/h2&gt;

&lt;p class=&quot;blog-content-wrapper&quot;&gt;
  &lt;canvas id=&quot;post-example-line-chart&quot; width=&quot;800&quot; height=&quot;450&quot;&gt;&lt;/canvas&gt;
&lt;/p&gt;

&lt;p&gt;Line charts are created by setting &lt;code class=&quot;highlighter-rouge&quot;&gt;type&lt;/code&gt; to &lt;code class=&quot;highlighter-rouge&quot;&gt;line&lt;/code&gt;. By default, lines come with a dark transparent fill, covering the area between the line and x-axis. I think these fills tend to obfuscate other lines, so I’ve removed them on every dataset in this example (&lt;code class=&quot;highlighter-rouge&quot;&gt;fill: false&lt;/code&gt;).&lt;/p&gt;

&lt;p&gt;If you want to remove fills for all your line graphs, a more efficiant way of achieving the same effect is to change the global default for fills: &lt;code class=&quot;highlighter-rouge&quot;&gt;Chart.defaults.global.elements.line.fill = false;&lt;/code&gt;.&lt;/p&gt;

&lt;h4 id=&quot;line-chart-html--javascript&quot;&gt;Line chart: HTML &amp;amp; JavaScript&lt;/h4&gt;

&lt;div class=&quot;language-html highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;canvas&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;id=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;line-chart&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;width=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;800&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;height=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;450&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/canvas&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Chart&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;document&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;getElementById&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;line-chart&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;type&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'line'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;labels&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1500&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1600&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1700&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1750&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1800&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1850&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1900&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1950&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1999&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2050&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;datasets&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[{&lt;/span&gt; 
        &lt;span class=&quot;na&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;86&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;114&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;106&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;106&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;107&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;111&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;133&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;221&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;783&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2478&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;label&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Africa&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;borderColor&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;#3e95cd&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;fill&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;false&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; 
        &lt;span class=&quot;na&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;282&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;350&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;411&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;502&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;635&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;809&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;947&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1402&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3700&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;5267&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;label&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Asia&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;borderColor&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;#8e5ea2&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;fill&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;false&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; 
        &lt;span class=&quot;na&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;168&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;170&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;178&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;190&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;203&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;276&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;408&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;547&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;675&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;734&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;label&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Europe&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;borderColor&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;#3cba9f&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;fill&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;false&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; 
        &lt;span class=&quot;na&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;40&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;20&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;16&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;24&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;38&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;74&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;167&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;508&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;784&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;label&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Latin America&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;borderColor&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;#e8c3b9&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;fill&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;false&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; 
        &lt;span class=&quot;na&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;6&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;7&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;26&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;82&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;172&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;312&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;433&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;label&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;North America&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;borderColor&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;#c45850&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;fill&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;false&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;options&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;title&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;display&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;text&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'World population per region (in millions)'&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;3-pie-chart&quot;&gt;3. Pie chart&lt;/h2&gt;

&lt;p class=&quot;blog-content-wrapper&quot;&gt;
  &lt;canvas id=&quot;post-example-pie-chart&quot; width=&quot;800&quot; height=&quot;450&quot;&gt;&lt;/canvas&gt;
&lt;/p&gt;

&lt;p&gt;Pie charts are created by setting &lt;code class=&quot;highlighter-rouge&quot;&gt;type&lt;/code&gt; to &lt;code class=&quot;highlighter-rouge&quot;&gt;pie&lt;/code&gt;. They are almost identical to &lt;a href=&quot;#doughnut-chart&quot;&gt;doughnut charts&lt;/a&gt;, and will work with the same configurations (part from changing the type).&lt;/p&gt;

&lt;h4 id=&quot;pie-chart-html--javascript&quot;&gt;Pie chart: HTML &amp;amp; JavaScript&lt;/h4&gt;

&lt;div class=&quot;language-html highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;canvas&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;id=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;pie-chart&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;width=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;800&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;height=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;450&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/canvas&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Chart&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;document&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;getElementById&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;pie-chart&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;type&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'pie'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;labels&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;Africa&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Asia&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Europe&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Latin America&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;North America&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;datasets&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[{&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;label&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Population (millions)&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;backgroundColor&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;#3e95cd&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;#8e5ea2&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;#3cba9f&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;#e8c3b9&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;#c45850&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2478&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;5267&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;734&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;784&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;433&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;}]&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;options&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;title&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;display&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;text&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'Predicted world population (millions) in 2050'&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;4-radar-chart&quot;&gt;4. Radar chart&lt;/h2&gt;

&lt;p class=&quot;blog-content-wrapper&quot;&gt;
  &lt;canvas id=&quot;post-example-radar-chart&quot; width=&quot;800&quot; height=&quot;600&quot;&gt;&lt;/canvas&gt;
&lt;/p&gt;

&lt;h4 id=&quot;radar-chart-html--javascript&quot;&gt;Radar chart: HTML &amp;amp; JavaScript&lt;/h4&gt;

&lt;p&gt;Radar charts—also known as web charts, spider charts, star charts—are created by setting &lt;code class=&quot;highlighter-rouge&quot;&gt;type&lt;/code&gt; to &lt;code class=&quot;highlighter-rouge&quot;&gt;radar&lt;/code&gt;. Radar charts typically require more vertical space than other graphs to be legible, so you might have to tweak the graph proportions.&lt;/p&gt;

&lt;div class=&quot;language-html highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;canvas&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;id=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;radar-chart&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;width=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;800&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;height=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;600&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/canvas&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Chart&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;document&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;getElementById&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;radar-chart&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;type&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'radar'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;labels&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;Africa&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Asia&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Europe&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Latin America&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;North America&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;datasets&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
          &lt;span class=&quot;na&quot;&gt;label&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;1950&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
          &lt;span class=&quot;na&quot;&gt;fill&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
          &lt;span class=&quot;na&quot;&gt;backgroundColor&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;rgba(179,181,198,0.2)&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
          &lt;span class=&quot;na&quot;&gt;borderColor&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;rgba(179,181,198,1)&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
          &lt;span class=&quot;na&quot;&gt;pointBorderColor&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;#fff&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
          &lt;span class=&quot;na&quot;&gt;pointBackgroundColor&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;rgba(179,181,198,1)&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
          &lt;span class=&quot;na&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;8.77&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;55.61&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;21.69&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;6.62&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;6.82&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
          &lt;span class=&quot;na&quot;&gt;label&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;2050&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
          &lt;span class=&quot;na&quot;&gt;fill&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
          &lt;span class=&quot;na&quot;&gt;backgroundColor&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;rgba(255,99,132,0.2)&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
          &lt;span class=&quot;na&quot;&gt;borderColor&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;rgba(255,99,132,1)&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
          &lt;span class=&quot;na&quot;&gt;pointBorderColor&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;#fff&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
          &lt;span class=&quot;na&quot;&gt;pointBackgroundColor&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;rgba(255,99,132,1)&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
          &lt;span class=&quot;na&quot;&gt;pointBorderColor&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;#fff&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
          &lt;span class=&quot;na&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;25.48&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;54.16&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;7.61&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;8.06&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;4.45&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;options&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;title&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;display&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;text&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'Distribution in % of world population'&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;5-polar-area-chart&quot;&gt;5. Polar area chart&lt;/h2&gt;

&lt;p class=&quot;blog-content-wrapper&quot;&gt;
  &lt;canvas id=&quot;post-example-polar-chart&quot; width=&quot;800&quot; height=&quot;450&quot;&gt;&lt;/canvas&gt;
&lt;/p&gt;

&lt;p&gt;A polar area chart is created by setting &lt;code class=&quot;highlighter-rouge&quot;&gt;type&lt;/code&gt; to &lt;code class=&quot;highlighter-rouge&quot;&gt;polarArea&lt;/code&gt;. Polar area charts are closely related to pie charts, with the difference that in addition to the angles representing the relative size of the data points, the radius of each element is set in relation to its value.&lt;/p&gt;

&lt;h4 id=&quot;polar-chart-html--javascript&quot;&gt;Polar chart: HTML &amp;amp; JavaScript&lt;/h4&gt;

&lt;div class=&quot;language-html highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;canvas&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;id=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;polar-chart&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;width=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;800&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;height=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;450&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/canvas&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Chart&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;document&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;getElementById&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;polar-chart&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;type&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'polarArea'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;labels&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;Africa&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Asia&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Europe&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Latin America&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;North America&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;datasets&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
          &lt;span class=&quot;na&quot;&gt;label&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Population (millions)&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
          &lt;span class=&quot;na&quot;&gt;backgroundColor&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;#3e95cd&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;#8e5ea2&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;#3cba9f&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;#e8c3b9&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;#c45850&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;
          &lt;span class=&quot;na&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2478&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;5267&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;734&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;784&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;433&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;options&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;title&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;display&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;text&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'Predicted world population (millions) in 2050'&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;6-doughnut-chart&quot;&gt;6. Doughnut chart&lt;/h2&gt;

&lt;p class=&quot;blog-content-wrapper&quot;&gt;
  &lt;canvas id=&quot;post-example-doughnut-chart&quot; width=&quot;800&quot; height=&quot;450&quot;&gt;&lt;/canvas&gt;
&lt;/p&gt;

&lt;p&gt;Doughnut charts are created by setting &lt;code class=&quot;highlighter-rouge&quot;&gt;type&lt;/code&gt; to &lt;code class=&quot;highlighter-rouge&quot;&gt;doughnut&lt;/code&gt;. They are almost identical to &lt;a href=&quot;#pie-chart&quot;&gt;pie charts&lt;/a&gt;, and will work the same configurations.&lt;/p&gt;

&lt;h4 id=&quot;doughnut-chart-html--javascript&quot;&gt;Doughnut chart: HTML &amp;amp; JavaScript&lt;/h4&gt;

&lt;div class=&quot;language-html highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;canvas&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;id=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;doughnut-chart&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;width=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;800&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;height=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;450&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/canvas&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Chart&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;document&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;getElementById&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;doughnut-chart&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;type&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'doughnut'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;labels&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;Africa&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Asia&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Europe&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Latin America&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;North America&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;datasets&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
          &lt;span class=&quot;na&quot;&gt;label&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Population (millions)&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
          &lt;span class=&quot;na&quot;&gt;backgroundColor&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;#3e95cd&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;#8e5ea2&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;#3cba9f&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;#e8c3b9&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;#c45850&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;
          &lt;span class=&quot;na&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2478&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;5267&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;734&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;784&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;433&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;options&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;title&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;display&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;text&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'Predicted world population (millions) in 2050'&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;7-horizontal-bar-chart&quot;&gt;7. Horizontal bar chart&lt;/h2&gt;

&lt;p class=&quot;blog-content-wrapper&quot;&gt;
  &lt;canvas id=&quot;post-example-bar-chart-horizontal&quot; width=&quot;800&quot; height=&quot;450&quot;&gt;&lt;/canvas&gt;
&lt;/p&gt;

&lt;p&gt;Horizontal bar charts are created by setting &lt;code class=&quot;highlighter-rouge&quot;&gt;type&lt;/code&gt; to &lt;code class=&quot;highlighter-rouge&quot;&gt;horizontalBar&lt;/code&gt;. They are identical to regular bar charts in every other aspect, and will work with the same configurations.&lt;/p&gt;

&lt;h4 id=&quot;horizontal-bar-chart-html--javascript&quot;&gt;Horizontal bar chart: HTML &amp;amp; JavaScript&lt;/h4&gt;

&lt;div class=&quot;language-html highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;canvas&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;id=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;bar-chart-horizontal&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;width=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;800&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;height=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;450&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/canvas&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Chart&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;document&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;getElementById&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;bar-chart-horizontal&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;type&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'horizontalBar'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;labels&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;Africa&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Asia&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Europe&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Latin America&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;North America&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;datasets&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
          &lt;span class=&quot;na&quot;&gt;label&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Population (millions)&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
          &lt;span class=&quot;na&quot;&gt;backgroundColor&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;#3e95cd&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;#8e5ea2&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;#3cba9f&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;#e8c3b9&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;#c45850&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;
          &lt;span class=&quot;na&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2478&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;5267&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;734&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;784&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;433&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;options&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;legend&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;display&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;false&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;title&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;display&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;text&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'Predicted world population (millions) in 2050'&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;8-grouped-bar-chart&quot;&gt;8. Grouped bar chart&lt;/h2&gt;

&lt;p class=&quot;blog-content-wrapper&quot;&gt;
  &lt;canvas id=&quot;post-example-bar-chart-grouped&quot; width=&quot;800&quot; height=&quot;450&quot;&gt;&lt;/canvas&gt;
&lt;/p&gt;

&lt;p&gt;A grouped bar chart is not a unique chart type per say, but it requires you to setup your data a bit differently compared to the bar charts we’ve seen so far.&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;type&lt;/code&gt; is still set to &lt;code class=&quot;highlighter-rouge&quot;&gt;bar&lt;/code&gt;, but as soon as you pass more than one object to &lt;code class=&quot;highlighter-rouge&quot;&gt;datasets&lt;/code&gt;, Chart.js will create a new group of bars for every object. Setting the color for that group of bars is then done by passing a color to &lt;code class=&quot;highlighter-rouge&quot;&gt;backgroundColor&lt;/code&gt;.&lt;/p&gt;

&lt;h4 id=&quot;grouped-bar-chart-html--javascript&quot;&gt;Grouped bar chart: HTML &amp;amp; JavaScript&lt;/h4&gt;

&lt;div class=&quot;language-html highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;canvas&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;id=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;bar-chart-grouped&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;width=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;800&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;height=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;450&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/canvas&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Chart&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;document&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;getElementById&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;bar-chart-grouped&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;type&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'bar'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;labels&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;1900&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;1950&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;1999&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;2050&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;datasets&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
          &lt;span class=&quot;na&quot;&gt;label&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Africa&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
          &lt;span class=&quot;na&quot;&gt;backgroundColor&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;#3e95cd&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
          &lt;span class=&quot;na&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;133&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;221&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;783&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2478&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
          &lt;span class=&quot;na&quot;&gt;label&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Europe&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
          &lt;span class=&quot;na&quot;&gt;backgroundColor&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;#8e5ea2&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
          &lt;span class=&quot;na&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;408&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;547&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;675&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;734&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;options&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;title&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;display&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;text&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'Population growth (millions)'&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;9-mixed-chart&quot;&gt;9. Mixed chart&lt;/h2&gt;

&lt;p class=&quot;blog-content-wrapper&quot;&gt;
  &lt;canvas id=&quot;post-example-mixed-chart&quot; width=&quot;800&quot; height=&quot;450&quot;&gt;&lt;/canvas&gt;
&lt;/p&gt;

&lt;p&gt;You can mix several charts and overlay them on top of each other. This is done by setting &lt;code class=&quot;highlighter-rouge&quot;&gt;type&lt;/code&gt; to &lt;code class=&quot;highlighter-rouge&quot;&gt;bar&lt;/code&gt; (&lt;strong&gt;not&lt;/strong&gt; to e.g. &lt;code class=&quot;highlighter-rouge&quot;&gt;mixed&lt;/code&gt; or &lt;code class=&quot;highlighter-rouge&quot;&gt;line&lt;/code&gt;—it has to be &lt;code class=&quot;highlighter-rouge&quot;&gt;bar&lt;/code&gt;), and then setting the bar type for every dataset object in your datasets array.&lt;/p&gt;

&lt;p&gt;To produce the graph above, for example, we have four data objects: two set to &lt;code class=&quot;highlighter-rouge&quot;&gt;bar&lt;/code&gt;, and two set to &lt;code class=&quot;highlighter-rouge&quot;&gt;line&lt;/code&gt;, while the &lt;code class=&quot;highlighter-rouge&quot;&gt;type&lt;/code&gt; for the Chart object is set to &lt;code class=&quot;highlighter-rouge&quot;&gt;bar&lt;/code&gt;.&lt;/p&gt;

&lt;h4 id=&quot;mixed-chart-html--javascript&quot;&gt;Mixed chart: HTML &amp;amp; JavaScript&lt;/h4&gt;

&lt;div class=&quot;language-html highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;canvas&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;id=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;mixed-chart&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;width=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;800&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;height=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;450&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/canvas&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Chart&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;document&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;getElementById&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;mixed-chart&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;type&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'bar'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;labels&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;1900&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;1950&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;1999&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;2050&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;datasets&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[{&lt;/span&gt;
          &lt;span class=&quot;na&quot;&gt;label&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Europe&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
          &lt;span class=&quot;na&quot;&gt;type&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;line&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
          &lt;span class=&quot;na&quot;&gt;borderColor&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;#8e5ea2&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
          &lt;span class=&quot;na&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;408&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;547&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;675&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;734&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;
          &lt;span class=&quot;na&quot;&gt;fill&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;false&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
          &lt;span class=&quot;na&quot;&gt;label&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Africa&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
          &lt;span class=&quot;na&quot;&gt;type&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;line&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
          &lt;span class=&quot;na&quot;&gt;borderColor&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;#3e95cd&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
          &lt;span class=&quot;na&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;133&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;221&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;783&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2478&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;
          &lt;span class=&quot;na&quot;&gt;fill&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;false&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
          &lt;span class=&quot;na&quot;&gt;label&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Europe&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
          &lt;span class=&quot;na&quot;&gt;type&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;bar&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
          &lt;span class=&quot;na&quot;&gt;backgroundColor&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;rgba(0,0,0,0.2)&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
          &lt;span class=&quot;na&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;408&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;547&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;675&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;734&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
          &lt;span class=&quot;na&quot;&gt;label&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Africa&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
          &lt;span class=&quot;na&quot;&gt;type&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;bar&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
          &lt;span class=&quot;na&quot;&gt;backgroundColor&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;rgba(0,0,0,0.2)&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
          &lt;span class=&quot;na&quot;&gt;backgroundColorHover&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;#3e95cd&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
          &lt;span class=&quot;na&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;133&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;221&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;783&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2478&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;options&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;title&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;display&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;text&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'Population growth (millions): Europe &amp;amp; Africa'&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;legend&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;display&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;false&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;10-bubble-chart&quot;&gt;10. Bubble chart&lt;/h2&gt;

&lt;p class=&quot;blog-content-wrapper&quot;&gt;
  &lt;canvas id=&quot;post-example-bubble-chart&quot; width=&quot;800&quot; height=&quot;800&quot;&gt;&lt;/canvas&gt;
&lt;/p&gt;

&lt;p&gt;Last but not least, there’s the bubble chart, a favorite of &lt;a href=&quot;https://www.ted.com/talks/hans_rosling_shows_the_best_stats_you_ve_ever_seen&quot;&gt;Hans Rosling&lt;/a&gt;. Bubble charts can be great for visualizing a lot of different data points simultaneously. In this example, every bubble is made up of three values: x position, y position, and size (&lt;code class=&quot;highlighter-rouge&quot;&gt;r&lt;/code&gt;)—showing the GDP, happiness, and population, respectively, of each country.&lt;/p&gt;

&lt;p&gt;In the example above, I’m using the happiness index from the &lt;a href=&quot;http://worldhappiness.report/wp-content/uploads/sites/2/2016/03/HR-V1Ch2_web.pdf&quot;&gt;World Happiness Report&lt;/a&gt; for a country’s Y position, GDP estimates from &lt;a href=&quot;http://bit.ly/2dcX425&quot;&gt;International Monetary Fund&lt;/a&gt; to set the X position, and the population size to set the size of the bubble. (Note that I’ve removed some of the data in the example code to reduce the amount of code you have to copy.)&lt;/p&gt;

&lt;p&gt;You can pass several objects (setting &lt;code class=&quot;highlighter-rouge&quot;&gt;x&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;y&lt;/code&gt;, and &lt;code class=&quot;highlighter-rouge&quot;&gt;x&lt;/code&gt;) to each &lt;code class=&quot;highlighter-rouge&quot;&gt;data&lt;/code&gt; array within every dataset object (each object will create a new bubble), but in this example I’m using only one object per array since I want every bubble to have a unique color and label.&lt;/p&gt;

&lt;h4 id=&quot;bubble-chart-html--javascript&quot;&gt;Bubble chart: HTML &amp;amp; JavaScript&lt;/h4&gt;

&lt;div class=&quot;language-html highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;canvas&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;id=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;bubble-chart&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;width=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;800&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;height=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;800&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/canvas&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Chart&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;document&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;getElementById&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;bubble-chart&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;type&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'bubble'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;labels&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Africa&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;datasets&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
          &lt;span class=&quot;na&quot;&gt;label&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;China&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;
          &lt;span class=&quot;na&quot;&gt;backgroundColor&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;rgba(255,221,50,0.2)&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
          &lt;span class=&quot;na&quot;&gt;borderColor&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;rgba(255,221,50,1)&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
          &lt;span class=&quot;na&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[{&lt;/span&gt;
            &lt;span class=&quot;na&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;21269017&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
            &lt;span class=&quot;na&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;5.245&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
            &lt;span class=&quot;na&quot;&gt;r&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;15&lt;/span&gt;
          &lt;span class=&quot;p&quot;&gt;}]&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
          &lt;span class=&quot;na&quot;&gt;label&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;Denmark&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;
          &lt;span class=&quot;na&quot;&gt;backgroundColor&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;rgba(60,186,159,0.2)&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
          &lt;span class=&quot;na&quot;&gt;borderColor&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;rgba(60,186,159,1)&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
          &lt;span class=&quot;na&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[{&lt;/span&gt;
            &lt;span class=&quot;na&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;258702&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
            &lt;span class=&quot;na&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;7.526&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
            &lt;span class=&quot;na&quot;&gt;r&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;
          &lt;span class=&quot;p&quot;&gt;}]&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
          &lt;span class=&quot;na&quot;&gt;label&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;Germany&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;
          &lt;span class=&quot;na&quot;&gt;backgroundColor&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;rgba(0,0,0,0.2)&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
          &lt;span class=&quot;na&quot;&gt;borderColor&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;#000&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
          &lt;span class=&quot;na&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[{&lt;/span&gt;
            &lt;span class=&quot;na&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3979083&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
            &lt;span class=&quot;na&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;6.994&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
            &lt;span class=&quot;na&quot;&gt;r&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;15&lt;/span&gt;
          &lt;span class=&quot;p&quot;&gt;}]&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
          &lt;span class=&quot;na&quot;&gt;label&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;Japan&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;
          &lt;span class=&quot;na&quot;&gt;backgroundColor&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;rgba(193,46,12,0.2)&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
          &lt;span class=&quot;na&quot;&gt;borderColor&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;rgba(193,46,12,1)&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
          &lt;span class=&quot;na&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[{&lt;/span&gt;
            &lt;span class=&quot;na&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;4931877&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
            &lt;span class=&quot;na&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;5.921&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
            &lt;span class=&quot;na&quot;&gt;r&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;15&lt;/span&gt;
          &lt;span class=&quot;p&quot;&gt;}]&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;options&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;title&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;display&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;text&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'Predicted world population (millions) in 2050'&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;scales&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;yAxes&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[{&lt;/span&gt; 
          &lt;span class=&quot;na&quot;&gt;scaleLabel&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;na&quot;&gt;display&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
            &lt;span class=&quot;na&quot;&gt;labelString&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Happiness&quot;&lt;/span&gt;
          &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}],&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;xAxes&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[{&lt;/span&gt; 
          &lt;span class=&quot;na&quot;&gt;scaleLabel&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;na&quot;&gt;display&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
            &lt;span class=&quot;na&quot;&gt;labelString&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;GDP (PPP)&quot;&lt;/span&gt;
          &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}]&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;next-steps&quot;&gt;Next steps&lt;/h2&gt;

&lt;p&gt;I hope you’ll be able to kick-start your process and quickly get started with these template graphs. Chart.js is highly customizable, so if you want to change the design of the graphs I recommend digging into &lt;a href=&quot;http://www.chartjs.org/docs/&quot;&gt;the official documentation&lt;/a&gt; to explore all the parameters that you can tweak.&lt;/p&gt;

&lt;p&gt;If you’re new to &lt;a href=&quot;http://www.chartjs.org/&quot;&gt;Chart.js&lt;/a&gt; and want to get a better overview of the library, I recommend reading my earlier post: &lt;a href=&quot;/blog/introduction-to-chartjs/&quot;&gt;Data visualization with Chart.js: An introduction&lt;/a&gt;.&lt;/p&gt;

&lt;script src=&quot;https://cdnjs.cloudflare.com/ajax/libs/Chart.js/2.5.0/Chart.min.js&quot;&gt;&lt;/script&gt;

&lt;script src=&quot;/js/posts/chartjs-example-charts.js&quot;&gt;&lt;/script&gt;

</description>
				<pubDate>Wed, 03 May 2017 10:12:00 +0000</pubDate>
				<link>https://tobiasahlin.com/blog/chartjs-charts-to-get-you-started/</link>
				<guid isPermaLink="true">https://tobiasahlin.com/blog/chartjs-charts-to-get-you-started/</guid>
			</item>
		
			<item>
				<title>Moving along a curved path in CSS with layered animation</title>
				<description>&lt;div class=&quot;blog-banner&quot;&gt;
  &lt;div class=&quot;blog-banner-content mnc-demo-container&quot;&gt;
      &lt;div class=&quot;mnc-demo-grid&quot;&gt;
        &lt;div class=&quot;mnc-demo-line&quot; style=&quot;top: 20px;&quot;&gt;&lt;/div&gt;
        &lt;div class=&quot;mnc-demo-line&quot; style=&quot;top: 40px;&quot;&gt;&lt;/div&gt;
        &lt;div class=&quot;mnc-demo-line&quot; style=&quot;top: 60px;&quot;&gt;&lt;/div&gt;
        &lt;div class=&quot;mnc-demo-line&quot; style=&quot;top: 80px;&quot;&gt;&lt;/div&gt;
        &lt;div class=&quot;mnc-demo-line-vertical&quot; style=&quot;left: 20px;&quot;&gt;&lt;/div&gt;
        &lt;div class=&quot;mnc-demo-line-vertical&quot; style=&quot;left: 40px;&quot;&gt;&lt;/div&gt;
        &lt;div class=&quot;mnc-demo-line-vertical&quot; style=&quot;left: 60px;&quot;&gt;&lt;/div&gt;
        &lt;div class=&quot;mnc-demo-line-vertical&quot; style=&quot;left: 80px;&quot;&gt;&lt;/div&gt;
      &lt;/div&gt;

      &lt;div class=&quot;mnc-demo-dot&quot;&gt;&lt;/div&gt;
  &lt;/div&gt;

  &lt;style&gt;
  .mnc-demo-container {
    height: 100px;
    width: 100px;
    position: relative;
    margin-right: auto;
    margin-left: auto;
  }

  .mnc-demo-grid {
    overflow: hidden;
    border: 2px solid rgba(0,0,0,0.2);
    height: 100%;
    width: 100%;
  }

  .mnc-demo-line {
    width: 100%;
    height: 2px;
    background-color: rgba(0,0,0,0.2);
    position: absolute;
  }

  .mnc-demo-line-vertical {
    width: 2px;
    height: 100%;
    background-color: rgba(0,0,0,0.2);
    position: absolute;
  }

  .mnc-demo-dot {
    will-change: transform;
    -webkit-animation: xAxis 2.5s infinite cubic-bezier(0.02, 0.01, 0.21, 1);
    animation: xAxis 2.5s infinite cubic-bezier(0.02, 0.01, 0.21, 1);
    position: absolute;
    bottom: -10px;
    left: -10px;
  }

  .mnc-demo-dot:after {
    content: '';
    display: block;
    will-change: transform;
    width: 20px;
    height: 20px;
    border-radius: 20px;
    background-color: #fff;
    -webkit-animation: yAxis 2.5s infinite cubic-bezier(0.3, 0.27, 0.07, 1.64);
    animation: yAxis 2.5s infinite cubic-bezier(0.3, 0.27, 0.07, 1.64);
  }

  .mnc-demo-dot-final-x {
    -webkit-animation: xAxis 2.5s infinite cubic-bezier(0.02, 0.01, 0.21, 1);
    animation: xAxis 2.5s infinite cubic-bezier(0.02, 0.01, 0.21, 1);
  }

  .mnc-demo-dot-final-y {
    -webkit-animation: yAxis 2.5s infinite cubic-bezier(0.3, 0.27, 0.07, 1.64);
    animation: yAxis 2.5s infinite cubic-bezier(0.3, 0.27, 0.07, 1.64);
  }

  .mnc-demo-dot-final::after {
    -webkit-animation: none;
    animation: none;
  }

  @keyframes yAxis {
    50% {
      -webkit-animation-timing-function: cubic-bezier(0.02, 0.01, 0.21, 1);
      animation-timing-function: cubic-bezier(0.02, 0.01, 0.21, 1);
      -webkit-transform: translateY(-100px);
      transform: translateY(-100px);
    }
  }

  @-webkit-keyframes yAxis {
    50% {
      -webkit-animation-timing-function: cubic-bezier(0.02, 0.01, 0.21, 1);
      animation-timing-function: cubic-bezier(0.02, 0.01, 0.21, 1);
      -webkit-transform: translateY(-100px);
      transform: translateY(-100px);
    }
  }

  @keyframes xAxis {
    50% {
      -webkit-animation-timing-function: cubic-bezier(0.3, 0.27, 0.07, 1.64);
      animation-timing-function: cubic-bezier(0.3, 0.27, 0.07, 1.64);
      -webkit-transform: translateX(100px);
      transform: translateX(100px);
    }
  }

  @-webkit-keyframes xAxis {
    50% {
      -webkit-animation-timing-function: cubic-bezier(0.3, 0.27, 0.07, 1.64);
      animation-timing-function: cubic-bezier(0.3, 0.27, 0.07, 1.64);
      -webkit-transform: translateX(100px);
      transform: translateX(100px);
    }
  }

  &lt;/style&gt;

&lt;/div&gt;

&lt;!--more--&gt;

&lt;p&gt;CSS animations and transitions are great for animating something from point A to B. That is, if you want to animate along a straight path. No matter how much you bend your &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/CSS/timing-function&quot;&gt;bezier curves&lt;/a&gt;, you can’t make something move along a curved path by applying an &lt;code class=&quot;highlighter-rouge&quot;&gt;animation&lt;/code&gt; or a &lt;code class=&quot;highlighter-rouge&quot;&gt;transition&lt;/code&gt; to an object. You can overshoot with custom timing functions, and produce spring-like effects, but the relative movement along the X and Y-axis will always be identical.&lt;/p&gt;

&lt;p&gt;Instead of turning to JavaScript for producing more natural-looking motion, there’s an easy way to work around this limitation: layered animation. By using two or more objects to drive an animation, we get fine-grained control over an object’s path, and can apply one timing function for the movement along the X-axis, and another one for the Y-axis.&lt;/p&gt;

&lt;h2 id=&quot;the-problem&quot;&gt;The problem&lt;/h2&gt;

&lt;div class=&quot;post-demo-content&quot;&gt;
  &lt;div class=&quot;mnc-demo-container mnc-demo-container-inline&quot;&gt;
    &lt;span class=&quot;mnc-demo-label&quot;&gt;Regular path&lt;/span&gt;
    &lt;div class=&quot;mnc-demo-grid&quot;&gt;
      &lt;div class=&quot;mnc-demo-line&quot; style=&quot;top: 20px;&quot;&gt;&lt;/div&gt;
      &lt;div class=&quot;mnc-demo-line&quot; style=&quot;top: 40px;&quot;&gt;&lt;/div&gt;
      &lt;div class=&quot;mnc-demo-line&quot; style=&quot;top: 60px;&quot;&gt;&lt;/div&gt;
      &lt;div class=&quot;mnc-demo-line&quot; style=&quot;top: 80px;&quot;&gt;&lt;/div&gt;
      &lt;div class=&quot;mnc-demo-line-vertical&quot; style=&quot;left: 20px;&quot;&gt;&lt;/div&gt;
      &lt;div class=&quot;mnc-demo-line-vertical&quot; style=&quot;left: 40px;&quot;&gt;&lt;/div&gt;
      &lt;div class=&quot;mnc-demo-line-vertical&quot; style=&quot;left: 60px;&quot;&gt;&lt;/div&gt;
      &lt;div class=&quot;mnc-demo-line-vertical&quot; style=&quot;left: 80px;&quot;&gt;&lt;/div&gt;
    &lt;/div&gt;

    &lt;div class=&quot;mnc-demo-dot mnc-demo-dot-straight&quot;&gt;&lt;/div&gt;
  &lt;/div&gt;

  &lt;div class=&quot;mnc-demo-container mnc-demo-container-inline&quot;&gt;
    &lt;span class=&quot;mnc-demo-label&quot;&gt;What we want&lt;/span&gt;
    &lt;div class=&quot;mnc-demo-grid&quot;&gt;
      &lt;div class=&quot;mnc-demo-line&quot; style=&quot;top: 20px;&quot;&gt;&lt;/div&gt;
      &lt;div class=&quot;mnc-demo-line&quot; style=&quot;top: 40px;&quot;&gt;&lt;/div&gt;
      &lt;div class=&quot;mnc-demo-line&quot; style=&quot;top: 60px;&quot;&gt;&lt;/div&gt;
      &lt;div class=&quot;mnc-demo-line&quot; style=&quot;top: 80px;&quot;&gt;&lt;/div&gt;
      &lt;div class=&quot;mnc-demo-line-vertical&quot; style=&quot;left: 20px;&quot;&gt;&lt;/div&gt;
      &lt;div class=&quot;mnc-demo-line-vertical&quot; style=&quot;left: 40px;&quot;&gt;&lt;/div&gt;
      &lt;div class=&quot;mnc-demo-line-vertical&quot; style=&quot;left: 60px;&quot;&gt;&lt;/div&gt;
      &lt;div class=&quot;mnc-demo-line-vertical&quot; style=&quot;left: 80px;&quot;&gt;&lt;/div&gt;
    &lt;/div&gt;

    &lt;div class=&quot;mnc-demo-dot&quot;&gt;&lt;/div&gt;
  &lt;/div&gt;

  &lt;style&gt;
  .mnc-demo-container-inline {
    display: inline-block;
    position: relative;
    margin-right: 30px;
    margin-left: 30px;
    margin-bottom: 30px;
    margin-top: 15px;
  }

  .mnc-demo-label {
    position: absolute;
    bottom: -38px;
    left: 0;
    color: #666;
    font-size: 11px;
    text-align: center;
    width: 100%;
    border: 2px solid rgba(0,0,0,0);
  }

  .mnc-demo-container-inline .mnc-demo-dot:after {
    background-color: #333;
  }

  .mnc-demo-dot-straight {
    -webkit-animation: straightLine 2.5s infinite linear;
    animation: straightLine 2.5s infinite linear;
  }

  .mnc-demo-dot-straight:after {
    -webkit-animation: none;
    animation: none;
  }

  @-webkit-keyframes straightLine {
    50% {
      -webkit-transform: translate3D(100px, -100px, 0);
      transform: translate3D(100px, -100px, 0);
    }
  }

  @keyframes straightLine {
    50% {
      -webkit-transform: translate3D(100px, -100px, 0);
      transform: translate3D(100px, -100px, 0);
    }
  }
  
  &lt;/style&gt;
&lt;/div&gt;

&lt;p&gt;Before we dive into the solution, let’s look closer at the problem. CSS &lt;code class=&quot;highlighter-rouge&quot;&gt;animations&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;transitions&lt;/code&gt; restrict us to animating along straight paths. How? By always taking the shortest path from point A to point B. That’s great—this is what we’re after in most cases—but we lack a way of telling CSS to “take a nicer path” rather than “take the shortest path”.&lt;/p&gt;

&lt;p&gt;The most straightforward way of animating between two points in CSS (with hardware acceleration) is to use &lt;code class=&quot;highlighter-rouge&quot;&gt;transform&lt;/code&gt; to &lt;code class=&quot;highlighter-rouge&quot;&gt;translate&lt;/code&gt; an object over time. This produces movement along a linear path. In this &lt;code class=&quot;highlighter-rouge&quot;&gt;@keyframes&lt;/code&gt; block, we’re going back and forth between (0,0) and (100,-100), as seen in the example above:&lt;/p&gt;

&lt;div class=&quot;language-css highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;@keyframes&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;straightLine&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;50&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;%&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nl&quot;&gt;transform&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;translate3D&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;100px&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;-100px&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;nc&quot;&gt;.dot&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;animation&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;straightLine&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;2.5s&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;infinite&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;linear&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;This isn’t complicated, but let’s stop here for a moment. To understand the solution to the problem we need to, at least visually, take the animation apart.&lt;/p&gt;

&lt;p&gt;At &lt;code class=&quot;highlighter-rouge&quot;&gt;0%&lt;/code&gt; we start out at (0,0), and at &lt;code class=&quot;highlighter-rouge&quot;&gt;50%&lt;/code&gt; we use &lt;code class=&quot;highlighter-rouge&quot;&gt;translate3D(100px, -100px, 0)&lt;/code&gt; to move to (100,-100), then back again. Put another way, we move the object &lt;code class=&quot;highlighter-rouge&quot;&gt;100px&lt;/code&gt; to the right, and &lt;code class=&quot;highlighter-rouge&quot;&gt;100px&lt;/code&gt; upwards, and these two translations combined move the object at an angle.&lt;/p&gt;

&lt;div class=&quot;post-demo-content&quot;&gt;
  &lt;div class=&quot;mnc-demo-container mnc-demo-container-inline&quot;&gt;
    &lt;span class=&quot;mnc-demo-label&quot;&gt;X movement&lt;/span&gt;
    &lt;div class=&quot;mnc-demo-grid&quot;&gt;
      &lt;div class=&quot;mnc-demo-line&quot; style=&quot;top: 20px;&quot;&gt;&lt;/div&gt;
      &lt;div class=&quot;mnc-demo-line&quot; style=&quot;top: 40px;&quot;&gt;&lt;/div&gt;
      &lt;div class=&quot;mnc-demo-line&quot; style=&quot;top: 60px;&quot;&gt;&lt;/div&gt;
      &lt;div class=&quot;mnc-demo-line&quot; style=&quot;top: 80px;&quot;&gt;&lt;/div&gt;
      &lt;div class=&quot;mnc-demo-line-vertical&quot; style=&quot;left: 20px;&quot;&gt;&lt;/div&gt;
      &lt;div class=&quot;mnc-demo-line-vertical&quot; style=&quot;left: 40px;&quot;&gt;&lt;/div&gt;
      &lt;div class=&quot;mnc-demo-line-vertical&quot; style=&quot;left: 60px;&quot;&gt;&lt;/div&gt;
      &lt;div class=&quot;mnc-demo-line-vertical&quot; style=&quot;left: 80px;&quot;&gt;&lt;/div&gt;
    &lt;/div&gt;

    &lt;div class=&quot;mnc-demo-dot mnc-demo-dot-straight mnc-demo-dot-straightX&quot;&gt;&lt;/div&gt;
  &lt;/div&gt;

  &lt;div class=&quot;mnc-demo-container mnc-demo-container-inline&quot;&gt;
    &lt;span class=&quot;mnc-demo-label&quot;&gt;Y movement&lt;/span&gt;
    &lt;div class=&quot;mnc-demo-grid&quot;&gt;
      &lt;div class=&quot;mnc-demo-line&quot; style=&quot;top: 20px;&quot;&gt;&lt;/div&gt;
      &lt;div class=&quot;mnc-demo-line&quot; style=&quot;top: 40px;&quot;&gt;&lt;/div&gt;
      &lt;div class=&quot;mnc-demo-line&quot; style=&quot;top: 60px;&quot;&gt;&lt;/div&gt;
      &lt;div class=&quot;mnc-demo-line&quot; style=&quot;top: 80px;&quot;&gt;&lt;/div&gt;
      &lt;div class=&quot;mnc-demo-line-vertical&quot; style=&quot;left: 20px;&quot;&gt;&lt;/div&gt;
      &lt;div class=&quot;mnc-demo-line-vertical&quot; style=&quot;left: 40px;&quot;&gt;&lt;/div&gt;
      &lt;div class=&quot;mnc-demo-line-vertical&quot; style=&quot;left: 60px;&quot;&gt;&lt;/div&gt;
      &lt;div class=&quot;mnc-demo-line-vertical&quot; style=&quot;left: 80px;&quot;&gt;&lt;/div&gt;
    &lt;/div&gt;

    &lt;div class=&quot;mnc-demo-dot mnc-demo-dot-straight mnc-demo-dot-straightY&quot;&gt;&lt;/div&gt;
  &lt;/div&gt;

  &lt;div class=&quot;mnc-demo-container mnc-demo-container-inline&quot;&gt;
    &lt;span class=&quot;mnc-demo-label&quot;&gt;Combined&lt;/span&gt;
    &lt;div class=&quot;mnc-demo-grid&quot;&gt;
      &lt;div class=&quot;mnc-demo-line&quot; style=&quot;top: 20px;&quot;&gt;&lt;/div&gt;
      &lt;div class=&quot;mnc-demo-line&quot; style=&quot;top: 40px;&quot;&gt;&lt;/div&gt;
      &lt;div class=&quot;mnc-demo-line&quot; style=&quot;top: 60px;&quot;&gt;&lt;/div&gt;
      &lt;div class=&quot;mnc-demo-line&quot; style=&quot;top: 80px;&quot;&gt;&lt;/div&gt;
      &lt;div class=&quot;mnc-demo-line-vertical&quot; style=&quot;left: 20px;&quot;&gt;&lt;/div&gt;
      &lt;div class=&quot;mnc-demo-line-vertical&quot; style=&quot;left: 40px;&quot;&gt;&lt;/div&gt;
      &lt;div class=&quot;mnc-demo-line-vertical&quot; style=&quot;left: 60px;&quot;&gt;&lt;/div&gt;
      &lt;div class=&quot;mnc-demo-line-vertical&quot; style=&quot;left: 80px;&quot;&gt;&lt;/div&gt;
    &lt;/div&gt;

    &lt;div class=&quot;mnc-demo-dot mnc-demo-dot-straight&quot;&gt;&lt;/div&gt;
  &lt;/div&gt;


  &lt;style&gt;
  .mnc-demo-dot-straightX {
    -webkit-animation: straightLineX 2.5s infinite linear;
    animation: straightLineX 2.5s infinite linear;
  }

  .mnc-demo-dot-straightY {
    -webkit-animation: straightLineY 2.5s infinite linear;
    animation: straightLineY 2.5s infinite linear;
  }

  @-webkit-keyframes straightLineX {
    50% {
      -webkit-transform: translateX(100px);
      transform: translateX(100px);
    }
  }

  @keyframes straightLineX {
    50% {
      -webkit-transform: translateX(100px);
      transform: translateX(100px);
    }
  }

  @-webkit-keyframes straightLineY {
    50% {
      -webkit-transform: translateX(100px);
      transform: translateX(100px);
    }
  }

  @keyframes straightLineY {
    50% {
      -webkit-transform: translateY(-100px);
      transform: translateY(-100px);
    }
  }
  &lt;/style&gt;
&lt;/div&gt;

&lt;h2 id=&quot;the-solution-one-timing-function-per-axis&quot;&gt;The solution: one timing function per axis&lt;/h2&gt;

&lt;p&gt;So how do we create a curved path like the one showcased in the earlier example? To create a path that doesn’t go in a straight line, &lt;strong&gt;we want the movement speed along the X-axis and Y-axis to be out of sync&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;The previous examples all used &lt;code class=&quot;highlighter-rouge&quot;&gt;linear&lt;/code&gt; timing functions, but if we add a container around the object we want to animate, we can apply one timing function for the X-axis, and another one for the Y-axis. Below, we’re using &lt;code class=&quot;highlighter-rouge&quot;&gt;ease-in&lt;/code&gt; for the X-axis, and &lt;code class=&quot;highlighter-rouge&quot;&gt;ease-out&lt;/code&gt; for the Y-axis:&lt;/p&gt;

&lt;div class=&quot;post-demo-content&quot;&gt;
  &lt;div class=&quot;mnc-demo-container mnc-demo-container-inline&quot;&gt;
    &lt;span class=&quot;mnc-demo-label&quot;&gt;X: ease-in&lt;/span&gt;
    &lt;div class=&quot;mnc-demo-grid&quot;&gt;
      &lt;div class=&quot;mnc-demo-line&quot; style=&quot;top: 20px;&quot;&gt;&lt;/div&gt;
      &lt;div class=&quot;mnc-demo-line&quot; style=&quot;top: 40px;&quot;&gt;&lt;/div&gt;
      &lt;div class=&quot;mnc-demo-line&quot; style=&quot;top: 60px;&quot;&gt;&lt;/div&gt;
      &lt;div class=&quot;mnc-demo-line&quot; style=&quot;top: 80px;&quot;&gt;&lt;/div&gt;
      &lt;div class=&quot;mnc-demo-line-vertical&quot; style=&quot;left: 20px;&quot;&gt;&lt;/div&gt;
      &lt;div class=&quot;mnc-demo-line-vertical&quot; style=&quot;left: 40px;&quot;&gt;&lt;/div&gt;
      &lt;div class=&quot;mnc-demo-line-vertical&quot; style=&quot;left: 60px;&quot;&gt;&lt;/div&gt;
      &lt;div class=&quot;mnc-demo-line-vertical&quot; style=&quot;left: 80px;&quot;&gt;&lt;/div&gt;
    &lt;/div&gt;

    &lt;div class=&quot;mnc-demo-dot mnc-demo-dot-straight mnc-demo-dot-ease-in&quot;&gt;&lt;/div&gt;
  &lt;/div&gt;

  &lt;div class=&quot;mnc-demo-container mnc-demo-container-inline&quot;&gt;
    &lt;span class=&quot;mnc-demo-label&quot;&gt;Y: ease-out&lt;/span&gt;
    &lt;div class=&quot;mnc-demo-grid&quot;&gt;
      &lt;div class=&quot;mnc-demo-line&quot; style=&quot;top: 20px;&quot;&gt;&lt;/div&gt;
      &lt;div class=&quot;mnc-demo-line&quot; style=&quot;top: 40px;&quot;&gt;&lt;/div&gt;
      &lt;div class=&quot;mnc-demo-line&quot; style=&quot;top: 60px;&quot;&gt;&lt;/div&gt;
      &lt;div class=&quot;mnc-demo-line&quot; style=&quot;top: 80px;&quot;&gt;&lt;/div&gt;
      &lt;div class=&quot;mnc-demo-line-vertical&quot; style=&quot;left: 20px;&quot;&gt;&lt;/div&gt;
      &lt;div class=&quot;mnc-demo-line-vertical&quot; style=&quot;left: 40px;&quot;&gt;&lt;/div&gt;
      &lt;div class=&quot;mnc-demo-line-vertical&quot; style=&quot;left: 60px;&quot;&gt;&lt;/div&gt;
      &lt;div class=&quot;mnc-demo-line-vertical&quot; style=&quot;left: 80px;&quot;&gt;&lt;/div&gt;
    &lt;/div&gt;

    &lt;div class=&quot;mnc-demo-dot mnc-demo-dot-straight mnc-demo-dot-ease-out&quot;&gt;&lt;/div&gt;
  &lt;/div&gt;

  &lt;div class=&quot;mnc-demo-container mnc-demo-container-inline&quot;&gt;
    &lt;span class=&quot;mnc-demo-label&quot;&gt;Combined&lt;/span&gt;
    &lt;div class=&quot;mnc-demo-grid&quot;&gt;
      &lt;div class=&quot;mnc-demo-line&quot; style=&quot;top: 20px;&quot;&gt;&lt;/div&gt;
      &lt;div class=&quot;mnc-demo-line&quot; style=&quot;top: 40px;&quot;&gt;&lt;/div&gt;
      &lt;div class=&quot;mnc-demo-line&quot; style=&quot;top: 60px;&quot;&gt;&lt;/div&gt;
      &lt;div class=&quot;mnc-demo-line&quot; style=&quot;top: 80px;&quot;&gt;&lt;/div&gt;
      &lt;div class=&quot;mnc-demo-line-vertical&quot; style=&quot;left: 20px;&quot;&gt;&lt;/div&gt;
      &lt;div class=&quot;mnc-demo-line-vertical&quot; style=&quot;left: 40px;&quot;&gt;&lt;/div&gt;
      &lt;div class=&quot;mnc-demo-line-vertical&quot; style=&quot;left: 60px;&quot;&gt;&lt;/div&gt;
      &lt;div class=&quot;mnc-demo-line-vertical&quot; style=&quot;left: 80px;&quot;&gt;&lt;/div&gt;
    &lt;/div&gt;

    &lt;div class=&quot;mnc-demo-dot mnc-demo-dot-combined&quot;&gt;&lt;/div&gt;
  &lt;/div&gt;

  &lt;style&gt;
    .mnc-demo-dot-ease-in {
      -webkit-animation: combined-xAxis 2.5s infinite ease-in;
      animation: combined-xAxis 2.5s infinite ease-in;
    }

    .mnc-demo-dot-ease-out {
      -webkit-animation: combined-yAxis 2.5s infinite ease-out;
      animation: combined-yAxis 2.5s infinite ease-out;
    }

    .mnc-demo-dot-combined {
      -webkit-animation: combined-xAxis 2.5s infinite ease-in;
      animation: combined-xAxis 2.5s infinite ease-in;
    }

    .mnc-demo-dot-combined::after {
      -webkit-animation: combined-yAxis 2.5s infinite ease-out;
      animation: combined-yAxis 2.5s infinite ease-out;
    }

    @keyframes combined-xAxis {
      50% {
        -webkit-animation-timing-function: ease-in;
        animation-timing-function: ease-in;
        -webkit-transform: translateX(100px);
        transform: translateX(100px);
      }
    }

    @-webkit-keyframes combined-xAxis {
      50% {
        -webkit-animation-timing-function: ease-in;
        animation-timing-function: ease-in;
        -webkit-transform: translateX(100px);
        transform: translateX(100px);
      }
    }

    @keyframes combined-yAxis {
      50% {
        -webkit-animation-timing-function: ease-out;
        animation-timing-function: ease-out;
        -webkit-transform: translateY(-100px);
        transform: translateY(-100px);
      }
    }

    @-webkit-keyframes combined-yAxis {
      50% {
        -webkit-animation-timing-function: ease-out;
        animation-timing-function: ease-out;
        -webkit-transform: translateY(-100px);
        transform: translateY(-100px);
      }
    }
  
  &lt;/style&gt;
&lt;/div&gt;

&lt;h2 id=&quot;the-implementation-one-object-per-axis&quot;&gt;The implementation: one object per axis&lt;/h2&gt;

&lt;p&gt;Unfortunately, we can’t just stack &lt;code class=&quot;highlighter-rouge&quot;&gt;transform&lt;/code&gt; animations; only the last animation to be declared would run. So, how do we actually combine two animations? We put one object inside another, and run one animation on the container element, and a different one on the child element.&lt;/p&gt;

&lt;p&gt;In all the examples above, where we’ve seen the dot move along a curved path, we’ve seen two separate elements being animated, but the container has been completely transparent. To clearly see how the two objects interact in the curved examples, we can change the container to render a bordered box:&lt;/p&gt;

&lt;div class=&quot;post-demo-content&quot;&gt;
  &lt;div class=&quot;mnc-demo-container mnc-demo-container-inline&quot;&gt;
    &lt;span class=&quot;mnc-demo-label&quot;&gt;X: container&lt;/span&gt;
    &lt;div class=&quot;mnc-demo-grid&quot;&gt;
      &lt;div class=&quot;mnc-demo-line&quot; style=&quot;top: 20px;&quot;&gt;&lt;/div&gt;
      &lt;div class=&quot;mnc-demo-line&quot; style=&quot;top: 40px;&quot;&gt;&lt;/div&gt;
      &lt;div class=&quot;mnc-demo-line&quot; style=&quot;top: 60px;&quot;&gt;&lt;/div&gt;
      &lt;div class=&quot;mnc-demo-line&quot; style=&quot;top: 80px;&quot;&gt;&lt;/div&gt;
      &lt;div class=&quot;mnc-demo-line-vertical&quot; style=&quot;left: 20px;&quot;&gt;&lt;/div&gt;
      &lt;div class=&quot;mnc-demo-line-vertical&quot; style=&quot;left: 40px;&quot;&gt;&lt;/div&gt;
      &lt;div class=&quot;mnc-demo-line-vertical&quot; style=&quot;left: 60px;&quot;&gt;&lt;/div&gt;
      &lt;div class=&quot;mnc-demo-line-vertical&quot; style=&quot;left: 80px;&quot;&gt;&lt;/div&gt;
    &lt;/div&gt;

    &lt;div class=&quot;mnc-demo-dot mnc-demo-dot-square mnc-demo-dot-straight mnc-demo-dot-ease-in&quot;&gt;&lt;/div&gt;
  &lt;/div&gt;

  &lt;div class=&quot;mnc-demo-container mnc-demo-container-inline&quot;&gt;
    &lt;span class=&quot;mnc-demo-label&quot;&gt;Y: object&lt;/span&gt;
    &lt;div class=&quot;mnc-demo-grid&quot;&gt;
      &lt;div class=&quot;mnc-demo-line&quot; style=&quot;top: 20px;&quot;&gt;&lt;/div&gt;
      &lt;div class=&quot;mnc-demo-line&quot; style=&quot;top: 40px;&quot;&gt;&lt;/div&gt;
      &lt;div class=&quot;mnc-demo-line&quot; style=&quot;top: 60px;&quot;&gt;&lt;/div&gt;
      &lt;div class=&quot;mnc-demo-line&quot; style=&quot;top: 80px;&quot;&gt;&lt;/div&gt;
      &lt;div class=&quot;mnc-demo-line-vertical&quot; style=&quot;left: 20px;&quot;&gt;&lt;/div&gt;
      &lt;div class=&quot;mnc-demo-line-vertical&quot; style=&quot;left: 40px;&quot;&gt;&lt;/div&gt;
      &lt;div class=&quot;mnc-demo-line-vertical&quot; style=&quot;left: 60px;&quot;&gt;&lt;/div&gt;
      &lt;div class=&quot;mnc-demo-line-vertical&quot; style=&quot;left: 80px;&quot;&gt;&lt;/div&gt;
    &lt;/div&gt;

    &lt;div class=&quot;mnc-demo-dot mnc-demo-dot-straight mnc-demo-dot-ease-out&quot;&gt;&lt;/div&gt;
  &lt;/div&gt;

  &lt;div class=&quot;mnc-demo-container mnc-demo-container-inline&quot;&gt;
    &lt;span class=&quot;mnc-demo-label&quot;&gt;Combined&lt;/span&gt;
    &lt;div class=&quot;mnc-demo-grid&quot;&gt;
      &lt;div class=&quot;mnc-demo-line&quot; style=&quot;top: 20px;&quot;&gt;&lt;/div&gt;
      &lt;div class=&quot;mnc-demo-line&quot; style=&quot;top: 40px;&quot;&gt;&lt;/div&gt;
      &lt;div class=&quot;mnc-demo-line&quot; style=&quot;top: 60px;&quot;&gt;&lt;/div&gt;
      &lt;div class=&quot;mnc-demo-line&quot; style=&quot;top: 80px;&quot;&gt;&lt;/div&gt;
      &lt;div class=&quot;mnc-demo-line-vertical&quot; style=&quot;left: 20px;&quot;&gt;&lt;/div&gt;
      &lt;div class=&quot;mnc-demo-line-vertical&quot; style=&quot;left: 40px;&quot;&gt;&lt;/div&gt;
      &lt;div class=&quot;mnc-demo-line-vertical&quot; style=&quot;left: 60px;&quot;&gt;&lt;/div&gt;
      &lt;div class=&quot;mnc-demo-line-vertical&quot; style=&quot;left: 80px;&quot;&gt;&lt;/div&gt;
    &lt;/div&gt;

    &lt;div class=&quot;mnc-demo-dot mnc-demo-dot-square mnc-demo-dot-combined&quot;&gt;&lt;/div&gt;
  &lt;/div&gt;

  &lt;style&gt;
    .mnc-demo-dot-square {
      border-radius: 0;
      border: 1px solid #000;
      width: 20px;
      height: 20px;
    }

    .mnc-demo-dot-square::after {
      display: none;
    }

    .mnc-demo-dot-combined.mnc-demo-dot-square::after {
      display: block;
    }

    &lt;/style&gt;
&lt;/div&gt;

&lt;p&gt;The dot sits inside the bordered box, and follows the box’s motion along the X-axis, while it itself moves up and down along the Y-axis. Remove the border of the box, and we’ve got our curved path. Rather than adding two objects in our HTML, though, we can produce a pseudo-element. If we have this in our HTML:&lt;/p&gt;

&lt;div class=&quot;language-html highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;dot&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;We can add a pseudo-element like so:&lt;/p&gt;

&lt;div class=&quot;language-css highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nc&quot;&gt;.dot&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;c&quot;&gt;/* Container. Animate along the X-axis */&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;nc&quot;&gt;.dot&lt;/span&gt;&lt;span class=&quot;nd&quot;&gt;::after&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;c&quot;&gt;/* Render dot, and animate along Y-axis */&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Then we need two separate animation blocks: one for the X-axis, and one for the Y-axis. Notice how one uses &lt;code class=&quot;highlighter-rouge&quot;&gt;ease-in&lt;/code&gt;, while the other one uses &lt;code class=&quot;highlighter-rouge&quot;&gt;ease-out&lt;/code&gt;:&lt;/p&gt;

&lt;div class=&quot;language-css highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nc&quot;&gt;.dot&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;c&quot;&gt;/* Some layout code… */&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;animation&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;xAxis&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;2.5s&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;infinite&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ease-in&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;nc&quot;&gt;.dot&lt;/span&gt;&lt;span class=&quot;nd&quot;&gt;::after&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;c&quot;&gt;/* Render dot */&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;animation&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;yAxis&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;2.5s&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;infinite&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ease-out&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;@keyframes&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;xAxis&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;50&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;%&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nl&quot;&gt;animation-timing-function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ease-in&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;nl&quot;&gt;transform&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;translateX&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;100px&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;@keyframes&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;yAxis&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;50&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;%&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nl&quot;&gt;animation-timing-function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ease-out&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;nl&quot;&gt;transform&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;translateY&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;-100px&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;With some custom bezier curves that overshoot we can produce the example showcased at the beginning of the post:&lt;/p&gt;

&lt;div class=&quot;language-css highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nc&quot;&gt;.demo-dot&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;animation&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;xAxis&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;2.5s&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;infinite&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;cubic-bezier&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;0.02&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0.01&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0.21&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;nc&quot;&gt;.demo-dot&lt;/span&gt;&lt;span class=&quot;nd&quot;&gt;::after&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;content&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;''&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;display&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;block&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;width&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;20px&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;height&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;20px&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;border-radius&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;20px&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;background-color&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;#fff&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;animation&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;yAxis&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;2.5s&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;infinite&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;cubic-bezier&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;0.3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0.27&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0.07&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;1.64&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;@keyframes&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;yAxis&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;50&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;%&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nl&quot;&gt;animation-timing-function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;cubic-bezier&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;0.02&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0.01&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0.21&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;nl&quot;&gt;transform&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;translateY&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;-100px&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;@keyframes&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;xAxis&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;50&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;%&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nl&quot;&gt;animation-timing-function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;cubic-bezier&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;0.3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0.27&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0.07&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;1.64&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;nl&quot;&gt;transform&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;translateX&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;100px&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Which brings us back to where we started:&lt;/p&gt;

&lt;div class=&quot;post-demo-content&quot;&gt;
  &lt;div class=&quot;mnc-demo-container mnc-demo-container-inline&quot;&gt;
    &lt;span class=&quot;mnc-demo-label&quot;&gt;X movement&lt;/span&gt;
    &lt;div class=&quot;mnc-demo-grid&quot;&gt;
      &lt;div class=&quot;mnc-demo-line&quot; style=&quot;top: 20px;&quot;&gt;&lt;/div&gt;
      &lt;div class=&quot;mnc-demo-line&quot; style=&quot;top: 40px;&quot;&gt;&lt;/div&gt;
      &lt;div class=&quot;mnc-demo-line&quot; style=&quot;top: 60px;&quot;&gt;&lt;/div&gt;
      &lt;div class=&quot;mnc-demo-line&quot; style=&quot;top: 80px;&quot;&gt;&lt;/div&gt;
      &lt;div class=&quot;mnc-demo-line-vertical&quot; style=&quot;left: 20px;&quot;&gt;&lt;/div&gt;
      &lt;div class=&quot;mnc-demo-line-vertical&quot; style=&quot;left: 40px;&quot;&gt;&lt;/div&gt;
      &lt;div class=&quot;mnc-demo-line-vertical&quot; style=&quot;left: 60px;&quot;&gt;&lt;/div&gt;
      &lt;div class=&quot;mnc-demo-line-vertical&quot; style=&quot;left: 80px;&quot;&gt;&lt;/div&gt;
    &lt;/div&gt;

    &lt;div class=&quot;mnc-demo-dot mnc-demo-dot-final mnc-demo-dot-final-x&quot;&gt;&lt;/div&gt;

  &lt;/div&gt;
  &lt;div class=&quot;mnc-demo-container mnc-demo-container-inline&quot;&gt;

    &lt;span class=&quot;mnc-demo-label&quot;&gt;Y movement&lt;/span&gt;
    &lt;div class=&quot;mnc-demo-grid&quot;&gt;
      &lt;div class=&quot;mnc-demo-line&quot; style=&quot;top: 20px;&quot;&gt;&lt;/div&gt;
      &lt;div class=&quot;mnc-demo-line&quot; style=&quot;top: 40px;&quot;&gt;&lt;/div&gt;
      &lt;div class=&quot;mnc-demo-line&quot; style=&quot;top: 60px;&quot;&gt;&lt;/div&gt;
      &lt;div class=&quot;mnc-demo-line&quot; style=&quot;top: 80px;&quot;&gt;&lt;/div&gt;
      &lt;div class=&quot;mnc-demo-line-vertical&quot; style=&quot;left: 20px;&quot;&gt;&lt;/div&gt;
      &lt;div class=&quot;mnc-demo-line-vertical&quot; style=&quot;left: 40px;&quot;&gt;&lt;/div&gt;
      &lt;div class=&quot;mnc-demo-line-vertical&quot; style=&quot;left: 60px;&quot;&gt;&lt;/div&gt;
      &lt;div class=&quot;mnc-demo-line-vertical&quot; style=&quot;left: 80px;&quot;&gt;&lt;/div&gt;
    &lt;/div&gt;

    &lt;div class=&quot;mnc-demo-dot mnc-demo-dot-final mnc-demo-dot-final-y&quot;&gt;&lt;/div&gt;

  &lt;/div&gt;
  &lt;div class=&quot;mnc-demo-container mnc-demo-container-inline&quot;&gt;

    &lt;span class=&quot;mnc-demo-label&quot;&gt;Curved path&lt;/span&gt;
    &lt;div class=&quot;mnc-demo-grid&quot;&gt;
      &lt;div class=&quot;mnc-demo-line&quot; style=&quot;top: 20px;&quot;&gt;&lt;/div&gt;
      &lt;div class=&quot;mnc-demo-line&quot; style=&quot;top: 40px;&quot;&gt;&lt;/div&gt;
      &lt;div class=&quot;mnc-demo-line&quot; style=&quot;top: 60px;&quot;&gt;&lt;/div&gt;
      &lt;div class=&quot;mnc-demo-line&quot; style=&quot;top: 80px;&quot;&gt;&lt;/div&gt;
      &lt;div class=&quot;mnc-demo-line-vertical&quot; style=&quot;left: 20px;&quot;&gt;&lt;/div&gt;
      &lt;div class=&quot;mnc-demo-line-vertical&quot; style=&quot;left: 40px;&quot;&gt;&lt;/div&gt;
      &lt;div class=&quot;mnc-demo-line-vertical&quot; style=&quot;left: 60px;&quot;&gt;&lt;/div&gt;
      &lt;div class=&quot;mnc-demo-line-vertical&quot; style=&quot;left: 80px;&quot;&gt;&lt;/div&gt;
    &lt;/div&gt;

    &lt;div class=&quot;mnc-demo-dot&quot;&gt;&lt;/div&gt;
  &lt;/div&gt;
&lt;/div&gt;

&lt;p&gt;You may have noticed that we’ve been using &lt;code class=&quot;highlighter-rouge&quot;&gt;@keyframes&lt;/code&gt; blocks in all of the examples so far, but that’s purely because we happened to need several keyframes to move the dot back and forth. Layered animation works just as well with the &lt;code class=&quot;highlighter-rouge&quot;&gt;transition&lt;/code&gt; property, if you only need to animate from point A to point B.&lt;/p&gt;

&lt;p&gt;If you have an absolutely positioned element you can achieve a curved path by animating the &lt;code class=&quot;highlighter-rouge&quot;&gt;left&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;bottom&lt;/code&gt; properties, of a single element, and avoid the need of a container element. There’s a good reason to avoid doing so, however: it performs significantly worse, and will trigger a redraw for every frame of the animation. Using layered animation with a pseudo-element and animating the hardware-accelerated &lt;code class=&quot;highlighter-rouge&quot;&gt;translate&lt;/code&gt; property produces a great-looking animation while making sure it also performs well.&lt;/p&gt;
</description>
				<pubDate>Thu, 07 Jan 2016 11:52:00 +0000</pubDate>
				<link>https://tobiasahlin.com/blog/curved-path-animations-in-css/</link>
				<guid isPermaLink="true">https://tobiasahlin.com/blog/curved-path-animations-in-css/</guid>
			</item>
		
			<item>
				<title>How to animate box-shadow with silky smooth performance</title>
				<description>&lt;div class=&quot;blog-banner&quot;&gt;
  &lt;div class=&quot;blog-banner-content&quot; style=&quot;height: 90px;&quot;&gt;
    &lt;div class=&quot;box-shadow-demo&quot;&gt;&lt;/div&gt;
  &lt;/div&gt;

  &lt;style&gt;
    .box-shadow-demo {
      display: inline-block;
      background-color: #fff;
      width: 90px;
      height: 90px;
      border-radius: 5px;
      box-shadow: 0 1px 2px rgba(0,0,0,0.2);
      position: relative;
      border-radius: 5px;
      -webkit-animation: scaleAnimation 3.5s infinite cubic-bezier(0.165, 0.84, 0.44, 1);
      animation: scaleAnimation 3.5s infinite cubic-bezier(0.165, 0.84, 0.44, 1);
    }

    .box-shadow-demo::after {
      content: &quot;&quot;;
      border-radius: 5px;
      position: absolute;
      z-index: -1;
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
      box-shadow: 0 5px 15px rgba(0,0,0,0.5);
      opacity: 0;
      -webkit-animation: fadeAnimation 3.5s infinite cubic-bezier(0.165, 0.84, 0.44, 1);
      animation: fadeAnimation 3.5s infinite cubic-bezier(0.165, 0.84, 0.44, 1);
    }

    @-webkit-keyframes fadeAnimation {
      0%, 80%, 100% {  opacity: 0; } 
      30%, 50% {  opacity: 1; }
    }

    @-webkit-keyframes scaleAnimation {
      0%, 80%, 100% {
        -webkit-transform: scale(1, 1);
        transform: scale(1, 1);
      } 30%, 50% {
        -webkit-transform: scale(1.3, 1.3);
        transform: scale(1.3, 1.3);
      }
    }

    @keyframes fadeAnimation {
      0%, 80%, 100% {  opacity: 0; } 
      30%, 50% {  opacity: 1; }
    }

    @keyframes scaleAnimation {
      0%, 80%, 100% { 
        -webkit-transform: scale(1, 1);
        transform: scale(1, 1);
      } 30%, 50% {
        -webkit-transform: scale(1.3, 1.3);
        transform: scale(1.3, 1.3);
      }
    }

    &lt;/style&gt;

&lt;/div&gt;

&lt;!--more--&gt;

&lt;p&gt;How do you animate the &lt;code class=&quot;highlighter-rouge&quot;&gt;box-shadow&lt;/code&gt; property in CSS without causing re-paints on every frame, and heavily impacting the performance of your page? Short answer: you don’t. Animating a change of &lt;code class=&quot;highlighter-rouge&quot;&gt;box-shadow&lt;/code&gt; &lt;em&gt;will&lt;/em&gt; hurt performance.&lt;/p&gt;

&lt;p&gt;There’s an easy way of mimicking the same effect, however, with minimal re-paints, that should let your animations run at a solid 60 FPS: animate the &lt;code class=&quot;highlighter-rouge&quot;&gt;opacity&lt;/code&gt; of a pseudo-element.&lt;/p&gt;

&lt;h2 id=&quot;demo&quot;&gt;Demo&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;/demo/animate-box-shadow/&quot;&gt;&lt;img src=&quot;/static/animate-box-shadow/demo.gif&quot; alt=&quot;Recording of box-shadow demo in action&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;/demo/animate-box-shadow/&quot;&gt;Have a look at the demo&lt;/a&gt; and compare the two different techniques we’ll be exploring. If the two examples look the same to you, that’s the point. The only difference is how we apply and animate the shadow. On the left we’re animating &lt;code class=&quot;highlighter-rouge&quot;&gt;box-shadow&lt;/code&gt; on &lt;code class=&quot;highlighter-rouge&quot;&gt;hover&lt;/code&gt;, and on the right we’re adding a pseudo-element with &lt;code class=&quot;highlighter-rouge&quot;&gt;:after&lt;/code&gt;, applying the shadow to that, and animating the &lt;code class=&quot;highlighter-rouge&quot;&gt;opacity&lt;/code&gt; of that element.&lt;/p&gt;

&lt;p&gt;If you bring up your developer tools and hover one of these items, you should see something similar to this (green bars are paints; less is better):&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;/demo/animate-box-shadow/&quot;&gt;&lt;img src=&quot;/static/animate-box-shadow/animation-performance.png&quot; alt=&quot;Animation performance when hovering the different boxes&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;There are clearly more re-paints when hovering the cards on the left side (animating &lt;code class=&quot;highlighter-rouge&quot;&gt;box-shadow&lt;/code&gt;), compared to hovering the cards on the right side (which animate the &lt;code class=&quot;highlighter-rouge&quot;&gt;opacity&lt;/code&gt; of their pseudo-element).&lt;/p&gt;

&lt;p&gt;Why are we seeing this effect? There are &lt;a href=&quot;http://csstriggers.com&quot;&gt;very few CSS properties&lt;/a&gt; that can be animated without constantly triggering repaints for every frame, namely &lt;code class=&quot;highlighter-rouge&quot;&gt;opacity&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;transform&lt;/code&gt;. We minimize the amount of repaints (and work that your browser has to do) by sticking to only changing these two properties during the animation.&lt;/p&gt;

&lt;p&gt;This is the &lt;strong&gt;critical difference&lt;/strong&gt; between the two techniques, stripping out all of the other layout styles:&lt;/p&gt;

&lt;div class=&quot;language-css highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;/* The slow way */&lt;/span&gt;
&lt;span class=&quot;nc&quot;&gt;.make-it-slow&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;box-shadow&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;1px&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;2px&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;rgba&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;0.15&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;transition&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;box-shadow&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0.3s&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ease-in-out&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;/* Transition to a bigger shadow on hover */&lt;/span&gt;
&lt;span class=&quot;nc&quot;&gt;.make-it-slow&lt;/span&gt;&lt;span class=&quot;nd&quot;&gt;:hover&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;box-shadow&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;5px&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;15px&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;rgba&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;0.3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;/* The fast way */&lt;/span&gt;
&lt;span class=&quot;nc&quot;&gt;.make-it-fast&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;box-shadow&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;1px&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;2px&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;rgba&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;0.15&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;/* Pre-render the bigger shadow, but hide it */&lt;/span&gt;
&lt;span class=&quot;nc&quot;&gt;.make-it-fast&lt;/span&gt;&lt;span class=&quot;nd&quot;&gt;::after&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;box-shadow&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;5px&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;15px&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;rgba&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;0.3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;opacity&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;transition&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;opacity&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0.3s&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ease-in-out&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;/* Transition to showing the bigger shadow on hover */&lt;/span&gt;
&lt;span class=&quot;nc&quot;&gt;.make-it-fast&lt;/span&gt;&lt;span class=&quot;nd&quot;&gt;:hover::after&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;opacity&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;In the example that performs better we have two layers: one for the box, and one for the shadow, and only animate the &lt;code class=&quot;highlighter-rouge&quot;&gt;opacity&lt;/code&gt; property of the shadow layer.&lt;/p&gt;

&lt;h2 id=&quot;breaking-it-down&quot;&gt;Breaking it down&lt;/h2&gt;

&lt;p&gt;With the fundamentals in place, let’s look at how to create &lt;a href=&quot;/demo/animate-box-shadow/&quot;&gt;the 3D card effect showcased in the demo&lt;/a&gt;. The first step is to move the shadow to a pseudo-element, like we did above. Let’s also add all of the layout code to create the card:&lt;/p&gt;

&lt;div class=&quot;language-css highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;/* All HTML you need is &amp;lt;div class=&quot;box&quot;&amp;gt;&amp;lt;/div&amp;gt; */&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;/* Create a simple white box, and add the shadow for the initial state */&lt;/span&gt;
&lt;span class=&quot;nc&quot;&gt;.box&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;position&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;relative&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;display&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;inline-block&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;width&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;100px&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;height&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;100px&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;border-radius&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;5px&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;background-color&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;#fff&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;box-shadow&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;1px&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;2px&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;rgba&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;0.15&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;transition&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;all&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0.3s&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ease-in-out&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;/* Create the hidden pseudo-element */&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;/* include the shadow for the end state */&lt;/span&gt;
&lt;span class=&quot;nc&quot;&gt;.box&lt;/span&gt;&lt;span class=&quot;nd&quot;&gt;::after&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;content&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;''&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;position&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;absolute&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;z-index&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;-1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;width&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;100%&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;height&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;100%&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;opacity&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;border-radius&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;5px&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;box-shadow&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;5px&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;15px&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;rgba&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;0.3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;transition&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;opacity&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0.3s&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ease-in-out&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Note that we’re adding a &lt;code class=&quot;highlighter-rouge&quot;&gt;transition&lt;/code&gt; to both the &lt;code class=&quot;highlighter-rouge&quot;&gt;.box&lt;/code&gt;, and &lt;code class=&quot;highlighter-rouge&quot;&gt;.box::after&lt;/code&gt;, since we’re going to animate both of these elements: &lt;code class=&quot;highlighter-rouge&quot;&gt;transform&lt;/code&gt; for &lt;code class=&quot;highlighter-rouge&quot;&gt;.box&lt;/code&gt;, and &lt;code class=&quot;highlighter-rouge&quot;&gt;opacity&lt;/code&gt; for &lt;code class=&quot;highlighter-rouge&quot;&gt;.box::after&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;These styles give us a white box with a subtle &lt;code class=&quot;highlighter-rouge&quot;&gt;box-shadow&lt;/code&gt;. The stronger shadow from &lt;code class=&quot;highlighter-rouge&quot;&gt;.box::after&lt;/code&gt; is completely hidden at this point, and you can’t interact with the box:&lt;/p&gt;

&lt;div class=&quot;post-demo-content&quot;&gt;
  &lt;div class=&quot;box&quot;&gt;&lt;/div&gt;

  &lt;style&gt;

  .box {
    position: relative;
    display: inline-block;
    width: 100px;
    height: 100px;
    border-radius: 5px;
    background-color: #fff;
    box-shadow: 0 1px 2px rgba(0,0,0,0.1);
    transition: all 0.3s ease-in-out;
  }
  &lt;/style&gt;
&lt;/div&gt;

&lt;p&gt;To create the same effect as in the &lt;a href=&quot;/demo/animate-box-shadow/&quot;&gt;demo&lt;/a&gt;, now all we need to do is to scale up the &lt;code class=&quot;highlighter-rouge&quot;&gt;.box&lt;/code&gt; on hover, and fade in the pseudo-element and its shadow:&lt;/p&gt;

&lt;div class=&quot;language-css highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;/* Scale up the box */&lt;/span&gt;
&lt;span class=&quot;nc&quot;&gt;.box&lt;/span&gt;&lt;span class=&quot;nd&quot;&gt;:hover&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;transform&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;scale&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;1.2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;1.2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;/* Fade in the pseudo-element with the bigger shadow */&lt;/span&gt;
&lt;span class=&quot;nc&quot;&gt;.box&lt;/span&gt;&lt;span class=&quot;nd&quot;&gt;:hover::after&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;opacity&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;That’s it! Hover the box to preview the effect:&lt;/p&gt;

&lt;div class=&quot;post-demo-content&quot;&gt;
  &lt;div class=&quot;box2&quot;&gt;&lt;/div&gt;

  &lt;style&gt;

  .box2 {
    position: relative;
    display: inline-block;
    width: 100px;
    height: 100px;
    border-radius: 5px;
    background-color: #fff;
    box-shadow: 0 1px 2px rgba(0,0,0,0.1);
    -webkit-transition: all 0.6s cubic-bezier(0.165, 0.84, 0.44, 1);
    transition: all 0.6s cubic-bezier(0.165, 0.84, 0.44, 1);
  }

  /* Create the hidden pseudo-element */
  /* include the shadow for the end state */
  .box2::after {
    content: '';
    position: absolute;
    z-index: -1;
    width: 100%;
    height: 100%;
    border-radius: 5px;
    left: 0;
    top: 0;
    opacity: 0;
    box-shadow: 0 5px 15px rgba(0,0,0,0.3);
    -webkit-transition: all 0.6s cubic-bezier(0.165, 0.84, 0.44, 1);
    transition: all 0.6s cubic-bezier(0.165, 0.84, 0.44, 1)
  }

  .box2:hover {
    -webkit-transform: scale(1.25, 1.25);
    transform: scale(1.25, 1.25);
  }

  .box2:hover::after {
      opacity: 1;
  }
  &lt;/style&gt;
&lt;/div&gt;

&lt;p&gt;To summarize, here’s all the CSS, with all vendor prefixes, and some custom easing for additional ✨👌:&lt;/p&gt;

&lt;div class=&quot;language-css highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nc&quot;&gt;.box&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;position&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;relative&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;display&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;inline-block&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;width&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;100px&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;height&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;100px&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;background-color&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;#fff&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;border-radius&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;5px&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;box-shadow&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;1px&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;2px&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;rgba&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0.1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;border-radius&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;5px&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;-webkit-transition&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;all&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0.6s&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;cubic-bezier&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;0.165&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0.84&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0.44&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;transition&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;all&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0.6s&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;cubic-bezier&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;0.165&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0.84&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0.44&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;nc&quot;&gt;.box&lt;/span&gt;&lt;span class=&quot;nd&quot;&gt;::after&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;content&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&quot;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;border-radius&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;5px&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;position&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;absolute&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;z-index&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;-1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;top&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;left&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;width&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;100%&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;height&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;100%&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;box-shadow&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;5px&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;15px&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;rgba&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0.3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;opacity&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;-webkit-transition&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;all&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0.6s&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;cubic-bezier&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;0.165&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0.84&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0.44&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;transition&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;all&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0.6s&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;cubic-bezier&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;0.165&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0.84&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0.44&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;nc&quot;&gt;.box&lt;/span&gt;&lt;span class=&quot;nd&quot;&gt;:hover&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;-webkit-transform&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;scale&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;1.25&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;1.25&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;transform&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;scale&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;1.25&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;1.25&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;nc&quot;&gt;.box&lt;/span&gt;&lt;span class=&quot;nd&quot;&gt;:hover::after&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nl&quot;&gt;opacity&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;That’s certainly a lot of CSS to achieve the same effect as simply animating &lt;code class=&quot;highlighter-rouge&quot;&gt;box-shadow&lt;/code&gt;, just with improved performance. Why bother?&lt;/p&gt;

&lt;p&gt;Even if your desktop likely handles animating &lt;code class=&quot;highlighter-rouge&quot;&gt;box-shadow&lt;/code&gt; without any issues, your phone may not, and even your desktop may start to stutter when animating a more complex layout.&lt;/p&gt;

&lt;p&gt;Keep transitions and animations to only &lt;code class=&quot;highlighter-rouge&quot;&gt;transform&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;opacity&lt;/code&gt;, and you’re certain to achieve the best possible performance, and with that, the best possible user experience.&lt;/p&gt;
</description>
				<pubDate>Wed, 18 Nov 2015 14:52:00 +0000</pubDate>
				<link>https://tobiasahlin.com/blog/how-to-animate-box-shadow/</link>
				<guid isPermaLink="true">https://tobiasahlin.com/blog/how-to-animate-box-shadow/</guid>
			</item>
		
			<item>
				<title>Google Web Font Inspiration with TypeSource</title>
				<description>&lt;div class=&quot;blog-banner&quot;&gt;
  &lt;div class=&quot;blog-banner-content&quot;&gt;
    &lt;img src=&quot;/static/typesource.svg&quot; alt=&quot;TypeSource&quot; width=&quot;90&quot; /&gt;
  &lt;/div&gt;
&lt;/div&gt;

&lt;!--more--&gt;

&lt;p&gt;If you’ve been looking through Google’s directory of &lt;a href=&quot;https://www.google.com/fonts&quot;&gt;Web Fonts&lt;/a&gt; in search for fonts to use in your next project, you might have felt your inspiration quickly drain. It can be difficult to imagine how a font would look in use when you’re left with a long list of black text on white.&lt;/p&gt;

&lt;p&gt;I built &lt;a href=&quot;/typesource/&quot;&gt;Typesource&lt;/a&gt; to make it easier to find and match Google Web Fonts. I’ve carefully crafted each example, exploring different styles, combinations, and color schemes in every composition. In addition to the feed of inspiration, the HTML/CSS is available for all examples, so you can copy and paste the code into your project and quickly get started with your web type compositions.&lt;/p&gt;

&lt;p class=&quot;center-content&quot;&gt;
  &lt;a href=&quot;/typesource/&quot; class=&quot;outlined-button&quot;&gt;View TypeSource&lt;/a&gt;
&lt;/p&gt;

&lt;p&gt;I’ve posted 10 examples so far, and more are incoming. Here are some highlights:&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;/typesource/11-sense-of-style/&quot;&gt;
 &lt;img src=&quot;/static/typesource/typesource01.png&quot; alt=&quot;Google Web Font example&quot; /&gt;
&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;/typesource/10-wait-until-monday/&quot;&gt;
 &lt;img src=&quot;/static/typesource/typesource02.jpg&quot; alt=&quot;Google Web Font example&quot; /&gt;
&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;/typesource/09-history-of-swedish-meatballs/&quot;&gt;
 &lt;img src=&quot;/static/typesource/typesource03.png&quot; alt=&quot;Google Web Font example&quot; /&gt;
&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;/typesource/04-how-climate-change-will-affect-you/&quot;&gt;
 &lt;img src=&quot;/static/typesource/typesource04.jpg&quot; alt=&quot;Google Web Font example&quot; /&gt;
&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;/typesource/05-perfection/&quot;&gt;
 &lt;img src=&quot;/static/typesource/typesource05.png&quot; alt=&quot;Google Web Font example&quot; /&gt;
&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;/typesource/06-a-search/&quot;&gt;
 &lt;img src=&quot;/static/typesource/typesource06.jpg&quot; alt=&quot;Google Web Font example&quot; /&gt;
&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;center-content&quot;&gt;
  &lt;a href=&quot;/typesource/&quot; class=&quot;outlined-button&quot;&gt;See all TypeSource examples&lt;/a&gt;
&lt;/p&gt;
</description>
				<pubDate>Mon, 16 Nov 2015 13:10:00 +0000</pubDate>
				<link>https://tobiasahlin.com/blog/google-web-font-inspiration/</link>
				<guid isPermaLink="true">https://tobiasahlin.com/blog/google-web-font-inspiration/</guid>
			</item>
		
			<item>
				<title>Copy Lorem Ipsum from your Menu Bar with Loremify</title>
				<description>&lt;div class=&quot;blog-banner&quot;&gt;
  &lt;div class=&quot;blog-banner-content&quot; style=&quot;height: 120px;&quot;&gt;
    &lt;img src=&quot;/static/loremify.png&quot; alt=&quot;Loremify&quot; width=&quot;120&quot; /&gt;
  &lt;/div&gt;
&lt;/div&gt;

&lt;!--more--&gt;

&lt;p&gt;&lt;a href=&quot;http://kallepersson.se&quot;&gt;Kalle Persson&lt;/a&gt; and I just built and released a small utility app for OS X. &lt;a href=&quot;http://loremify.com/&quot;&gt;Loremify&lt;/a&gt; is a free mac app to quickly copy Lorem Ipsum to your clipboard. It lets you wrap the dummy text in html or markdown, specify the amount of text, and copy it to your clipboard—all in one click. It sits in your OS X menu bar, and it’s &lt;a href=&quot;https://itunes.apple.com/app/loremify/id1028877632&quot;&gt;available on the App Store&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/static/loremify.gif&quot; alt=&quot;Demo of Loremify&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Switch to Markdown (or plain text) with the menu in the top left:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/static/loremify-markdown.gif&quot; alt=&quot;Demo of switching output language in Loremify&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Loremify is still in its infancy, but we’d love to hear from you if you find it useful (or not useful). Reach out on twitter at &lt;a href=&quot;http://twitter.com/tobiasahlin&quot;&gt;@tobiasahlin&lt;/a&gt; and &lt;a href=&quot;https://twitter.com/kallepersson&quot;&gt;@kallepersson&lt;/a&gt;, and let us know what you think.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://itunes.apple.com/app/loremify/id1028877632&quot;&gt;&lt;img src=&quot;/static/appstore.svg&quot; width=&quot;200&quot; class=&quot;aligncenter&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

</description>
				<pubDate>Sun, 15 Nov 2015 13:10:00 +0000</pubDate>
				<link>https://tobiasahlin.com/blog/lorem-ipsum-in-your-menu-bar-with-loremify/</link>
				<guid isPermaLink="true">https://tobiasahlin.com/blog/lorem-ipsum-in-your-menu-bar-with-loremify/</guid>
			</item>
		
	</channel>
</rss>
